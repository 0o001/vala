<?xml version="1.0"?>
<api version="1.0">
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Clutter">
    <enum name="ClutterActorFlags" type="flags" type-name="ClutterActorFlags">
      <member name="CLUTTER_ACTOR_MAPPED" value=""/>
      <member name="CLUTTER_ACTOR_REALIZED" value=""/>
    </enum>
    <enum name="ClutterDebugFlag" type="flags" type-name="ClutterDebugFlag">
      <member name="CLUTTER_DEBUG_MISC" value=""/>
      <member name="CLUTTER_DEBUG_ACTOR" value=""/>
      <member name="CLUTTER_DEBUG_TEXTURE" value=""/>
      <member name="CLUTTER_DEBUG_EVENT" value=""/>
      <member name="CLUTTER_DEBUG_PAINT" value=""/>
      <member name="CLUTTER_DEBUG_GL" value=""/>
      <member name="CLUTTER_DEBUG_ALPHA" value=""/>
      <member name="CLUTTER_DEBUG_BEHAVIOUR" value=""/>
      <member name="CLUTTER_DEBUG_PANGO" value=""/>
      <member name="CLUTTER_DEBUG_BACKEND" value=""/>
      <member name="CLUTTER_DEBUG_SCHEDULER" value=""/>
    </enum>
    <enum name="ClutterEventType" type="enum" type-name="ClutterEventType">
      <member name="CLUTTER_NOTHING" value="0"/>
      <member name="CLUTTER_KEY_PRESS" value=""/>
      <member name="CLUTTER_KEY_RELEASE" value=""/>
      <member name="CLUTTER_MOTION" value=""/>
      <member name="CLUTTER_BUTTON_PRESS" value=""/>
      <member name="CLUTTER_2BUTTON_PRESS" value=""/>
      <member name="CLUTTER_3BUTTON_PRESS" value=""/>
      <member name="CLUTTER_BUTTON_RELEASE" value=""/>
      <member name="CLUTTER_SCROLL" value=""/>
      <member name="CLUTTER_STAGE_STATE" value=""/>
      <member name="CLUTTER_DESTROY_NOTIFY" value=""/>
      <member name="CLUTTER_CLIENT_MESSAGE" value=""/>
      <member name="CLUTTER_DELETE" value=""/>
    </enum>
    <enum name="ClutterFeatureFlags" type="flags" type-name="ClutterFeatureFlags">
      <member name="CLUTTER_FEATURE_TEXTURE_RECTANGLE" value=""/>
      <member name="CLUTTER_FEATURE_SYNC_TO_VBLANK" value=""/>
      <member name="CLUTTER_FEATURE_TEXTURE_YUV" value=""/>
      <member name="CLUTTER_FEATURE_TEXTURE_READ_PIXELS" value=""/>
      <member name="CLUTTER_FEATURE_STAGE_STATIC" value=""/>
      <member name="CLUTTER_FEATURE_STAGE_USER_RESIZE" value=""/>
      <member name="CLUTTER_FEATURE_STAGE_CURSOR" value=""/>
    </enum>
    <enum name="ClutterGravity" type="enum" type-name="ClutterGravity">
      <member name="CLUTTER_GRAVITY_NONE" value="0"/>
      <member name="CLUTTER_GRAVITY_NORTH" value=""/>
      <member name="CLUTTER_GRAVITY_NORTH_EAST" value=""/>
      <member name="CLUTTER_GRAVITY_EAST" value=""/>
      <member name="CLUTTER_GRAVITY_SOUTH_EAST" value=""/>
      <member name="CLUTTER_GRAVITY_SOUTH" value=""/>
      <member name="CLUTTER_GRAVITY_SOUTH_WEST" value=""/>
      <member name="CLUTTER_GRAVITY_WEST" value=""/>
      <member name="CLUTTER_GRAVITY_NORTH_WEST" value=""/>
      <member name="CLUTTER_GRAVITY_CENTER" value=""/>
    </enum>
    <enum name="ClutterInitError" type="enum" type-name="ClutterInitError">
      <member name="CLUTTER_INIT_SUCCESS" value="1"/>
      <member name="CLUTTER_INIT_ERROR_UNKOWN" value="0"/>
      <member name="CLUTTER_INIT_ERROR_THREADS" value="-1"/>
      <member name="CLUTTER_INIT_ERROR_BACKEND" value="-2"/>
      <member name="CLUTTER_INIT_ERROR_INTERNAL" value="-3"/>
    </enum>
    <enum name="ClutterLayoutFlags" type="flags" type-name="ClutterLayoutFlags">
      <member name="CLUTTER_LAYOUT_NONE" value="0"/>
      <member name="CLUTTER_LAYOUT_WIDTH_FOR_HEIGHT" value=""/>
      <member name="CLUTTER_LAYOUT_HEIGHT_FOR_WIDTH" value=""/>
      <member name="CLUTTER_LAYOUT_NATURAL" value=""/>
      <member name="CLUTTER_LAYOUT_TUNABLE" value=""/>
    </enum>
    <enum name="ClutterModifierType" type="flags" type-name="ClutterModifierType">
      <member name="CLUTTER_SHIFT_MASK" value=""/>
      <member name="CLUTTER_LOCK_MASK" value=""/>
      <member name="CLUTTER_CONTROL_MASK" value=""/>
      <member name="CLUTTER_MOD1_MASK" value=""/>
      <member name="CLUTTER_MOD2_MASK" value=""/>
      <member name="CLUTTER_MOD3_MASK" value=""/>
      <member name="CLUTTER_MOD4_MASK" value=""/>
      <member name="CLUTTER_MOD5_MASK" value=""/>
      <member name="CLUTTER_BUTTON1_MASK" value=""/>
      <member name="CLUTTER_BUTTON2_MASK" value=""/>
      <member name="CLUTTER_BUTTON3_MASK" value=""/>
      <member name="CLUTTER_BUTTON4_MASK" value=""/>
      <member name="CLUTTER_BUTTON5_MASK" value=""/>
    </enum>
    <enum name="ClutterPackType" type="enum" type-name="ClutterPackType">
      <member name="CLUTTER_PACK_START" value=""/>
      <member name="CLUTTER_PACK_END" value=""/>
    </enum>
    <enum name="ClutterRotateAxis" type="enum" type-name="ClutterRotateAxis">
      <member name="CLUTTER_X_AXIS" value=""/>
      <member name="CLUTTER_Y_AXIS" value=""/>
      <member name="CLUTTER_Z_AXIS" value=""/>
    </enum>
    <enum name="ClutterRotateDirection" type="enum" type-name="ClutterRotateDirection">
      <member name="CLUTTER_ROTATE_CW" value=""/>
      <member name="CLUTTER_ROTATE_CCW" value=""/>
    </enum>
    <enum name="ClutterScrollDirection" type="enum" type-name="ClutterScrollDirection">
      <member name="CLUTTER_SCROLL_UP" value=""/>
      <member name="CLUTTER_SCROLL_DOWN" value=""/>
      <member name="CLUTTER_SCROLL_LEFT" value=""/>
      <member name="CLUTTER_SCROLL_RIGHT" value=""/>
    </enum>
    <enum name="ClutterStageState" type="enum" type-name="ClutterStageState">
      <member name="CLUTTER_STAGE_STATE_FULLSCREEN" value=""/>
      <member name="CLUTTER_STAGE_STATE_MAXIMIZED" value=""/>
      <member name="CLUTTER_STAGE_STATE_MINIMIZED" value=""/>
      <member name="CLUTTER_STAGE_STATE_OFFSCREEN" value=""/>
    </enum>
    <enum name="ClutterTextureError" type="enum" type-name="ClutterTextureError">
      <member name="CLUTTER_TEXTURE_ERROR_OUT_OF_MEMORY" value=""/>
      <member name="CLUTTER_TEXTURE_ERROR_NO_YUV" value=""/>
    </enum>
    <enum name="ClutterTextureFlags" type="flags" type-name="ClutterTextureFlags">
      <member name="CLUTTER_TEXTURE_RGB_FLAG_BGR" value=""/>
      <member name="CLUTTER_TEXTURE_RGB_FLAG_PREMULT" value=""/>
      <member name="CLUTTER_TEXTURE_YUV_FLAG_YUV2" value=""/>
    </enum>
    <callback name="ClutterAlphaFunc" type-name="ClutterAlphaFunc">
      <return-type type="guint32"/>
      <parameters>
        <parameter name="alpha" type="ClutterAlpha*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClutterBehaviourForeachFunc" type-name="ClutterBehaviourForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="behaviour" type="ClutterBehaviour*"/>
        <parameter name="actor" type="ClutterActor*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClutterCallback" type-name="ClutterCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="actor" type="ClutterActor*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="ClutterEffectCompleteFunc" type-name="ClutterEffectCompleteFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="actor" type="ClutterActor*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <interface get-type="" name="ClutterContainer" type-name="ClutterContainer">
      <signal name="actor_added" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <signal name="actor_removed" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <vfunc name="add">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="foreach">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="callback" type="ClutterCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </vfunc>
      <method name="add" symbol="clutter_container_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="first_actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="add_actor" symbol="clutter_container_add_actor">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="add_valist" symbol="clutter_container_add_valist">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="first_actor" type="ClutterActor*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="foreach" symbol="clutter_container_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="callback" type="ClutterCallback"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="get_children" symbol="clutter_container_get_children">
        <return-type type="GList*"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_container_get_type">
        <return-type type="GType"/>
      </method>
      <method name="remove" symbol="clutter_container_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="first_actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="remove_actor" symbol="clutter_container_remove_actor">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="remove_valist" symbol="clutter_container_remove_valist">
        <return-type type="void"/>
        <parameters>
          <parameter name="container" type="ClutterContainer*"/>
          <parameter name="first_actor" type="ClutterActor*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
    </interface>
    <interface get-type="" name="ClutterLayout" type-name="ClutterLayout">
      <property name="layout-flags" readable="1" type="ClutterLayoutFlags"/>
      <vfunc name="get_layout_flags">
        <return-type type="ClutterLayoutFlags"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
        </parameters>
      </vfunc>
      <vfunc name="width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="width" type="ClutterUnit*"/>
          <parameter name="height" type="ClutterUnit"/>
        </parameters>
      </vfunc>
      <vfunc name="height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="width" type="ClutterUnit"/>
          <parameter name="height" type="ClutterUnit*"/>
        </parameters>
      </vfunc>
      <vfunc name="natural_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="width" type="ClutterUnit*"/>
          <parameter name="height" type="ClutterUnit*"/>
        </parameters>
      </vfunc>
      <vfunc name="tune_request">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="given_width" type="ClutterUnit"/>
          <parameter name="given_height" type="ClutterUnit"/>
          <parameter name="width" type="ClutterUnit*"/>
          <parameter name="height" type="ClutterUnit*"/>
        </parameters>
      </vfunc>
      <method name="get_layout_flags" symbol="clutter_layout_get_layout_flags">
        <return-type type="ClutterLayoutFlags"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_layout_get_type">
        <return-type type="GType"/>
      </method>
      <method name="height_for_width" symbol="clutter_layout_height_for_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint*"/>
        </parameters>
      </method>
      <method name="natural_request" symbol="clutter_layout_natural_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="width" type="gint*"/>
          <parameter name="height" type="gint*"/>
        </parameters>
      </method>
      <method name="tune_request" symbol="clutter_layout_tune_request">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="given_width" type="gint"/>
          <parameter name="given_height" type="gint"/>
          <parameter name="width" type="gint*"/>
          <parameter name="height" type="gint*"/>
        </parameters>
      </method>
      <method name="width_for_height" symbol="clutter_layout_width_for_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="layout" type="ClutterLayout*"/>
          <parameter name="width" type="gint*"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
    </interface>
    <interface get-type="" name="ClutterMedia" type-name="ClutterMedia">
      <property name="uri" readable="1" type="gchar*" writable="1"/>
      <property name="playing" readable="1" type="gboolean" writable="1"/>
      <property name="position" readable="1" type="gint" writable="1"/>
      <property name="volume" readable="1" type="gdouble" writable="1"/>
      <property name="can-seek" readable="1" type="gboolean"/>
      <property name="buffer-percent" readable="1" type="gint"/>
      <property name="duration" readable="1" type="gint"/>
      <signal name="eos" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </signal>
      <signal name="error" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="error" type="GError*"/>
        </parameters>
      </signal>
      <vfunc name="set_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="uri" type="const-char*"/>
        </parameters>
      </vfunc>
      <vfunc name="set_playing">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="playing" type="gboolean"/>
        </parameters>
      </vfunc>
      <vfunc name="get_playing">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </vfunc>
      <vfunc name="set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="position" type="int"/>
        </parameters>
      </vfunc>
      <vfunc name="get_position">
        <return-type type="int"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </vfunc>
      <vfunc name="set_volume">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="volume" type="double"/>
        </parameters>
      </vfunc>
      <vfunc name="get_volume">
        <return-type type="double"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </vfunc>
      <vfunc name="can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </vfunc>
      <vfunc name="get_buffer_percent">
        <return-type type="int"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </vfunc>
      <vfunc name="get_duration">
        <return-type type="int"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </vfunc>
      <method name="get_buffer_percent" symbol="clutter_media_get_buffer_percent">
        <return-type type="int"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="get_can_seek" symbol="clutter_media_get_can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="get_duration" symbol="clutter_media_get_duration">
        <return-type type="int"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="get_playing" symbol="clutter_media_get_playing">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="get_position" symbol="clutter_media_get_position">
        <return-type type="int"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_media_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_uri" symbol="clutter_media_get_uri">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="get_volume" symbol="clutter_media_get_volume">
        <return-type type="double"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
        </parameters>
      </method>
      <method name="set_filename" symbol="clutter_media_set_filename">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_playing" symbol="clutter_media_set_playing">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="playing" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_position" symbol="clutter_media_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="position" type="int"/>
        </parameters>
      </method>
      <method name="set_uri" symbol="clutter_media_set_uri">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="uri" type="const-char*"/>
        </parameters>
      </method>
      <method name="set_volume" symbol="clutter_media_set_volume">
        <return-type type="void"/>
        <parameters>
          <parameter name="media" type="ClutterMedia*"/>
          <parameter name="volume" type="double"/>
        </parameters>
      </method>
    </interface>
    <object get-type="" name="ClutterActor" parent="GInitiallyUnowned" type-name="ClutterActor">
      <field name="flags" readable="1" type="guint32" writable="1"/>
      <field name="private_flags" type="guint32"/>
      <field name="priv" type="ClutterActorPrivate*"/>
      <property name="x" readable="1" type="gint" writable="1"/>
      <property name="y" readable="1" type="gint" writable="1"/>
      <property name="width" readable="1" type="gint" writable="1"/>
      <property name="height" readable="1" type="gint" writable="1"/>
      <property construct="1" name="opacity" readable="1" type="uchar" writable="1"/>
      <property name="visible" readable="1" type="gboolean" writable="1"/>
      <property name="has-clip" readable="1" type="gboolean"/>
      <property name="clip" readable="1" type="ClutterGeometry" writable="1"/>
      <property name="name" readable="1" type="gchar*" writable="1"/>
      <signal name="destroy" when="CLEANUP">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <signal name="show" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <signal name="hide" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <signal name="parent_set" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="old_parent" type="ClutterActor*"/>
        </parameters>
      </signal>
      <vfunc name="show_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="hide_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="realize">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="unrealize">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="paint">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="request_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="box" type="ClutterActorBox*"/>
        </parameters>
      </vfunc>
      <vfunc name="query_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="box" type="ClutterActorBox*"/>
        </parameters>
      </vfunc>
      <vfunc name="set_depth">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="depth" type="gint"/>
        </parameters>
      </vfunc>
      <vfunc name="get_depth">
        <return-type type="gint"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </vfunc>
      <vfunc name="pick">
        <return-type type="void"/>
        <parameters>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </vfunc>
      <method name="apply_transform_to_point" symbol="clutter_actor_apply_transform_to_point">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="point" type="ClutterVertex*"/>
          <parameter name="vertex" type="ClutterVertex*"/>
        </parameters>
      </method>
      <method name="destroy" symbol="clutter_actor_destroy">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_abs_position" symbol="clutter_actor_get_abs_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="x" type="gint*"/>
          <parameter name="y" type="gint*"/>
        </parameters>
      </method>
      <method name="get_abs_size" symbol="clutter_actor_get_abs_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="width" type="guint*"/>
          <parameter name="height" type="guint*"/>
        </parameters>
      </method>
      <method name="get_coords" symbol="clutter_actor_get_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="x_1" type="gint*"/>
          <parameter name="y_1" type="gint*"/>
          <parameter name="x_2" type="gint*"/>
          <parameter name="y_2" type="gint*"/>
        </parameters>
      </method>
      <method name="get_depth" symbol="clutter_actor_get_depth">
        <return-type type="gint"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_geometry" symbol="clutter_actor_get_geometry">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="geometry" type="ClutterGeometry*"/>
        </parameters>
      </method>
      <method name="get_height" symbol="clutter_actor_get_height">
        <return-type type="guint"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_id" symbol="clutter_actor_get_id">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_name" symbol="clutter_actor_get_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_opacity" symbol="clutter_actor_get_opacity">
        <return-type type="guint8"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_parent" symbol="clutter_actor_get_parent">
        <return-type type="ClutterActor*"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_rxang" symbol="clutter_actor_get_rxang">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_rxangx" symbol="clutter_actor_get_rxangx">
        <return-type type="ClutterFixed"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_ryang" symbol="clutter_actor_get_ryang">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_ryangx" symbol="clutter_actor_get_ryangx">
        <return-type type="ClutterFixed"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_rzang" symbol="clutter_actor_get_rzang">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_rzangx" symbol="clutter_actor_get_rzangx">
        <return-type type="ClutterFixed"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_scale" symbol="clutter_actor_get_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="scale_x" type="gdouble*"/>
          <parameter name="scale_y" type="gdouble*"/>
        </parameters>
      </method>
      <method name="get_scalex" symbol="clutter_actor_get_scalex">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="scale_x" type="ClutterFixed*"/>
          <parameter name="scale_y" type="ClutterFixed*"/>
        </parameters>
      </method>
      <method name="get_size" symbol="clutter_actor_get_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="width" type="guint*"/>
          <parameter name="height" type="guint*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_actor_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_vertices" symbol="clutter_actor_get_vertices">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="verts" type="ClutterVertex[]"/>
        </parameters>
      </method>
      <method name="get_width" symbol="clutter_actor_get_width">
        <return-type type="guint"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_x" symbol="clutter_actor_get_x">
        <return-type type="gint"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_y" symbol="clutter_actor_get_y">
        <return-type type="gint"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="has_clip" symbol="clutter_actor_has_clip">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="hide" symbol="clutter_actor_hide">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="hide_all" symbol="clutter_actor_hide_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="lower" symbol="clutter_actor_lower">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="above" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="lower_bottom" symbol="clutter_actor_lower_bottom">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="move_by" symbol="clutter_actor_move_by">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="dx" type="gint"/>
          <parameter name="dy" type="gint"/>
        </parameters>
      </method>
      <method name="paint" symbol="clutter_actor_paint">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="pick" symbol="clutter_actor_pick">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="query_coords" symbol="clutter_actor_query_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="box" type="ClutterActorBox*"/>
        </parameters>
      </method>
      <method name="queue_redraw" symbol="clutter_actor_queue_redraw">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="raise" symbol="clutter_actor_raise">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="below" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="raise_top" symbol="clutter_actor_raise_top">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="realize" symbol="clutter_actor_realize">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="remove_clip" symbol="clutter_actor_remove_clip">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="reparent" symbol="clutter_actor_reparent">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="new_parent" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="request_coords" symbol="clutter_actor_request_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="box" type="ClutterActorBox*"/>
        </parameters>
      </method>
      <method name="rotate_x" symbol="clutter_actor_rotate_x">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="angle" type="gfloat"/>
          <parameter name="y" type="gint"/>
          <parameter name="z" type="gint"/>
        </parameters>
      </method>
      <method name="rotate_xx" symbol="clutter_actor_rotate_xx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="angle" type="ClutterFixed"/>
          <parameter name="y" type="gint"/>
          <parameter name="z" type="gint"/>
        </parameters>
      </method>
      <method name="rotate_y" symbol="clutter_actor_rotate_y">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gint"/>
          <parameter name="z" type="gint"/>
        </parameters>
      </method>
      <method name="rotate_yx" symbol="clutter_actor_rotate_yx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="angle" type="ClutterFixed"/>
          <parameter name="x" type="gint"/>
          <parameter name="z" type="gint"/>
        </parameters>
      </method>
      <method name="rotate_z" symbol="clutter_actor_rotate_z">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="angle" type="gfloat"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="rotate_zx" symbol="clutter_actor_rotate_zx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="angle" type="ClutterFixed"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="set_clip" symbol="clutter_actor_set_clip">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="xoff" type="gint"/>
          <parameter name="yoff" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="set_depth" symbol="clutter_actor_set_depth">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="depth" type="gint"/>
        </parameters>
      </method>
      <method name="set_geometry" symbol="clutter_actor_set_geometry">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="geometry" type="const-ClutterGeometry*"/>
        </parameters>
      </method>
      <method name="set_height" symbol="clutter_actor_set_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="height" type="guint"/>
        </parameters>
      </method>
      <method name="set_name" symbol="clutter_actor_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_opacity" symbol="clutter_actor_set_opacity">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="opacity" type="guint8"/>
        </parameters>
      </method>
      <method name="set_parent" symbol="clutter_actor_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="parent" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="set_position" symbol="clutter_actor_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="set_scale" symbol="clutter_actor_set_scale">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="scale_x" type="gdouble"/>
          <parameter name="scale_y" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_scale_with_gravity" symbol="clutter_actor_set_scale_with_gravity">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="scale_x" type="gfloat"/>
          <parameter name="scale_y" type="gfloat"/>
          <parameter name="gravity" type="ClutterGravity"/>
        </parameters>
      </method>
      <method name="set_scale_with_gravityx" symbol="clutter_actor_set_scale_with_gravityx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="scale_x" type="ClutterFixed"/>
          <parameter name="scale_y" type="ClutterFixed"/>
          <parameter name="gravity" type="ClutterGravity"/>
        </parameters>
      </method>
      <method name="set_scalex" symbol="clutter_actor_set_scalex">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="scale_x" type="ClutterFixed"/>
          <parameter name="scale_y" type="ClutterFixed"/>
        </parameters>
      </method>
      <method name="set_size" symbol="clutter_actor_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="set_width" symbol="clutter_actor_set_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
          <parameter name="width" type="guint"/>
        </parameters>
      </method>
      <method name="show" symbol="clutter_actor_show">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="show_all" symbol="clutter_actor_show_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="unparent" symbol="clutter_actor_unparent">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="unrealize" symbol="clutter_actor_unrealize">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterActor*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterAlpha" parent="GInitiallyUnowned" type-name="ClutterAlpha">
      <field name="priv" type="ClutterAlphaPrivate*"/>
      <property name="timeline" readable="1" type="ClutterTimeline" writable="1"/>
      <property name="alpha" readable="1" type="guint"/>
      <vfunc name="_clutter_alpha_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_alpha_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_alpha_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_alpha_4">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_alpha_5">
        <return-type type="void"/>
      </vfunc>
      <method name="get_alpha" symbol="clutter_alpha_get_alpha">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
        </parameters>
      </method>
      <method name="get_timeline" symbol="clutter_alpha_get_timeline">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_alpha_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_alpha_new"/>
      <constructor name="new_full" symbol="clutter_alpha_new_full">
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="func" type="ClutterAlphaFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </constructor>
      <method name="set_func" symbol="clutter_alpha_set_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="func" type="ClutterAlphaFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="set_timeline" symbol="clutter_alpha_set_timeline">
        <return-type type="void"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBackend" parent="GObject" type-name="ClutterBackend">
      <field name="priv" type="ClutterBackendPrivate*"/>
      <vfunc name="pre_parse">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </vfunc>
      <vfunc name="post_parse">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </vfunc>
      <vfunc name="init_stage">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </vfunc>
      <vfunc name="init_events">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </vfunc>
      <vfunc name="init_features">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </vfunc>
      <vfunc name="get_stage">
        <return-type type="ClutterActor*"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </vfunc>
      <vfunc name="add_options">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="group" type="GOptionGroup*"/>
        </parameters>
      </vfunc>
      <vfunc name="get_features">
        <return-type type="ClutterFeatureFlags"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </vfunc>
      <vfunc name="redraw">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </vfunc>
      <method name="get_double_click_distance" symbol="clutter_backend_get_double_click_distance">
        <return-type type="guint"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </method>
      <method name="get_double_click_time" symbol="clutter_backend_get_double_click_time">
        <return-type type="guint"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </method>
      <method name="get_resolution" symbol="clutter_backend_get_resolution">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_backend_get_type">
        <return-type type="GType"/>
      </method>
      <method name="set_double_click_distance" symbol="clutter_backend_set_double_click_distance">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="distance" type="guint"/>
        </parameters>
      </method>
      <method name="set_double_click_time" symbol="clutter_backend_set_double_click_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="msec" type="guint"/>
        </parameters>
      </method>
      <method name="set_resolution" symbol="clutter_backend_set_resolution">
        <return-type type="void"/>
        <parameters>
          <parameter name="backend" type="ClutterBackend*"/>
          <parameter name="dpi" type="gdouble"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBehaviour" parent="GObject" type-name="ClutterBehaviour">
      <field name="priv" type="ClutterBehaviourPrivate*"/>
      <property name="alpha" readable="1" type="ClutterAlpha" writable="1"/>
      <signal name="applied" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <signal name="removed" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </signal>
      <vfunc name="alpha_notify">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="alpha_value" type="guint32"/>
        </parameters>
      </vfunc>
      <vfunc name="_clutter_behaviour1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_behaviour2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_behaviour3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_behaviour4">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_behaviour5">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_behaviour6">
        <return-type type="void"/>
      </vfunc>
      <method name="actors_foreach" symbol="clutter_behaviour_actors_foreach">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="func" type="ClutterBehaviourForeachFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="apply" symbol="clutter_behaviour_apply">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="get_actors" symbol="clutter_behaviour_get_actors">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
        </parameters>
      </method>
      <method name="get_alpha" symbol="clutter_behaviour_get_alpha">
        <return-type type="ClutterAlpha*"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
        </parameters>
      </method>
      <method name="get_n_actors" symbol="clutter_behaviour_get_n_actors">
        <return-type type="gint"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
        </parameters>
      </method>
      <method name="get_nth_actor" symbol="clutter_behaviour_get_nth_actor">
        <return-type type="ClutterActor*"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_behaviour_get_type">
        <return-type type="GType"/>
      </method>
      <method name="is_applied" symbol="clutter_behaviour_is_applied">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="remove" symbol="clutter_behaviour_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="remove_all" symbol="clutter_behaviour_remove_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
        </parameters>
      </method>
      <method name="set_alpha" symbol="clutter_behaviour_set_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="behave" type="ClutterBehaviour*"/>
          <parameter name="alpha" type="ClutterAlpha*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBehaviourBspline" parent="ClutterBehaviour" type-name="ClutterBehaviourBspline">
      <field name="priv" type="ClutterBehaviourBsplinePrivate*"/>
      <signal name="knot_reached" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="bsplineb" type="ClutterBehaviourBspline*"/>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </signal>
      <vfunc name="_clutter_bspline_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_bspline_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_bspline_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_bspline_4">
        <return-type type="void"/>
      </vfunc>
      <method name="adjust" symbol="clutter_behaviour_bspline_adjust">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="offset" type="guint"/>
          <parameter name="knot" type="ClutterKnot*"/>
        </parameters>
      </method>
      <method name="append" symbol="clutter_behaviour_bspline_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="first_knot" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <method name="append_knot" symbol="clutter_behaviour_bspline_append_knot">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <method name="clear" symbol="clutter_behaviour_bspline_clear">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
        </parameters>
      </method>
      <method name="get_origin" symbol="clutter_behaviour_bspline_get_origin">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="knot" type="ClutterKnot*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_behaviour_bspline_get_type">
        <return-type type="GType"/>
      </method>
      <method name="join" symbol="clutter_behaviour_bspline_join">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs1" type="ClutterBehaviourBspline*"/>
          <parameter name="bs2" type="ClutterBehaviourBspline*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_behaviour_bspline_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="knots" type="const-ClutterKnot*"/>
          <parameter name="n_knots" type="guint"/>
        </parameters>
      </constructor>
      <method name="set_origin" symbol="clutter_behaviour_bspline_set_origin">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="knot" type="ClutterKnot*"/>
        </parameters>
      </method>
      <method name="split" symbol="clutter_behaviour_bspline_split">
        <return-type type="ClutterBehaviour*"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="offset" type="guint"/>
        </parameters>
      </method>
      <method name="truncate" symbol="clutter_behaviour_bspline_truncate">
        <return-type type="void"/>
        <parameters>
          <parameter name="bs" type="ClutterBehaviourBspline*"/>
          <parameter name="offset" type="guint"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBehaviourDepth" parent="ClutterBehaviour" type-name="ClutterBehaviourDepth">
      <field name="priv" type="ClutterBehaviourDepthPrivate*"/>
      <property name="start-depth" readable="1" type="gint" writable="1"/>
      <property name="end-depth" readable="1" type="gint" writable="1"/>
      <method name="get_type" symbol="clutter_behaviour_depth_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_behaviour_depth_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="min_depth" type="gint"/>
          <parameter name="max_depth" type="gint"/>
        </parameters>
      </constructor>
    </object>
    <object get-type="" name="ClutterBehaviourEllipse" parent="ClutterBehaviour" type-name="ClutterBehaviourEllipse">
      <field name="priv" type="ClutterBehaviourEllipsePrivate*"/>
      <property name="angle-begin" readable="1" type="gdouble" writable="1"/>
      <property name="angle-end" readable="1" type="gdouble" writable="1"/>
      <property name="angle-tilt-x" readable="1" type="gdouble" writable="1"/>
      <property name="angle-tilt-y" readable="1" type="gdouble" writable="1"/>
      <property name="angle-tilt-z" readable="1" type="gdouble" writable="1"/>
      <property name="width" readable="1" type="gint" writable="1"/>
      <property name="height" readable="1" type="gint" writable="1"/>
      <property name="center" readable="1" type="ClutterKnot" writable="1"/>
      <property name="direction" readable="1" type="ClutterRotateDirection" writable="1"/>
      <vfunc name="knot_reached">
        <return-type type="void"/>
        <parameters>
          <parameter name="ellipseb" type="ClutterBehaviourEllipse*"/>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </vfunc>
      <vfunc name="_clutter_ellipse_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_ellipse_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_ellipse_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_ellipse_4">
        <return-type type="void"/>
      </vfunc>
      <method name="get_angle_begin" symbol="clutter_behaviour_ellipse_get_angle_begin">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <method name="get_angle_beginx" symbol="clutter_behaviour_ellipse_get_angle_beginx">
        <return-type type="ClutterAngle"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <method name="get_angle_end" symbol="clutter_behaviour_ellipse_get_angle_end">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <method name="get_angle_endx" symbol="clutter_behaviour_ellipse_get_angle_endx">
        <return-type type="ClutterAngle"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <method name="get_angle_tilt" symbol="clutter_behaviour_ellipse_get_angle_tilt">
        <return-type type="gdouble"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
        </parameters>
      </method>
      <method name="get_angle_tiltx" symbol="clutter_behaviour_ellipse_get_angle_tiltx">
        <return-type type="ClutterAngle"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
        </parameters>
      </method>
      <method name="get_center" symbol="clutter_behaviour_ellipse_get_center">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="x" type="gint*"/>
          <parameter name="y" type="gint*"/>
        </parameters>
      </method>
      <method name="get_direction" symbol="clutter_behaviour_ellipse_get_direction">
        <return-type type="ClutterRotateDirection"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <method name="get_height" symbol="clutter_behaviour_ellipse_get_height">
        <return-type type="gint"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <method name="get_tilt" symbol="clutter_behaviour_ellipse_get_tilt">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_tilt_x" type="gdouble*"/>
          <parameter name="angle_tilt_y" type="gdouble*"/>
          <parameter name="angle_tilt_z" type="gdouble*"/>
        </parameters>
      </method>
      <method name="get_tiltx" symbol="clutter_behaviour_ellipse_get_tiltx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_tilt_x" type="ClutterAngle*"/>
          <parameter name="angle_tilt_y" type="ClutterAngle*"/>
          <parameter name="angle_tilt_z" type="ClutterAngle*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_behaviour_ellipse_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_width" symbol="clutter_behaviour_ellipse_get_width">
        <return-type type="gint"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_behaviour_ellipse_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="begin" type="gdouble"/>
          <parameter name="end" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor name="newx" symbol="clutter_behaviour_ellipse_newx">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="begin" type="ClutterFixed"/>
          <parameter name="end" type="ClutterFixed"/>
        </parameters>
      </constructor>
      <method name="set_angle_begin" symbol="clutter_behaviour_ellipse_set_angle_begin">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_begin" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_angle_beginx" symbol="clutter_behaviour_ellipse_set_angle_beginx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_begin" type="ClutterAngle"/>
        </parameters>
      </method>
      <method name="set_angle_end" symbol="clutter_behaviour_ellipse_set_angle_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_end" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_angle_endx" symbol="clutter_behaviour_ellipse_set_angle_endx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_end" type="ClutterAngle"/>
        </parameters>
      </method>
      <method name="set_angle_tilt" symbol="clutter_behaviour_ellipse_set_angle_tilt">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
          <parameter name="angle_tilt" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_angle_tiltx" symbol="clutter_behaviour_ellipse_set_angle_tiltx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
          <parameter name="angle_tilt" type="ClutterAngle"/>
        </parameters>
      </method>
      <method name="set_center" symbol="clutter_behaviour_ellipse_set_center">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="set_direction" symbol="clutter_behaviour_ellipse_set_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
        </parameters>
      </method>
      <method name="set_height" symbol="clutter_behaviour_ellipse_set_height">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="set_tilt" symbol="clutter_behaviour_ellipse_set_tilt">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_tilt_x" type="gdouble"/>
          <parameter name="angle_tilt_y" type="gdouble"/>
          <parameter name="angle_tilt_z" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_tiltx" symbol="clutter_behaviour_ellipse_set_tiltx">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="angle_tilt_x" type="ClutterAngle"/>
          <parameter name="angle_tilt_y" type="ClutterAngle"/>
          <parameter name="angle_tilt_z" type="ClutterAngle"/>
        </parameters>
      </method>
      <method name="set_width" symbol="clutter_behaviour_ellipse_set_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterBehaviourEllipse*"/>
          <parameter name="width" type="gint"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBehaviourOpacity" parent="ClutterBehaviour" type-name="ClutterBehaviourOpacity">
      <field name="priv" type="ClutterBehaviourOpacityPrivate*"/>
      <property construct="1" name="opacity-start" readable="1" type="guint" writable="1"/>
      <property construct="1" name="opacity-end" readable="1" type="guint" writable="1"/>
      <method name="get_type" symbol="clutter_behaviour_opacity_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_behaviour_opacity_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="opacity_start" type="guint8"/>
          <parameter name="opacity_end" type="guint8"/>
        </parameters>
      </constructor>
    </object>
    <object get-type="" name="ClutterBehaviourPath" parent="ClutterBehaviour" type-name="ClutterBehaviourPath">
      <field name="priv" type="ClutterBehaviourPathPrivate*"/>
      <property name="knot" type="ClutterKnot" writable="1"/>
      <signal name="knot_reached" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </signal>
      <vfunc name="_clutter_path_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_path_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_path_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_path_4">
        <return-type type="void"/>
      </vfunc>
      <method name="append_knot" symbol="clutter_behaviour_path_append_knot">
        <return-type type="void"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <method name="append_knots" symbol="clutter_behaviour_path_append_knots">
        <return-type type="void"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
          <parameter name="first_knot" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <method name="clear" symbol="clutter_behaviour_path_clear">
        <return-type type="void"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
        </parameters>
      </method>
      <method name="get_knots" symbol="clutter_behaviour_path_get_knots">
        <return-type type="GSList*"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_behaviour_path_get_type">
        <return-type type="GType"/>
      </method>
      <method name="insert_knot" symbol="clutter_behaviour_path_insert_knot">
        <return-type type="void"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
          <parameter name="offset" type="guint"/>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_behaviour_path_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="knots" type="const-ClutterKnot*"/>
          <parameter name="n_knots" type="guint"/>
        </parameters>
      </constructor>
      <method name="remove_knot" symbol="clutter_behaviour_path_remove_knot">
        <return-type type="void"/>
        <parameters>
          <parameter name="pathb" type="ClutterBehaviourPath*"/>
          <parameter name="offset" type="guint"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBehaviourRotate" parent="ClutterBehaviour" type-name="ClutterBehaviourRotate">
      <field name="priv" type="ClutterBehaviourRotatePrivate*"/>
      <property name="angle-begin" readable="1" type="gdouble" writable="1"/>
      <property name="angle-end" readable="1" type="gdouble" writable="1"/>
      <property name="axis" readable="1" type="ClutterRotateAxis" writable="1"/>
      <property name="direction" readable="1" type="ClutterRotateDirection" writable="1"/>
      <property name="center-x" readable="1" type="gint" writable="1"/>
      <property name="center-y" readable="1" type="gint" writable="1"/>
      <property name="center-z" readable="1" type="gint" writable="1"/>
      <method name="get_axis" symbol="clutter_behaviour_rotate_get_axis">
        <return-type type="ClutterRotateAxis"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
        </parameters>
      </method>
      <method name="get_bounds" symbol="clutter_behaviour_rotate_get_bounds">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="angle_begin" type="gdouble*"/>
          <parameter name="angle_end" type="gdouble*"/>
        </parameters>
      </method>
      <method name="get_boundsx" symbol="clutter_behaviour_rotate_get_boundsx">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="angle_begin" type="ClutterFixed*"/>
          <parameter name="angle_end" type="ClutterFixed*"/>
        </parameters>
      </method>
      <method name="get_center" symbol="clutter_behaviour_rotate_get_center">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="x" type="gint*"/>
          <parameter name="y" type="gint*"/>
          <parameter name="z" type="gint*"/>
        </parameters>
      </method>
      <method name="get_direction" symbol="clutter_behaviour_rotate_get_direction">
        <return-type type="ClutterRotateDirection"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_behaviour_rotate_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_behaviour_rotate_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="angle_begin" type="gdouble"/>
          <parameter name="angle_end" type="gdouble"/>
        </parameters>
      </constructor>
      <constructor name="newx" symbol="clutter_behaviour_rotate_newx">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="angle_begin" type="ClutterFixed"/>
          <parameter name="angle_end" type="ClutterFixed"/>
        </parameters>
      </constructor>
      <method name="set_axis" symbol="clutter_behaviour_rotate_set_axis">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="axis" type="ClutterRotateAxis"/>
        </parameters>
      </method>
      <method name="set_bounds" symbol="clutter_behaviour_rotate_set_bounds">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="angle_begin" type="gdouble"/>
          <parameter name="angle_end" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_boundsx" symbol="clutter_behaviour_rotate_set_boundsx">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="angle_begin" type="ClutterFixed"/>
          <parameter name="angle_end" type="ClutterFixed"/>
        </parameters>
      </method>
      <method name="set_center" symbol="clutter_behaviour_rotate_set_center">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="z" type="gint"/>
        </parameters>
      </method>
      <method name="set_direction" symbol="clutter_behaviour_rotate_set_direction">
        <return-type type="void"/>
        <parameters>
          <parameter name="rotate" type="ClutterBehaviourRotate*"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterBehaviourScale" parent="ClutterBehaviour" type-name="ClutterBehaviourScale">
      <field name="priv" type="ClutterBehaviourScalePrivate*"/>
      <property name="scale-begin" readable="1" type="gdouble" writable="1"/>
      <property name="scale-end" readable="1" type="gdouble" writable="1"/>
      <property name="scale-gravity" readable="1" type="ClutterGravity" writable="1"/>
      <method name="get_bounds" symbol="clutter_behaviour_scale_get_bounds">
        <return-type type="void"/>
        <parameters>
          <parameter name="scale" type="ClutterBehaviourScale*"/>
          <parameter name="scale_begin" type="gdouble*"/>
          <parameter name="scale_end" type="gdouble*"/>
        </parameters>
      </method>
      <method name="get_boundsx" symbol="clutter_behaviour_scale_get_boundsx">
        <return-type type="void"/>
        <parameters>
          <parameter name="scale" type="ClutterBehaviourScale*"/>
          <parameter name="scale_begin" type="ClutterFixed*"/>
          <parameter name="scale_end" type="ClutterFixed*"/>
        </parameters>
      </method>
      <method name="get_gravity" symbol="clutter_behaviour_scale_get_gravity">
        <return-type type="ClutterGravity"/>
        <parameters>
          <parameter name="scale" type="ClutterBehaviourScale*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_behaviour_scale_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_behaviour_scale_new">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="scale_begin" type="gdouble"/>
          <parameter name="scale_end" type="gdouble"/>
          <parameter name="gravity" type="ClutterGravity"/>
        </parameters>
      </constructor>
      <constructor name="newx" symbol="clutter_behaviour_scale_newx">
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="scale_begin" type="ClutterFixed"/>
          <parameter name="scale_end" type="ClutterFixed"/>
          <parameter name="gravity" type="ClutterGravity"/>
        </parameters>
      </constructor>
    </object>
    <object get-type="" name="ClutterBox" parent="ClutterActor" type-name="ClutterBox">
      <field name="children" type="GList*"/>
      <field name="spacing" type="guint"/>
      <property name="spacing" readable="1" type="guint" writable="1"/>
      <vfunc name="pack_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="child" type="ClutterBoxChild*"/>
        </parameters>
      </vfunc>
      <vfunc name="unpack_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="child" type="ClutterBoxChild*"/>
        </parameters>
      </vfunc>
      <method name="get_spacing" symbol="clutter_box_get_spacing">
        <return-type type="guint"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_box_get_type">
        <return-type type="GType"/>
      </method>
      <method name="pack_end" symbol="clutter_box_pack_end">
        <return-type type="void"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="pack_start" symbol="clutter_box_pack_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="query_child" symbol="clutter_box_query_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="child" type="ClutterBoxChild*"/>
        </parameters>
      </method>
      <method name="query_nth_child" symbol="clutter_box_query_nth_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="index_" type="gint"/>
          <parameter name="child" type="ClutterBoxChild*"/>
        </parameters>
      </method>
      <method name="set_spacing" symbol="clutter_box_set_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="box" type="ClutterBox*"/>
          <parameter name="spacing" type="guint"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterCloneTexture" parent="ClutterActor" type-name="ClutterCloneTexture">
      <field name="priv" type="ClutterCloneTexturePrivate*"/>
      <property construct="1" name="parent-texture" readable="1" type="ClutterTexture" writable="1"/>
      <vfunc name="_clutter_clone_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_clone_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_clone_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_clone_4">
        <return-type type="void"/>
      </vfunc>
      <method name="get_parent_texture" symbol="clutter_clone_texture_get_parent_texture">
        <return-type type="ClutterTexture*"/>
        <parameters>
          <parameter name="clone" type="ClutterCloneTexture*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_clone_texture_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_clone_texture_new">
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
        </parameters>
      </constructor>
      <method name="set_parent_texture" symbol="clutter_clone_texture_set_parent_texture">
        <return-type type="void"/>
        <parameters>
          <parameter name="clone" type="ClutterCloneTexture*"/>
          <parameter name="texture" type="ClutterTexture*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterEffectTemplate" parent="GObject" type-name="ClutterEffectTemplate">
      <field name="priv" type="ClutterEffectTemplatePrivate*"/>
      <property construct-only="1" name="alpha-func" readable="1" type="gpointer" writable="1"/>
      <property construct-only="1" name="timeline" readable="1" type="ClutterTimeline" writable="1"/>
      <method name="get_type" symbol="clutter_effect_template_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_effect_template_new">
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="alpha_func" type="ClutterAlphaFunc"/>
        </parameters>
      </constructor>
      <constructor name="new_full" symbol="clutter_effect_template_new_full">
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="alpha_func" type="ClutterAlphaFunc"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </constructor>
    </object>
    <object get-type="" name="ClutterEntry" parent="ClutterActor" type-name="ClutterEntry">
      <field name="priv" type="ClutterEntryPrivate*"/>
      <property construct="1" name="font-name" readable="1" type="gchar*" writable="1"/>
      <property construct="1" name="text" readable="1" type="gchar*" writable="1"/>
      <property name="color" readable="1" type="ClutterColor" writable="1"/>
      <property name="alignment" readable="1" type="PangoAlignment" writable="1"/>
      <property name="position" readable="1" type="gint" writable="1"/>
      <property name="cursor-visible" readable="1" type="gboolean" writable="1"/>
      <property name="text-visible" readable="1" type="gboolean" writable="1"/>
      <property name="max-length" readable="1" type="gint" writable="1"/>
      <property name="entry-padding" readable="1" type="guint" writable="1"/>
      <signal name="text_changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </signal>
      <signal name="cursor_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="geometry" type="ClutterGeometry*"/>
        </parameters>
      </signal>
      <signal name="activate" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </signal>
      <vfunc name="paint_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </vfunc>
      <vfunc name="_clutter_entry_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_entry_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_entry_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_entry_4">
        <return-type type="void"/>
      </vfunc>
      <method name="delete_chars" symbol="clutter_entry_delete_chars">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="len" type="guint"/>
        </parameters>
      </method>
      <method name="delete_text" symbol="clutter_entry_delete_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="start_pos" type="gssize"/>
          <parameter name="end_pos" type="gssize"/>
        </parameters>
      </method>
      <method name="get_alignment" symbol="clutter_entry_get_alignment">
        <return-type type="PangoAlignment"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_color" symbol="clutter_entry_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="get_font_name" symbol="clutter_entry_get_font_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_invisible_char" symbol="clutter_entry_get_invisible_char">
        <return-type type="gunichar"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_layout" symbol="clutter_entry_get_layout">
        <return-type type="PangoLayout*"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_max_length" symbol="clutter_entry_get_max_length">
        <return-type type="gint"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_position" symbol="clutter_entry_get_position">
        <return-type type="gint"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_text" symbol="clutter_entry_get_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_entry_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_visibility" symbol="clutter_entry_get_visibility">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="get_visible_cursor" symbol="clutter_entry_get_visible_cursor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
        </parameters>
      </method>
      <method name="handle_key_event" symbol="clutter_entry_handle_key_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="kev" type="ClutterKeyEvent*"/>
        </parameters>
      </method>
      <method name="insert_text" symbol="clutter_entry_insert_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="position" type="gssize"/>
        </parameters>
      </method>
      <method name="insert_unichar" symbol="clutter_entry_insert_unichar">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="wc" type="gunichar"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_entry_new"/>
      <constructor name="new_full" symbol="clutter_entry_new_full">
        <parameters>
          <parameter name="font_name" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </constructor>
      <constructor name="new_with_text" symbol="clutter_entry_new_with_text">
        <parameters>
          <parameter name="font_name" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="set_alignment" symbol="clutter_entry_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="alignment" type="PangoAlignment"/>
        </parameters>
      </method>
      <method name="set_color" symbol="clutter_entry_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="set_font_name" symbol="clutter_entry_set_font_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="font_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_invisible_char" symbol="clutter_entry_set_invisible_char">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="wc" type="gunichar"/>
        </parameters>
      </method>
      <method name="set_max_length" symbol="clutter_entry_set_max_length">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="max" type="gint"/>
        </parameters>
      </method>
      <method name="set_position" symbol="clutter_entry_set_position">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="position" type="gint"/>
        </parameters>
      </method>
      <method name="set_text" symbol="clutter_entry_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_visibility" symbol="clutter_entry_set_visibility">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_visible_cursor" symbol="clutter_entry_set_visible_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="ClutterEntry*"/>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterGroup" parent="ClutterActor" type-name="ClutterGroup">
      <field name="priv" type="ClutterGroupPrivate*"/>
      <signal name="add" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
          <parameter name="child" type="ClutterActor*"/>
        </parameters>
      </signal>
      <signal name="remove" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
          <parameter name="child" type="ClutterActor*"/>
        </parameters>
      </signal>
      <vfunc name="_clutter_group_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_group_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_group_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_group_4">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_group_5">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_group_6">
        <return-type type="void"/>
      </vfunc>
      <implements>
        <interface name="ClutterContainer"/>
      </implements>
      <method deprecated="1" name="add" symbol="clutter_group_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="add_many" symbol="clutter_group_add_many">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
          <parameter name="first_actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="add_many_valist" symbol="clutter_group_add_many_valist">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
          <parameter name="first_actor" type="ClutterActor*"/>
          <parameter name="var_args" type="va_list"/>
        </parameters>
      </method>
      <method name="find_child_by_id" symbol="clutter_group_find_child_by_id">
        <return-type type="ClutterActor*"/>
        <parameters>
          <parameter name="self" type="ClutterGroup*"/>
          <parameter name="id" type="guint"/>
        </parameters>
      </method>
      <method name="get_n_children" symbol="clutter_group_get_n_children">
        <return-type type="gint"/>
        <parameters>
          <parameter name="self" type="ClutterGroup*"/>
        </parameters>
      </method>
      <method name="get_nth_child" symbol="clutter_group_get_nth_child">
        <return-type type="ClutterActor*"/>
        <parameters>
          <parameter name="self" type="ClutterGroup*"/>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_group_get_type">
        <return-type type="GType"/>
      </method>
      <method name="lower" symbol="clutter_group_lower">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterGroup*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="sibling" type="ClutterActor*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_group_new"/>
      <method name="raise" symbol="clutter_group_raise">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterGroup*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="sibling" type="ClutterActor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="remove" symbol="clutter_group_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
          <parameter name="actor" type="ClutterActor*"/>
        </parameters>
      </method>
      <method name="remove_all" symbol="clutter_group_remove_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="group" type="ClutterGroup*"/>
        </parameters>
      </method>
      <method name="sort_depth_order" symbol="clutter_group_sort_depth_order">
        <return-type type="void"/>
        <parameters>
          <parameter name="self" type="ClutterGroup*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterHBox" parent="ClutterBox" type-name="ClutterHBox">
      <implements>
        <interface name="ClutterLayout"/>
      </implements>
      <method name="get_type" symbol="clutter_hbox_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_hbox_new"/>
    </object>
    <object get-type="" name="ClutterLabel" parent="ClutterActor" type-name="ClutterLabel">
      <field name="priv" type="ClutterLabelPrivate*"/>
      <property construct="1" name="font-name" readable="1" type="gchar*" writable="1"/>
      <property construct="1" name="text" readable="1" type="gchar*" writable="1"/>
      <property name="color" readable="1" type="ClutterColor" writable="1"/>
      <property name="attributes" readable="1" type="PangoAttrList" writable="1"/>
      <property name="use-markup" readable="1" type="gboolean" writable="1"/>
      <property name="wrap" readable="1" type="gboolean" writable="1"/>
      <property name="wrap-mode" readable="1" type="PangoWrapMode" writable="1"/>
      <property name="ellipsize" readable="1" type="PangoEllipsizeMode" writable="1"/>
      <property name="alignment" readable="1" type="PangoAlignment" writable="1"/>
      <vfunc name="_clutter_label_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_label_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_label_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_label_4">
        <return-type type="void"/>
      </vfunc>
      <implements>
        <interface name="ClutterLayout"/>
      </implements>
      <method name="get_alignment" symbol="clutter_label_get_alignment">
        <return-type type="PangoAlignment"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_attributes" symbol="clutter_label_get_attributes">
        <return-type type="PangoAttrList*"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_color" symbol="clutter_label_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="get_ellipsize" symbol="clutter_label_get_ellipsize">
        <return-type type="PangoEllipsizeMode"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_font_name" symbol="clutter_label_get_font_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_layout" symbol="clutter_label_get_layout">
        <return-type type="PangoLayout*"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_line_wrap" symbol="clutter_label_get_line_wrap">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_line_wrap_mode" symbol="clutter_label_get_line_wrap_mode">
        <return-type type="PangoWrapMode"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_text" symbol="clutter_label_get_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_label_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_use_markup" symbol="clutter_label_get_use_markup">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_label_new"/>
      <constructor name="new_full" symbol="clutter_label_new_full">
        <parameters>
          <parameter name="font_name" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </constructor>
      <constructor name="new_with_text" symbol="clutter_label_new_with_text">
        <parameters>
          <parameter name="font_name" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="set_alignment" symbol="clutter_label_set_alignment">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="alignment" type="PangoAlignment"/>
        </parameters>
      </method>
      <method name="set_attributes" symbol="clutter_label_set_attributes">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="attrs" type="PangoAttrList*"/>
        </parameters>
      </method>
      <method name="set_color" symbol="clutter_label_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="set_ellipsize" symbol="clutter_label_set_ellipsize">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="mode" type="PangoEllipsizeMode"/>
        </parameters>
      </method>
      <method name="set_font_name" symbol="clutter_label_set_font_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="font_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_line_wrap" symbol="clutter_label_set_line_wrap">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="wrap" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_line_wrap_mode" symbol="clutter_label_set_line_wrap_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="wrap_mode" type="PangoWrapMode"/>
        </parameters>
      </method>
      <method name="set_text" symbol="clutter_label_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_use_markup" symbol="clutter_label_set_use_markup">
        <return-type type="void"/>
        <parameters>
          <parameter name="label" type="ClutterLabel*"/>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterRectangle" parent="ClutterActor" type-name="ClutterRectangle">
      <field name="priv" type="ClutterRectanglePrivate*"/>
      <property name="color" readable="1" type="ClutterColor" writable="1"/>
      <property name="border-color" readable="1" type="ClutterColor" writable="1"/>
      <property name="border-width" readable="1" type="guint" writable="1"/>
      <property name="has-border" readable="1" type="gboolean" writable="1"/>
      <vfunc name="_clutter_rectangle1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_rectangle2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_rectangle3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_rectangle4">
        <return-type type="void"/>
      </vfunc>
      <method name="get_border_color" symbol="clutter_rectangle_get_border_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangle" type="ClutterRectangle*"/>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="get_border_width" symbol="clutter_rectangle_get_border_width">
        <return-type type="guint"/>
        <parameters>
          <parameter name="rectangle" type="ClutterRectangle*"/>
        </parameters>
      </method>
      <method name="get_color" symbol="clutter_rectangle_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangle" type="ClutterRectangle*"/>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_rectangle_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_rectangle_new"/>
      <constructor name="new_with_color" symbol="clutter_rectangle_new_with_color">
        <parameters>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </constructor>
      <method name="set_border_color" symbol="clutter_rectangle_set_border_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangle" type="ClutterRectangle*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="set_border_width" symbol="clutter_rectangle_set_border_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangle" type="ClutterRectangle*"/>
          <parameter name="width" type="guint"/>
        </parameters>
      </method>
      <method name="set_color" symbol="clutter_rectangle_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="rectangle" type="ClutterRectangle*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterStage" parent="ClutterGroup" type-name="ClutterStage">
      <field name="priv" type="ClutterStagePrivate*"/>
      <property construct="1" name="fullscreen" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="offscreen" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="cursor-visible" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="user-resizable" readable="1" type="gboolean" writable="1"/>
      <property name="color" readable="1" type="ClutterColor" writable="1"/>
      <property name="title" readable="1" type="gchar*" writable="1"/>
      <signal name="event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </signal>
      <signal name="event_after" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </signal>
      <signal name="button_press_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterButtonEvent*"/>
        </parameters>
      </signal>
      <signal name="button_release_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterButtonEvent*"/>
        </parameters>
      </signal>
      <signal name="scroll_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterScrollEvent*"/>
        </parameters>
      </signal>
      <signal name="key_press_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterKeyEvent*"/>
        </parameters>
      </signal>
      <signal name="key_release_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterKeyEvent*"/>
        </parameters>
      </signal>
      <signal name="motion_event" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterMotionEvent*"/>
        </parameters>
      </signal>
      <vfunc name="set_fullscreen">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="fullscreen" type="gboolean"/>
        </parameters>
      </vfunc>
      <vfunc name="set_cursor_visible">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="visible" type="gboolean"/>
        </parameters>
      </vfunc>
      <vfunc name="set_offscreen">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="offscreen" type="gboolean"/>
        </parameters>
      </vfunc>
      <vfunc name="draw_to_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </vfunc>
      <vfunc name="set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </vfunc>
      <vfunc name="set_user_resize">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="value" type="gboolean"/>
        </parameters>
      </vfunc>
      <vfunc name="stage_state_event">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterStageStateEvent*"/>
        </parameters>
      </vfunc>
      <method name="event" symbol="clutter_stage_event">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
      <method name="fullscreen" symbol="clutter_stage_fullscreen">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
        </parameters>
      </method>
      <method name="get_actor_at_pos" symbol="clutter_stage_get_actor_at_pos">
        <return-type type="ClutterActor*"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="get_color" symbol="clutter_stage_get_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="get_default" symbol="clutter_stage_get_default">
        <return-type type="ClutterActor*"/>
      </method>
      <method name="get_perspective" symbol="clutter_stage_get_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="fovy" type="gfloat*"/>
          <parameter name="aspect" type="gfloat*"/>
          <parameter name="z_near" type="gfloat*"/>
          <parameter name="z_far" type="gfloat*"/>
        </parameters>
      </method>
      <method name="get_perspectivex" symbol="clutter_stage_get_perspectivex">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="perspective" type="ClutterPerspective*"/>
        </parameters>
      </method>
      <method name="get_title" symbol="clutter_stage_get_title">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_stage_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_user_resizable" symbol="clutter_stage_get_user_resizable">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
        </parameters>
      </method>
      <method name="hide_cursor" symbol="clutter_stage_hide_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
        </parameters>
      </method>
      <method name="set_color" symbol="clutter_stage_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="set_perspective" symbol="clutter_stage_set_perspective">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="fovy" type="gfloat"/>
          <parameter name="aspect" type="gfloat"/>
          <parameter name="z_near" type="gfloat"/>
          <parameter name="z_far" type="gfloat"/>
        </parameters>
      </method>
      <method name="set_perspectivex" symbol="clutter_stage_set_perspectivex">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="perspective" type="ClutterPerspective*"/>
        </parameters>
      </method>
      <method name="set_title" symbol="clutter_stage_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_user_resizable" symbol="clutter_stage_set_user_resizable">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="resizable" type="gboolean"/>
        </parameters>
      </method>
      <method name="show_cursor" symbol="clutter_stage_show_cursor">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
        </parameters>
      </method>
      <method name="snapshot" symbol="clutter_stage_snapshot">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </method>
      <method name="unfullscreen" symbol="clutter_stage_unfullscreen">
        <return-type type="void"/>
        <parameters>
          <parameter name="stage" type="ClutterStage*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterTexture" parent="ClutterActor" type-name="ClutterTexture">
      <field name="priv" type="ClutterTexturePrivate*"/>
      <property name="pixbuf" readable="1" type="GdkPixbuf" writable="1"/>
      <property construct-only="1" name="tiled" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="sync-size" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="repeat-x" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="repeat-y" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="filter-quality" readable="1" type="gint" writable="1"/>
      <property construct-only="1" name="tile-waste" readable="1" type="gint" writable="1"/>
      <property name="pixel-type" readable="1" type="gint"/>
      <property name="pixel-format" readable="1" type="gint"/>
      <signal name="size_change" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </signal>
      <signal name="pixbuf_change" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
        </parameters>
      </signal>
      <vfunc name="_clutter_texture1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_texture2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_texture3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_texture4">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_texture5">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_texture6">
        <return-type type="void"/>
      </vfunc>
      <method name="bind_tile" symbol="clutter_texture_bind_tile">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="index_" type="gint"/>
        </parameters>
      </method>
      <method name="error_quark" symbol="clutter_texture_error_quark">
        <return-type type="GQuark"/>
      </method>
      <method name="get_base_size" symbol="clutter_texture_get_base_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="width" type="gint*"/>
          <parameter name="height" type="gint*"/>
        </parameters>
      </method>
      <method name="get_n_tiles" symbol="clutter_texture_get_n_tiles">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="n_x_tiles" type="gint*"/>
          <parameter name="n_y_tiles" type="gint*"/>
        </parameters>
      </method>
      <method name="get_pixbuf" symbol="clutter_texture_get_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_texture_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_x_tile_detail" symbol="clutter_texture_get_x_tile_detail">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="x_index" type="gint"/>
          <parameter name="pos" type="gint*"/>
          <parameter name="size" type="gint*"/>
          <parameter name="waste" type="gint*"/>
        </parameters>
      </method>
      <method name="get_y_tile_detail" symbol="clutter_texture_get_y_tile_detail">
        <return-type type="void"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="y_index" type="gint"/>
          <parameter name="pos" type="gint*"/>
          <parameter name="size" type="gint*"/>
          <parameter name="waste" type="gint*"/>
        </parameters>
      </method>
      <method name="has_generated_tiles" symbol="clutter_texture_has_generated_tiles">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
        </parameters>
      </method>
      <method name="is_tiled" symbol="clutter_texture_is_tiled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_texture_new"/>
      <constructor name="new_from_pixbuf" symbol="clutter_texture_new_from_pixbuf">
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <method name="set_from_rgb_data" symbol="clutter_texture_set_from_rgb_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="data" type="const-guchar*"/>
          <parameter name="has_alpha" type="gboolean"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="rowstride" type="gint"/>
          <parameter name="bpp" type="gint"/>
          <parameter name="flags" type="ClutterTextureFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="set_from_yuv_data" symbol="clutter_texture_set_from_yuv_data">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="data" type="const-guchar*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="flags" type="ClutterTextureFlags"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="set_pixbuf" symbol="clutter_texture_set_pixbuf">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="texture" type="ClutterTexture*"/>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterTimeline" parent="GObject" type-name="ClutterTimeline">
      <field name="priv" type="ClutterTimelinePrivate*"/>
      <property construct="1" name="fps" readable="1" type="guint" writable="1"/>
      <property construct="1" name="num-frames" readable="1" type="guint" writable="1"/>
      <property construct="1" name="loop" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="delay" readable="1" type="guint" writable="1"/>
      <signal name="new_frame" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="frame_num" type="gint"/>
        </parameters>
      </signal>
      <signal name="completed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </signal>
      <signal name="started" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </signal>
      <signal name="paused" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </signal>
      <vfunc name="_clutter_timeline_1">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_timeline_2">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_timeline_3">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_timeline_4">
        <return-type type="void"/>
      </vfunc>
      <vfunc name="_clutter_timeline_5">
        <return-type type="void"/>
      </vfunc>
      <method name="advance" symbol="clutter_timeline_advance">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="frame_num" type="guint"/>
        </parameters>
      </method>
      <method name="clone" symbol="clutter_timeline_clone">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="get_current_frame" symbol="clutter_timeline_get_current_frame">
        <return-type type="gint"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="get_delay" symbol="clutter_timeline_get_delay">
        <return-type type="guint"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="get_loop" symbol="clutter_timeline_get_loop">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="get_n_frames" symbol="clutter_timeline_get_n_frames">
        <return-type type="guint"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="get_speed" symbol="clutter_timeline_get_speed">
        <return-type type="guint"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_timeline_get_type">
        <return-type type="GType"/>
      </method>
      <method name="is_playing" symbol="clutter_timeline_is_playing">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="clutter_timeline_new">
        <parameters>
          <parameter name="n_frames" type="guint"/>
          <parameter name="fps" type="guint"/>
        </parameters>
      </constructor>
      <method name="pause" symbol="clutter_timeline_pause">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="rewind" symbol="clutter_timeline_rewind">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="set_delay" symbol="clutter_timeline_set_delay">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="msecs" type="guint"/>
        </parameters>
      </method>
      <method name="set_loop" symbol="clutter_timeline_set_loop">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="loop" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_n_frames" symbol="clutter_timeline_set_n_frames">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="n_frames" type="guint"/>
        </parameters>
      </method>
      <method name="set_speed" symbol="clutter_timeline_set_speed">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="fps" type="guint"/>
        </parameters>
      </method>
      <method name="skip" symbol="clutter_timeline_skip">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
          <parameter name="n_frames" type="guint"/>
        </parameters>
      </method>
      <method name="start" symbol="clutter_timeline_start">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
      <method name="stop" symbol="clutter_timeline_stop">
        <return-type type="void"/>
        <parameters>
          <parameter name="timeline" type="ClutterTimeline*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="ClutterVBox" parent="ClutterBox" type-name="ClutterVBox">
      <implements>
        <interface name="ClutterLayout"/>
      </implements>
      <method name="get_type" symbol="clutter_vbox_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="clutter_vbox_new"/>
    </object>
    <boxed get-type="" name="ClutterActorBox" type-name="ClutterActorBox">
      <field name="x1" readable="1" type="ClutterUnit" writable="1"/>
      <field name="y1" readable="1" type="ClutterUnit" writable="1"/>
      <field name="x2" readable="1" type="ClutterUnit" writable="1"/>
      <field name="y2" readable="1" type="ClutterUnit" writable="1"/>
      <method name="get_type" symbol="clutter_actor_box_get_type">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct get-type="" name="ClutterAnyEvent" type-name="ClutterAnyEvent">
      <field name="type" readable="1" type="ClutterEventType" writable="1"/>
    </struct>
    <struct get-type="" name="ClutterBoxChild" type-name="ClutterBoxChild">
      <field name="actor" readable="1" type="ClutterActor*" writable="1"/>
      <field name="pack_type" readable="1" type="ClutterPackType" writable="1"/>
    </struct>
    <struct get-type="" name="ClutterButtonEvent" type-name="ClutterButtonEvent">
      <field name="type" readable="1" type="ClutterEventType" writable="1"/>
      <field name="time" readable="1" type="guint32" writable="1"/>
      <field name="x" readable="1" type="gint" writable="1"/>
      <field name="y" readable="1" type="gint" writable="1"/>
      <field name="modifier_state" readable="1" type="ClutterModifierType" writable="1"/>
      <field name="button" readable="1" type="guint32" writable="1"/>
      <field name="axes" readable="1" type="gdouble*" writable="1"/>
      <field name="device" readable="1" type="ClutterInputDevice*" writable="1"/>
      <method name="button" symbol="clutter_button_event_button">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="buttev" type="ClutterButtonEvent*"/>
        </parameters>
      </method>
    </struct>
    <boxed get-type="" name="ClutterColor" type-name="ClutterColor">
      <field name="red" readable="1" type="guint8" writable="1"/>
      <field name="green" readable="1" type="guint8" writable="1"/>
      <field name="blue" readable="1" type="guint8" writable="1"/>
      <field name="alpha" readable="1" type="guint8" writable="1"/>
      <method name="add" symbol="clutter_color_add">
        <return-type type="void"/>
        <parameters>
          <parameter name="src1" type="const-ClutterColor*"/>
          <parameter name="src2" type="const-ClutterColor*"/>
          <parameter name="dest" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="copy" symbol="clutter_color_copy">
        <return-type type="ClutterColor*"/>
        <parameters>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="darken" symbol="clutter_color_darken">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
          <parameter name="dest" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="equal" symbol="clutter_color_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="a" type="const-ClutterColor*"/>
          <parameter name="b" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="free" symbol="clutter_color_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="color" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="from_hls" symbol="clutter_color_from_hls">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="ClutterColor*"/>
          <parameter name="hue" type="guint8"/>
          <parameter name="luminance" type="guint8"/>
          <parameter name="saturation" type="guint8"/>
        </parameters>
      </method>
      <method name="from_hlsx" symbol="clutter_color_from_hlsx">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="ClutterColor*"/>
          <parameter name="hue" type="ClutterFixed"/>
          <parameter name="luminance" type="ClutterFixed"/>
          <parameter name="saturation" type="ClutterFixed"/>
        </parameters>
      </method>
      <method name="from_pixel" symbol="clutter_color_from_pixel">
        <return-type type="void"/>
        <parameters>
          <parameter name="dest" type="ClutterColor*"/>
          <parameter name="pixel" type="guint32"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_color_get_type">
        <return-type type="GType"/>
      </method>
      <method name="lighten" symbol="clutter_color_lighten">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
          <parameter name="dest" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="parse" symbol="clutter_color_parse">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="color" type="const-gchar*"/>
          <parameter name="dest" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="shade" symbol="clutter_color_shade">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
          <parameter name="dest" type="ClutterColor*"/>
          <parameter name="shade" type="gdouble"/>
        </parameters>
      </method>
      <method name="shadex" symbol="clutter_color_shadex">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
          <parameter name="dest" type="ClutterColor*"/>
          <parameter name="shade" type="ClutterFixed"/>
        </parameters>
      </method>
      <method name="subtract" symbol="clutter_color_subtract">
        <return-type type="void"/>
        <parameters>
          <parameter name="src1" type="const-ClutterColor*"/>
          <parameter name="src2" type="const-ClutterColor*"/>
          <parameter name="dest" type="ClutterColor*"/>
        </parameters>
      </method>
      <method name="to_hls" symbol="clutter_color_to_hls">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
          <parameter name="hue" type="guint8*"/>
          <parameter name="luminance" type="guint8*"/>
          <parameter name="saturation" type="guint8*"/>
        </parameters>
      </method>
      <method name="to_hlsx" symbol="clutter_color_to_hlsx">
        <return-type type="void"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
          <parameter name="hue" type="ClutterFixed*"/>
          <parameter name="luminance" type="ClutterFixed*"/>
          <parameter name="saturation" type="ClutterFixed*"/>
        </parameters>
      </method>
      <method name="to_pixel" symbol="clutter_color_to_pixel">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="src" type="const-ClutterColor*"/>
        </parameters>
      </method>
      <method name="to_string" symbol="clutter_color_to_string">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="color" type="const-ClutterColor*"/>
        </parameters>
      </method>
    </boxed>
    <boxed get-type="" name="ClutterGeometry" type-name="ClutterGeometry">
      <field name="x" readable="1" type="gint" writable="1"/>
      <field name="y" readable="1" type="gint" writable="1"/>
      <field name="width" readable="1" type="guint" writable="1"/>
      <field name="height" readable="1" type="guint" writable="1"/>
      <method name="get_type" symbol="clutter_geometry_get_type">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct get-type="" name="ClutterInputDevice" opaque="true" type-name="ClutterInputDevice"/>
    <struct get-type="" name="ClutterKeyEvent" type-name="ClutterKeyEvent">
      <field name="type" readable="1" type="ClutterEventType" writable="1"/>
      <field name="time" readable="1" type="guint32" writable="1"/>
      <field name="modifier_state" readable="1" type="ClutterModifierType" writable="1"/>
      <field name="keyval" readable="1" type="guint" writable="1"/>
      <field name="hardware_keycode" readable="1" type="guint16" writable="1"/>
      <method name="code" symbol="clutter_key_event_code">
        <return-type type="guint16"/>
        <parameters>
          <parameter name="keyev" type="ClutterKeyEvent*"/>
        </parameters>
      </method>
      <method name="symbol" symbol="clutter_key_event_symbol">
        <return-type type="guint"/>
        <parameters>
          <parameter name="keyev" type="ClutterKeyEvent*"/>
        </parameters>
      </method>
      <method name="unicode" symbol="clutter_key_event_unicode">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="keyev" type="ClutterKeyEvent*"/>
        </parameters>
      </method>
    </struct>
    <boxed get-type="" name="ClutterKnot" type-name="ClutterKnot">
      <field name="x" readable="1" type="gint" writable="1"/>
      <field name="y" readable="1" type="gint" writable="1"/>
      <method name="copy" symbol="clutter_knot_copy">
        <return-type type="ClutterKnot*"/>
        <parameters>
          <parameter name="knot" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <method name="equal" symbol="clutter_knot_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="knot_a" type="const-ClutterKnot*"/>
          <parameter name="knot_b" type="const-ClutterKnot*"/>
        </parameters>
      </method>
      <method name="free" symbol="clutter_knot_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="knot" type="ClutterKnot*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_knot_get_type">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct get-type="" name="ClutterMotionEvent" type-name="ClutterMotionEvent">
      <field name="type" readable="1" type="ClutterEventType" writable="1"/>
      <field name="time" readable="1" type="guint32" writable="1"/>
      <field name="x" readable="1" type="gint" writable="1"/>
      <field name="y" readable="1" type="gint" writable="1"/>
      <field name="modifier_state" readable="1" type="ClutterModifierType" writable="1"/>
      <field name="axes" readable="1" type="gdouble*" writable="1"/>
      <field name="device" readable="1" type="ClutterInputDevice*" writable="1"/>
    </struct>
    <boxed get-type="" name="ClutterPerspective" type-name="ClutterPerspective">
      <field name="fovy" readable="1" type="ClutterFixed" writable="1"/>
      <field name="aspect" readable="1" type="ClutterFixed" writable="1"/>
      <field name="z_near" readable="1" type="ClutterFixed" writable="1"/>
      <field name="z_far" readable="1" type="ClutterFixed" writable="1"/>
      <method name="copy" symbol="clutter_perspective_copy">
        <return-type type="ClutterPerspective*"/>
        <parameters>
          <parameter name="perspective" type="const-ClutterPerspective*"/>
        </parameters>
      </method>
      <method name="free" symbol="clutter_perspective_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="perspective" type="ClutterPerspective*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_perspective_get_type">
        <return-type type="GType"/>
      </method>
    </boxed>
    <struct get-type="" name="ClutterScrollEvent" type-name="ClutterScrollEvent">
      <field name="type" readable="1" type="ClutterEventType" writable="1"/>
      <field name="time" readable="1" type="guint32" writable="1"/>
      <field name="x" readable="1" type="gint" writable="1"/>
      <field name="y" readable="1" type="gint" writable="1"/>
      <field name="direction" readable="1" type="ClutterScrollDirection" writable="1"/>
      <field name="modifier_state" readable="1" type="ClutterModifierType" writable="1"/>
      <field name="axes" readable="1" type="gdouble*" writable="1"/>
      <field name="device" readable="1" type="ClutterInputDevice*" writable="1"/>
    </struct>
    <struct get-type="" name="ClutterStageStateEvent" type-name="ClutterStageStateEvent">
      <field name="type" readable="1" type="ClutterEventType" writable="1"/>
      <field name="changed_mask" readable="1" type="ClutterStageState" writable="1"/>
      <field name="new_state" readable="1" type="ClutterStageState" writable="1"/>
    </struct>
    <struct get-type="" name="ClutterTimeoutPool" opaque="true" type-name="ClutterTimeoutPool">
      <method name="add" symbol="clutter_timeout_pool_add">
        <return-type type="guint"/>
        <parameters>
          <parameter name="pool" type="ClutterTimeoutPool*"/>
          <parameter name="interval" type="guint"/>
          <parameter name="func" type="GSourceFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="notify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="new" symbol="clutter_timeout_pool_new">
        <return-type type="ClutterTimeoutPool*"/>
        <parameters>
          <parameter name="priority" type="gint"/>
        </parameters>
      </method>
      <method name="remove" symbol="clutter_timeout_pool_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="pool" type="ClutterTimeoutPool*"/>
          <parameter name="id" type="guint"/>
        </parameters>
      </method>
    </struct>
    <boxed get-type="" name="ClutterVertex" type-name="ClutterVertex">
      <field name="x" readable="1" type="ClutterUnit" writable="1"/>
      <field name="y" readable="1" type="ClutterUnit" writable="1"/>
      <field name="z" readable="1" type="ClutterUnit" writable="1"/>
      <method name="get_type" symbol="clutter_vertex_get_type">
        <return-type type="GType"/>
      </method>
    </boxed>
    <function name="base_init" symbol="clutter_base_init">
      <return-type type="void"/>
    </function>
    <struct name="ClutterEffect">
      <method name="fade" symbol="clutter_effect_fade">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="template_" type="ClutterEffectTemplate*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="start_opacity" type="guint8"/>
          <parameter name="end_opacity" type="guint8"/>
          <parameter name="completed_func" type="ClutterEffectCompleteFunc"/>
          <parameter name="completed_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="move" symbol="clutter_effect_move">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="template_" type="ClutterEffectTemplate*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="knots" type="const-ClutterKnot*"/>
          <parameter name="n_knots" type="guint"/>
          <parameter name="completed_func" type="ClutterEffectCompleteFunc"/>
          <parameter name="completed_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="rotate_x" symbol="clutter_effect_rotate_x">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="template_" type="ClutterEffectTemplate*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="angle_begin" type="gdouble"/>
          <parameter name="angle_end" type="gdouble"/>
          <parameter name="center_y" type="gint"/>
          <parameter name="center_z" type="gint"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="completed_func" type="ClutterEffectCompleteFunc"/>
          <parameter name="completed_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="rotate_y" symbol="clutter_effect_rotate_y">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="template_" type="ClutterEffectTemplate*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="angle_begin" type="gdouble"/>
          <parameter name="angle_end" type="gdouble"/>
          <parameter name="center_x" type="gint"/>
          <parameter name="center_z" type="gint"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="completed_func" type="ClutterEffectCompleteFunc"/>
          <parameter name="completed_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="rotate_z" symbol="clutter_effect_rotate_z">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="template_" type="ClutterEffectTemplate*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="angle_begin" type="gdouble"/>
          <parameter name="angle_end" type="gdouble"/>
          <parameter name="center_x" type="gint"/>
          <parameter name="center_y" type="gint"/>
          <parameter name="direction" type="ClutterRotateDirection"/>
          <parameter name="completed_func" type="ClutterEffectCompleteFunc"/>
          <parameter name="completed_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="scale" symbol="clutter_effect_scale">
        <return-type type="ClutterTimeline*"/>
        <parameters>
          <parameter name="template_" type="ClutterEffectTemplate*"/>
          <parameter name="actor" type="ClutterActor*"/>
          <parameter name="scale_begin" type="gdouble"/>
          <parameter name="scale_end" type="gdouble"/>
          <parameter name="gravity" type="ClutterGravity"/>
          <parameter name="completed_func" type="ClutterEffectCompleteFunc"/>
          <parameter name="completed_data" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="ClutterEvent">
      <method name="copy" symbol="clutter_event_copy">
        <return-type type="ClutterEvent*"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
      <method name="free" symbol="clutter_event_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
      <method name="get" symbol="clutter_event_get">
        <return-type type="ClutterEvent*"/>
      </method>
      <method name="get_coords" symbol="clutter_event_get_coords">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
          <parameter name="x" type="gint*"/>
          <parameter name="y" type="gint*"/>
        </parameters>
      </method>
      <method name="get_state" symbol="clutter_event_get_state">
        <return-type type="ClutterModifierType"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
      <method name="get_time" symbol="clutter_event_get_time">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="clutter_event_get_type">
        <return-type type="GType"/>
      </method>
      <method name="new" symbol="clutter_event_new">
        <return-type type="ClutterEvent*"/>
        <parameters>
          <parameter name="type" type="ClutterEventType"/>
        </parameters>
      </method>
      <method name="peek" symbol="clutter_event_peek">
        <return-type type="ClutterEvent*"/>
      </method>
      <method name="put" symbol="clutter_event_put">
        <return-type type="void"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
      <method name="type" symbol="clutter_event_type">
        <return-type type="ClutterEventType"/>
        <parameters>
          <parameter name="event" type="ClutterEvent*"/>
        </parameters>
      </method>
    </struct>
    <function name="events_pending" symbol="clutter_events_pending">
      <return-type type="gboolean"/>
    </function>
    <struct name="ClutterExp">
      <method name="dec_func" symbol="clutter_exp_dec_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="inc_func" symbol="clutter_exp_inc_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="ClutterFeature">
      <method name="available" symbol="clutter_feature_available">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="feature" type="ClutterFeatureFlags"/>
        </parameters>
      </method>
      <method name="get_all" symbol="clutter_feature_get_all">
        <return-type type="ClutterFeatureFlags"/>
      </method>
    </struct>
    <function name="get_debug_enabled" symbol="clutter_get_debug_enabled">
      <return-type type="gboolean"/>
    </function>
    <function name="get_default_backend" symbol="clutter_get_default_backend">
      <return-type type="ClutterBackend*"/>
    </function>
    <function name="get_option_group" symbol="clutter_get_option_group">
      <return-type type="GOptionGroup*"/>
    </function>
    <function name="get_show_fps" symbol="clutter_get_show_fps">
      <return-type type="gboolean"/>
    </function>
    <function name="get_timestamp" symbol="clutter_get_timestamp">
      <return-type type="gulong"/>
    </function>
    <struct name="ClutterInit">
      <method name="error_quark" symbol="clutter_init_error_quark">
        <return-type type="GQuark"/>
      </method>
      <method name="with_args" symbol="clutter_init_with_args">
        <return-type type="ClutterInitError"/>
        <parameters>
          <parameter name="argc" type="int*"/>
          <parameter name="argv" type="char***"/>
          <parameter name="parameter_string" type="char*"/>
          <parameter name="entries" type="GOptionEntry*"/>
          <parameter name="translation_domain" type="char*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </struct>
    <function name="keysym_to_unicode" symbol="clutter_keysym_to_unicode">
      <return-type type="guint32"/>
      <parameters>
        <parameter name="keyval" type="guint"/>
      </parameters>
    </function>
    <struct name="ClutterMain">
      <method name="level" symbol="clutter_main_level">
        <return-type type="gint"/>
      </method>
      <method name="quit" symbol="clutter_main_quit">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="ClutterRamp">
      <method name="dec_func" symbol="clutter_ramp_dec_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="func" symbol="clutter_ramp_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="inc_func" symbol="clutter_ramp_inc_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="ClutterSine">
      <method name="dec_func" symbol="clutter_sine_dec_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="func" symbol="clutter_sine_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="half_func" symbol="clutter_sine_half_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="inc_func" symbol="clutter_sine_inc_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="ClutterSmoothstep">
      <method name="dec_func" symbol="clutter_smoothstep_dec_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
      <method name="inc_func" symbol="clutter_smoothstep_inc_func">
        <return-type type="guint32"/>
        <parameters>
          <parameter name="alpha" type="ClutterAlpha*"/>
          <parameter name="dummy" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <function name="square_func" symbol="clutter_square_func">
      <return-type type="guint32"/>
      <parameters>
        <parameter name="alpha" type="ClutterAlpha*"/>
        <parameter name="dummy" type="gpointer"/>
      </parameters>
    </function>
    <struct name="ClutterThreads">
      <method name="enter" symbol="clutter_threads_enter">
        <return-type type="void"/>
      </method>
      <method name="leave" symbol="clutter_threads_leave">
        <return-type type="void"/>
      </method>
    </struct>
    <function name="util_next_p2" symbol="clutter_util_next_p2">
      <return-type type="int"/>
      <parameters>
        <parameter name="a" type="int"/>
      </parameters>
    </function>
  </namespace>
</api>
