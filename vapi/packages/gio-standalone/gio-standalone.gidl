<?xml version="1.0"?>
<api version="1.0">
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="GLib">
    <enum name="GDataStreamByteOrder" type-name="GDataStreamByteOrder" type="enum">
      <member name="G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN" value=""/>
      <member name="G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN" value=""/>
      <member name="G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN" value=""/>
    </enum>
    <enum name="GDataStreamNewlineType" type-name="GDataStreamNewlineType" type="enum">
      <member name="G_DATA_STREAM_NEWLINE_TYPE_LF" value=""/>
      <member name="G_DATA_STREAM_NEWLINE_TYPE_CR" value=""/>
      <member name="G_DATA_STREAM_NEWLINE_TYPE_CR_LF" value=""/>
      <member name="G_DATA_STREAM_NEWLINE_TYPE_ANY" value=""/>
    </enum>
    <enum name="GFileAttributeFlags" type-name="GFileAttributeFlags" type="flags">
      <member name="G_FILE_ATTRIBUTE_FLAGS_NONE" value=""/>
      <member name="G_FILE_ATTRIBUTE_FLAGS_COPY_WITH_FILE" value=""/>
      <member name="G_FILE_ATTRIBUTE_FLAGS_COPY_WHEN_MOVED" value=""/>
    </enum>
    <enum name="GFileAttributeStatus" type-name="GFileAttributeStatus" type="enum">
      <member name="G_FILE_ATTRIBUTE_STATUS_UNSET" value=""/>
      <member name="G_FILE_ATTRIBUTE_STATUS_SET" value=""/>
      <member name="G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING" value=""/>
    </enum>
    <enum name="GFileAttributeType" type-name="GFileAttributeType" type="enum">
      <member name="G_FILE_ATTRIBUTE_TYPE_INVALID" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_STRING" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_BYTE_STRING" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_BOOLEAN" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_UINT32" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_INT32" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_UINT64" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_INT64" value=""/>
      <member name="G_FILE_ATTRIBUTE_TYPE_OBJECT" value=""/>
    </enum>
    <enum name="GFileCopyFlags" type-name="GFileCopyFlags" type="flags">
      <member name="G_FILE_COPY_OVERWRITE" value=""/>
      <member name="G_FILE_COPY_BACKUP" value=""/>
      <member name="G_FILE_COPY_NOFOLLOW_SYMLINKS" value=""/>
      <member name="G_FILE_COPY_ALL_METADATA" value=""/>
    </enum>
    <enum name="GFileGetInfoFlags" type-name="GFileGetInfoFlags" type="flags">
      <member name="G_FILE_GET_INFO_NOFOLLOW_SYMLINKS" value="(1&lt;&lt;0)"/>
    </enum>
    <enum name="GFileMonitorEvent" type-name="GFileMonitorEvent" type="enum">
      <member name="G_FILE_MONITOR_EVENT_CHANGED" value=""/>
      <member name="G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT" value=""/>
      <member name="G_FILE_MONITOR_EVENT_DELETED" value=""/>
      <member name="G_FILE_MONITOR_EVENT_CREATED" value=""/>
      <member name="G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED" value=""/>
      <member name="G_FILE_MONITOR_EVENT_PRE_UNMOUNT" value=""/>
      <member name="G_FILE_MONITOR_EVENT_UNMOUNTED" value=""/>
    </enum>
    <enum name="GFileMonitorFlags" type-name="GFileMonitorFlags" type="flags">
      <member name="G_FILE_MONITOR_FLAGS_NONE" value=""/>
      <member name="G_FILE_MONITOR_FLAGS_MONITOR_MOUNTS" value=""/>
    </enum>
    <enum name="GFileType" type-name="GFileType" type="enum">
      <member name="G_FILE_TYPE_UNKNOWN" value=""/>
      <member name="G_FILE_TYPE_REGULAR" value=""/>
      <member name="G_FILE_TYPE_DIRECTORY" value=""/>
      <member name="G_FILE_TYPE_SYMBOLIC_LINK" value=""/>
      <member name="G_FILE_TYPE_SPECIAL" value=""/>
      <member name="G_FILE_TYPE_SHORTCUT" value=""/>
      <member name="G_FILE_TYPE_MOUNTABLE" value=""/>
    </enum>
    <enum name="GIOErrorEnum" type-name="GIOErrorEnum" type="enum">
      <member name="G_IO_ERROR_FAILED" value=""/>
      <member name="G_IO_ERROR_NOT_FOUND" value=""/>
      <member name="G_IO_ERROR_EXISTS" value=""/>
      <member name="G_IO_ERROR_IS_DIRECTORY" value=""/>
      <member name="G_IO_ERROR_NOT_DIRECTORY" value=""/>
      <member name="G_IO_ERROR_NOT_EMPTY" value=""/>
      <member name="G_IO_ERROR_NOT_REGULAR_FILE" value=""/>
      <member name="G_IO_ERROR_NOT_SYMBOLIC_LINK" value=""/>
      <member name="G_IO_ERROR_NOT_MOUNTABLE" value=""/>
      <member name="G_IO_ERROR_FILENAME_TOO_LONG" value=""/>
      <member name="G_IO_ERROR_INVALID_FILENAME" value=""/>
      <member name="G_IO_ERROR_TOO_MANY_LINKS" value=""/>
      <member name="G_IO_ERROR_NO_SPACE" value=""/>
      <member name="G_IO_ERROR_INVALID_ARGUMENT" value=""/>
      <member name="G_IO_ERROR_PERMISSION_DENIED" value=""/>
      <member name="G_IO_ERROR_NOT_SUPPORTED" value=""/>
      <member name="G_IO_ERROR_NOT_MOUNTED" value=""/>
      <member name="G_IO_ERROR_ALREADY_MOUNTED" value=""/>
      <member name="G_IO_ERROR_CLOSED" value=""/>
      <member name="G_IO_ERROR_CANCELLED" value=""/>
      <member name="G_IO_ERROR_PENDING" value=""/>
      <member name="G_IO_ERROR_READ_ONLY" value=""/>
      <member name="G_IO_ERROR_CANT_CREATE_BACKUP" value=""/>
      <member name="G_IO_ERROR_WRONG_ETAG" value=""/>
      <member name="G_IO_ERROR_TIMED_OUT" value=""/>
      <member name="G_IO_ERROR_WOULD_RECURSE" value=""/>
      <member name="G_IO_ERROR_BUSY" value=""/>
      <member name="G_IO_ERROR_WOULD_BLOCK" value=""/>
    </enum>
    <enum name="GPasswordFlags" type-name="GPasswordFlags" type="flags">
      <member name="G_PASSWORD_FLAGS_NEED_PASSWORD" value=""/>
      <member name="G_PASSWORD_FLAGS_NEED_USERNAME" value=""/>
      <member name="G_PASSWORD_FLAGS_NEED_DOMAIN" value=""/>
      <member name="G_PASSWORD_FLAGS_SAVING_SUPPORTED" value=""/>
      <member name="G_PASSWORD_FLAGS_ANON_SUPPORTED" value=""/>
    </enum>
    <enum name="GPasswordSave" type-name="GPasswordSave" type="enum">
      <member name="G_PASSWORD_SAVE_NEVER" value=""/>
      <member name="G_PASSWORD_SAVE_FOR_SESSION" value=""/>
      <member name="G_PASSWORD_SAVE_PERMANENTLY" value=""/>
    </enum>
    <enum name="GUnixMountType" type-name="GUnixMountType" type="enum">
      <member name="G_UNIX_MOUNT_TYPE_UNKNOWN" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_FLOPPY" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_CDROM" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_NFS" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_ZIP" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_JAZ" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_MEMSTICK" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_CF" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_SM" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_SDMMC" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_IPOD" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_CAMERA" value=""/>
      <member name="G_UNIX_MOUNT_TYPE_HD" value=""/>
    </enum>
    <callback name="GAsyncReadyCallback" type-name="GAsyncReadyCallback">
      <return-type type="void"/>
      <parameters>
        <parameter type="GObject*" name="source_object"/>
        <parameter type="GAsyncResult*" name="res"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="GFDSourceFunc" type-name="GFDSourceFunc">
      <return-type type="gboolean"/>
      <parameters>
        <parameter type="gpointer" name="user_data"/>
        <parameter type="GIOCondition" name="condition"/>
        <parameter type="int" name="fd"/>
      </parameters>
    </callback>
    <callback name="GFileProgressCallback" type-name="GFileProgressCallback">
      <return-type type="void"/>
      <parameters>
        <parameter type="goffset" name="current_num_bytes"/>
        <parameter type="goffset" name="total_num_bytes"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="GIODataFunc" type-name="GIODataFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="GIOJobFunc" type-name="GIOJobFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GIOJob*" name="job"/>
        <parameter type="GCancellable*" name="cancellable"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <callback name="GSimpleAsyncThreadFunc" type-name="GSimpleAsyncThreadFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GSimpleAsyncResult*" name="res"/>
        <parameter type="GObject*" name="object"/>
        <parameter type="GCancellable*" name="cancellable"/>
      </parameters>
    </callback>
    <callback name="GUnixMountCallback" type-name="GUnixMountCallback">
      <return-type type="void"/>
      <parameters>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <interface name="GAppInfo" type-name="GAppInfo" get-type="">
      <vfunc name="dup">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </vfunc>
      <vfunc name="equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo1"/>
          <parameter type="GAppInfo*" name="appinfo2"/>
        </parameters>
      </vfunc>
      <vfunc name="get_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </vfunc>
      <vfunc name="get_description">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </vfunc>
      <vfunc name="get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </vfunc>
      <vfunc name="launch">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="GList*" name="filenames"/>
          <parameter type="char**" name="envp"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="supports_uris">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </vfunc>
      <vfunc name="launch_uris">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="GList*" name="uris"/>
          <parameter type="char**" name="envp"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="should_show">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="const-char*" name="desktop_env"/>
        </parameters>
      </vfunc>
      <vfunc name="supports_xdg_startup_notify">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </vfunc>
      <vfunc name="set_as_default_for_type">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="const-char*" name="content_type"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="create_from_commandline" symbol="g_app_info_create_from_commandline">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter type="const-char*" name="commandline"/>
          <parameter type="const-char*" name="application_name"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="dup" symbol="g_app_info_dup">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </method>
      <method name="equal" symbol="g_app_info_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo1"/>
          <parameter type="GAppInfo*" name="appinfo2"/>
        </parameters>
      </method>
      <method name="get_all" symbol="g_app_info_get_all">
        <return-type type="GList*"/>
      </method>
      <method name="get_all_for_type" symbol="g_app_info_get_all_for_type">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="const-char*" name="content_type"/>
        </parameters>
      </method>
      <method name="get_default_for_type" symbol="g_app_info_get_default_for_type">
        <return-type type="GAppInfo*"/>
        <parameters>
          <parameter type="const-char*" name="content_type"/>
        </parameters>
      </method>
      <method name="get_description" symbol="g_app_info_get_description">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </method>
      <method name="get_icon" symbol="g_app_info_get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </method>
      <method name="get_name" symbol="g_app_info_get_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_app_info_get_type">
        <return-type type="GType"/>
      </method>
      <method name="launch" symbol="g_app_info_launch">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="GList*" name="filenames"/>
          <parameter type="char**" name="envp"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="launch_uris" symbol="g_app_info_launch_uris">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="GList*" name="uris"/>
          <parameter type="char**" name="envp"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_as_default_for_type" symbol="g_app_info_set_as_default_for_type">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="const-char*" name="content_type"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="should_show" symbol="g_app_info_should_show">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
          <parameter type="const-char*" name="desktop_env"/>
        </parameters>
      </method>
      <method name="supports_uris" symbol="g_app_info_supports_uris">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </method>
      <method name="supports_xdg_startup_notify" symbol="g_app_info_supports_xdg_startup_notify">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GAppInfo*" name="appinfo"/>
        </parameters>
      </method>
    </interface>
    <interface name="GAsyncResult" type-name="GAsyncResult" get-type="">
      <vfunc name="get_user_data">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="GAsyncResult*" name="async_result"/>
        </parameters>
      </vfunc>
      <vfunc name="get_source_object">
        <return-type type="GObject*"/>
        <parameters>
          <parameter type="GAsyncResult*" name="async_result"/>
        </parameters>
      </vfunc>
      <method name="get_source_object" symbol="g_async_result_get_source_object">
        <return-type type="GObject*"/>
        <parameters>
          <parameter type="GAsyncResult*" name="res"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_async_result_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_user_data" symbol="g_async_result_get_user_data">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="GAsyncResult*" name="res"/>
        </parameters>
      </method>
    </interface>
    <interface name="GDrive" type-name="GDrive" get-type="">
      <signal name="changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </signal>
      <vfunc name="get_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </vfunc>
      <vfunc name="get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </vfunc>
      <vfunc name="get_volumes">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </vfunc>
      <vfunc name="is_automounted">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </vfunc>
      <vfunc name="can_mount">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </vfunc>
      <vfunc name="can_eject">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </vfunc>
      <vfunc name="mount">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GMountOperation*" name="mount_operation"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="mount_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="eject">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="eject_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="can_eject" symbol="g_drive_can_eject">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="can_mount" symbol="g_drive_can_mount">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="eject" symbol="g_drive_eject">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="eject_finish" symbol="g_drive_eject_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_icon" symbol="g_drive_get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="get_name" symbol="g_drive_get_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_drive_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_volumes" symbol="g_drive_get_volumes">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="is_automounted" symbol="g_drive_is_automounted">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="mount" symbol="g_drive_mount">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GMountOperation*" name="mount_operation"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="mount_finish" symbol="g_drive_mount_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDrive*" name="drive"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </interface>
    <interface name="GFile" type-name="GFile" get-type="">
      <vfunc name="dup">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="hash">
        <return-type type="guint"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file1"/>
          <parameter type="GFile*" name="file2"/>
        </parameters>
      </vfunc>
      <vfunc name="is_native">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="get_basename">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="get_path">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="get_uri">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="get_parse_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="get_parent">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </vfunc>
      <vfunc name="resolve_relative">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="relative_path"/>
        </parameters>
      </vfunc>
      <vfunc name="get_child_for_display_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="display_name"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="enumerate_children">
        <return-type type="GFileEnumerator*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="get_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_filesystem_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="set_display_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="display_name"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="query_settable_attributes">
        <return-type type="GFileAttributeInfoList*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="query_writable_namespaces">
        <return-type type="GFileAttributeInfoList*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="set_attribute">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-GFileAttributeValue*" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="set_attributes_from_info">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="read">
        <return-type type="GFileInputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="append_to">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="create">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="replace">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="delete_file">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="trash">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="make_directory">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="make_symbolic_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="symlink_value"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="copy">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="source"/>
          <parameter type="GFile*" name="destination"/>
          <parameter type="GFileCopyFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GFileProgressCallback" name="progress_callback"/>
          <parameter type="gpointer" name="progress_callback_data"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="move">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="source"/>
          <parameter type="GFile*" name="destination"/>
          <parameter type="GFileCopyFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GFileProgressCallback" name="progress_callback"/>
          <parameter type="gpointer" name="progress_callback_data"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="read_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="read_finish">
        <return-type type="GFileInputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="append_to_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="append_to_finish">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="create_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="create_finish">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="replace_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="replace_finish">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="mount_mountable">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GMountOperation*" name="mount_operation"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="mount_mountable_finish">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="unmount_mountable">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="unmount_mountable_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="eject_mountable">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="eject_mountable_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="mount_for_location">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="location"/>
          <parameter type="GMountOperation*" name="mount_operation"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="mount_for_location_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="location"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="monitor_dir">
        <return-type type="GDirectoryMonitor*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFileMonitorFlags" name="flags"/>
        </parameters>
      </vfunc>
      <vfunc name="monitor_file">
        <return-type type="GFileMonitor*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFileMonitorFlags" name="flags"/>
        </parameters>
      </vfunc>
      <method name="append_to" symbol="g_file_append_to">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="append_to_async" symbol="g_file_append_to_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="append_to_finish" symbol="g_file_append_to_finish">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="copy" symbol="g_file_copy">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="source"/>
          <parameter type="GFile*" name="destination"/>
          <parameter type="GFileCopyFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GFileProgressCallback" name="progress_callback"/>
          <parameter type="gpointer" name="progress_callback_data"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="create" symbol="g_file_create">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="create_async" symbol="g_file_create_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="create_finish" symbol="g_file_create_finish">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="delete" symbol="g_file_delete">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="dup" symbol="g_file_dup">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="eject_mountable" symbol="g_file_eject_mountable">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="eject_mountable_finish" symbol="g_file_eject_mountable_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="enumerate_children" symbol="g_file_enumerate_children">
        <return-type type="GFileEnumerator*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="equal" symbol="g_file_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file1"/>
          <parameter type="GFile*" name="file2"/>
        </parameters>
      </method>
      <method name="get_basename" symbol="g_file_get_basename">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="get_child" symbol="g_file_get_child">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="name"/>
        </parameters>
      </method>
      <method name="get_child_for_display_name" symbol="g_file_get_child_for_display_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="display_name"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_filesystem_info" symbol="g_file_get_filesystem_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_info" symbol="g_file_get_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_info_async" symbol="g_file_get_info_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="get_info_finish" symbol="g_file_get_info_finish">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_parent" symbol="g_file_get_parent">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="get_parse_name" symbol="g_file_get_parse_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="get_path" symbol="g_file_get_path">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_uri" symbol="g_file_get_uri">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="hash" symbol="g_file_hash">
        <return-type type="guint"/>
        <parameters>
          <parameter type="gconstpointer" name="file"/>
        </parameters>
      </method>
      <method name="is_native" symbol="g_file_is_native">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </method>
      <method name="load_contents" symbol="g_file_load_contents">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="char**" name="contents"/>
          <parameter type="gsize*" name="length"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="load_contents_async" symbol="g_file_load_contents_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="load_contents_finish" symbol="g_file_load_contents_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="char**" name="contents"/>
          <parameter type="gsize*" name="length"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="make_directory" symbol="g_file_make_directory">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="make_symbolic_link" symbol="g_file_make_symbolic_link">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="symlink_value"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="mount_mountable" symbol="g_file_mount_mountable">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GMountOperation*" name="mount_operation"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="mount_mountable_finish" symbol="g_file_mount_mountable_finish">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="move" symbol="g_file_move">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="source"/>
          <parameter type="GFile*" name="destination"/>
          <parameter type="GFileCopyFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GFileProgressCallback" name="progress_callback"/>
          <parameter type="gpointer" name="progress_callback_data"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="new_for_commandline_arg" symbol="g_file_new_for_commandline_arg">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="const-char*" name="arg"/>
        </parameters>
      </method>
      <method name="new_for_path" symbol="g_file_new_for_path">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="const-char*" name="path"/>
        </parameters>
      </method>
      <method name="new_for_uri" symbol="g_file_new_for_uri">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="const-char*" name="uri"/>
        </parameters>
      </method>
      <method name="parse_name" symbol="g_file_parse_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="const-char*" name="parse_name"/>
        </parameters>
      </method>
      <method name="query_settable_attributes" symbol="g_file_query_settable_attributes">
        <return-type type="GFileAttributeInfoList*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="query_writable_namespaces" symbol="g_file_query_writable_namespaces">
        <return-type type="GFileAttributeInfoList*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="read" symbol="g_file_read">
        <return-type type="GFileInputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="read_async" symbol="g_file_read_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="read_finish" symbol="g_file_read_finish">
        <return-type type="GFileInputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="replace" symbol="g_file_replace">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="replace_async" symbol="g_file_replace_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="replace_contents" symbol="g_file_replace_contents">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="contents"/>
          <parameter type="gsize" name="length"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="replace_contents_async" symbol="g_file_replace_contents_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="contents"/>
          <parameter type="gsize" name="length"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="replace_contents_finish" symbol="g_file_replace_contents_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="replace_finish" symbol="g_file_replace_finish">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="resolve_relative" symbol="g_file_resolve_relative">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="relative_path"/>
        </parameters>
      </method>
      <method name="set_attribute" symbol="g_file_set_attribute">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-GFileAttributeValue*" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attribute_byte_string" symbol="g_file_set_attribute_byte_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-char*" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attribute_int32" symbol="g_file_set_attribute_int32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="gint32" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attribute_int64" symbol="g_file_set_attribute_int64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="gint64" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attribute_string" symbol="g_file_set_attribute_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-char*" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attribute_uint32" symbol="g_file_set_attribute_uint32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="guint32" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attribute_uint64" symbol="g_file_set_attribute_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="guint64" name="value"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_attributes_from_info" symbol="g_file_set_attributes_from_info">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_display_name" symbol="g_file_set_display_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="const-char*" name="display_name"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="trash" symbol="g_file_trash">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="unmount_mountable" symbol="g_file_unmount_mountable">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="unmount_mountable_finish" symbol="g_file_unmount_mountable_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </interface>
    <interface name="GIcon" type-name="GIcon" get-type="">
      <vfunc name="hash">
        <return-type type="guint"/>
        <parameters>
          <parameter type="GIcon*" name="icon"/>
        </parameters>
      </vfunc>
      <vfunc name="equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GIcon*" name="icon1"/>
          <parameter type="GIcon*" name="icon2"/>
        </parameters>
      </vfunc>
      <method name="equal" symbol="g_icon_equal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GIcon*" name="icon1"/>
          <parameter type="GIcon*" name="icon2"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_icon_get_type">
        <return-type type="GType"/>
      </method>
      <method name="hash" symbol="g_icon_hash">
        <return-type type="guint"/>
        <parameters>
          <parameter type="gconstpointer" name="icon"/>
        </parameters>
      </method>
    </interface>
    <interface name="GLoadableIcon" type-name="GLoadableIcon" get-type="">
      <vfunc name="load">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter type="GLoadableIcon*" name="icon"/>
          <parameter type="int" name="size"/>
          <parameter type="char**" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="load_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GLoadableIcon*" name="icon"/>
          <parameter type="int" name="size"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="load_finish">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter type="GLoadableIcon*" name="icon"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="char**" name="type"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="get_type" symbol="g_loadable_icon_get_type">
        <return-type type="GType"/>
      </method>
      <method name="load" symbol="g_loadable_icon_load">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter type="GLoadableIcon*" name="icon"/>
          <parameter type="int" name="size"/>
          <parameter type="char**" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="load_async" symbol="g_loadable_icon_load_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GLoadableIcon*" name="icon"/>
          <parameter type="int" name="size"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="load_finish" symbol="g_loadable_icon_load_finish">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter type="GLoadableIcon*" name="icon"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="char**" name="type"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </interface>
    <interface name="GSeekable" type-name="GSeekable" get-type="">
      <vfunc name="tell">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
        </parameters>
      </vfunc>
      <vfunc name="can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
        </parameters>
      </vfunc>
      <vfunc name="seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GSeekType" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="can_truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
        </parameters>
      </vfunc>
      <vfunc name="truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="can_seek" symbol="g_seekable_can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
        </parameters>
      </method>
      <method name="can_truncate" symbol="g_seekable_can_truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_seekable_get_type">
        <return-type type="GType"/>
      </method>
      <method name="seek" symbol="g_seekable_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GSeekType" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="err"/>
        </parameters>
      </method>
      <method name="tell" symbol="g_seekable_tell">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
        </parameters>
      </method>
      <method name="truncate" symbol="g_seekable_truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSeekable*" name="seekable"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="err"/>
        </parameters>
      </method>
    </interface>
    <interface name="GVolume" type-name="GVolume" get-type="">
      <signal name="changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </signal>
      <vfunc name="get_root">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <vfunc name="get_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <vfunc name="get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <vfunc name="get_drive">
        <return-type type="GDrive*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <vfunc name="can_unmount">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <vfunc name="can_eject">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <vfunc name="unmount">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="unmount_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="eject">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="eject_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_platform_id">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </vfunc>
      <method name="can_eject" symbol="g_volume_can_eject">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="can_unmount" symbol="g_volume_can_unmount">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="eject" symbol="g_volume_eject">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="eject_finish" symbol="g_volume_eject_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_drive" symbol="g_volume_get_drive">
        <return-type type="GDrive*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="get_icon" symbol="g_volume_get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="get_name" symbol="g_volume_get_name">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="get_root" symbol="g_volume_get_root">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_volume_get_type">
        <return-type type="GType"/>
      </method>
      <method name="unmount" symbol="g_volume_unmount">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="unmount_finish" symbol="g_volume_unmount_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </interface>
    <object name="GIOModule" type-name="GIOModule" get-type="" parent="GTypeModule">
      <method name="get_type" symbol="g_io_module_get_type">
        <return-type type="GType"/>
      </method>
      <method name="load" symbol="g_io_module_load">
        <return-type type="void"/>
        <parameters>
          <parameter type="GIOModule*" name="module"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_io_module_new">
        <parameters>
          <parameter type="const-gchar*" name="filename"/>
        </parameters>
      </constructor>
      <method name="unload" symbol="g_io_module_unload">
        <return-type type="void"/>
        <parameters>
          <parameter type="GIOModule*" name="module"/>
        </parameters>
      </method>
    </object>
    <object name="GBufferedInputStream" type-name="GBufferedInputStream" get-type="" parent="GFilterInputStream">
      <field name="priv" type="GBufferedInputStreamPrivate*"/>
      <property name="buffer-size" readable="1" writable="1" construct="1" type="guint"/>
      <vfunc name="fill">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="gssize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="fill_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="gssize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="fill_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="fill" symbol="g_buffered_input_stream_fill">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="gssize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="fill_async" symbol="g_buffered_input_stream_fill_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="gssize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="fill_finish" symbol="g_buffered_input_stream_fill_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_availible" symbol="g_buffered_input_stream_get_availible">
        <return-type type="gsize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_buffer_size" symbol="g_buffered_input_stream_get_buffer_size">
        <return-type type="gsize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_buffered_input_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_buffered_input_stream_new">
        <parameters>
          <parameter type="GInputStream*" name="base_stream"/>
        </parameters>
      </constructor>
      <constructor name="new_sized" symbol="g_buffered_input_stream_new_sized">
        <parameters>
          <parameter type="GInputStream*" name="base_stream"/>
          <parameter type="gsize" name="size"/>
        </parameters>
      </constructor>
      <method name="peek" symbol="g_buffered_input_stream_peek">
        <return-type type="gsize"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="void*" name="buffer"/>
          <parameter type="gsize" name="offset"/>
          <parameter type="gsize" name="count"/>
        </parameters>
      </method>
      <method name="set_buffer_size" symbol="g_buffered_input_stream_set_buffer_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="GBufferedInputStream*" name="stream"/>
          <parameter type="gsize" name="size"/>
        </parameters>
      </method>
    </object>
    <object name="GBufferedOutputStream" type-name="GBufferedOutputStream" get-type="" parent="GFilterOutputStream">
      <field name="priv" type="GBufferedOutputStreamPrivate*"/>
      <property name="buffer-size" readable="1" writable="1" construct-only="1" type="guint"/>
      <method name="get_auto_grow" symbol="g_buffered_output_stream_get_auto_grow">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GBufferedOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_buffer_size" symbol="g_buffered_output_stream_get_buffer_size">
        <return-type type="gsize"/>
        <parameters>
          <parameter type="GBufferedOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_buffered_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_buffered_output_stream_new">
        <parameters>
          <parameter type="GOutputStream*" name="base_stream"/>
        </parameters>
      </constructor>
      <constructor name="new_sized" symbol="g_buffered_output_stream_new_sized">
        <parameters>
          <parameter type="GOutputStream*" name="base_stream"/>
          <parameter type="guint" name="size"/>
        </parameters>
      </constructor>
      <method name="set_auto_grow" symbol="g_buffered_output_stream_set_auto_grow">
        <return-type type="void"/>
        <parameters>
          <parameter type="GBufferedOutputStream*" name="stream"/>
          <parameter type="gboolean" name="auto_grow"/>
        </parameters>
      </method>
      <method name="set_buffer_size" symbol="g_buffered_output_stream_set_buffer_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="GBufferedOutputStream*" name="stream"/>
          <parameter type="gsize" name="size"/>
        </parameters>
      </method>
    </object>
    <object name="GCancellable" type-name="GCancellable" get-type="" parent="GObject">
      <signal name="cancelled" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GCancellable*" name="cancellable"/>
        </parameters>
      </signal>
      <method name="cancel" symbol="g_cancellable_cancel">
        <return-type type="void"/>
        <parameters>
          <parameter type="GCancellable*" name="cancellable"/>
        </parameters>
      </method>
      <method name="get_current" symbol="g_cancellable_get_current">
        <return-type type="GCancellable*"/>
      </method>
      <method name="get_fd" symbol="g_cancellable_get_fd">
        <return-type type="int"/>
        <parameters>
          <parameter type="GCancellable*" name="cancellable"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_cancellable_get_type">
        <return-type type="GType"/>
      </method>
      <method name="is_cancelled" symbol="g_cancellable_is_cancelled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GCancellable*" name="cancellable"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_cancellable_new"/>
      <method name="reset" symbol="g_cancellable_reset">
        <return-type type="void"/>
        <parameters>
          <parameter type="GCancellable*" name="cancellable"/>
        </parameters>
      </method>
      <method name="set_error_if_cancelled" symbol="g_cancellable_set_error_if_cancelled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </object>
    <object name="GDataInputStream" type-name="GDataInputStream" get-type="" parent="GBufferedInputStream">
      <field name="priv" type="GDataInputStreamPrivate*"/>
      <method name="get_byte" symbol="g_data_input_stream_get_byte">
        <return-type type="guchar"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_byte_order" symbol="g_data_input_stream_get_byte_order">
        <return-type type="GDataStreamByteOrder"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
        </parameters>
      </method>
      <method name="get_int16" symbol="g_data_input_stream_get_int16">
        <return-type type="gint16"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_int32" symbol="g_data_input_stream_get_int32">
        <return-type type="gint32"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_int64" symbol="g_data_input_stream_get_int64">
        <return-type type="gint64"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_line" symbol="g_data_input_stream_get_line">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="gsize*" name="length"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_newline_type" symbol="g_data_input_stream_get_newline_type">
        <return-type type="GDataStreamNewlineType"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_data_input_stream_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_uint16" symbol="g_data_input_stream_get_uint16">
        <return-type type="guint16"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_uint32" symbol="g_data_input_stream_get_uint32">
        <return-type type="guint32"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_uint64" symbol="g_data_input_stream_get_uint64">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_until" symbol="g_data_input_stream_get_until">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="gchar" name="stop_char"/>
          <parameter type="gsize*" name="length"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_data_input_stream_new">
        <parameters>
          <parameter type="GInputStream*" name="base_stream"/>
        </parameters>
      </constructor>
      <method name="set_byte_order" symbol="g_data_input_stream_set_byte_order">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GDataStreamByteOrder" name="order"/>
        </parameters>
      </method>
      <method name="set_newline_type" symbol="g_data_input_stream_set_newline_type">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDataInputStream*" name="data_stream"/>
          <parameter type="GDataStreamNewlineType" name="type"/>
        </parameters>
      </method>
    </object>
    <object name="GDataOutputStream" type-name="GDataOutputStream" get-type="" parent="GFilterOutputStream">
      <field name="priv" type="GDataOutputStreamPrivate*"/>
      <method name="get_byte_order" symbol="g_data_output_stream_get_byte_order">
        <return-type type="GDataStreamByteOrder"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_data_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_data_output_stream_new">
        <parameters>
          <parameter type="GOutputStream*" name="base_stream"/>
        </parameters>
      </constructor>
      <method name="put_byte" symbol="g_data_output_stream_put_byte">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="guchar" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_int16" symbol="g_data_output_stream_put_int16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="gint16" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_int32" symbol="g_data_output_stream_put_int32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="gint32" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_int64" symbol="g_data_output_stream_put_int64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="gint64" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_string" symbol="g_data_output_stream_put_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="char*" name="str"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_uint16" symbol="g_data_output_stream_put_uint16">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="guint16" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_uint32" symbol="g_data_output_stream_put_uint32">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="guint32" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="put_uint64" symbol="g_data_output_stream_put_uint64">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="guint64" name="data"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_byte_order" symbol="g_data_output_stream_set_byte_order">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="GDataStreamByteOrder" name="order"/>
        </parameters>
      </method>
      <method name="set_expand_buffer" symbol="g_data_output_stream_set_expand_buffer">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDataOutputStream*" name="data_stream"/>
          <parameter type="gboolean" name="expand_buffer"/>
        </parameters>
      </method>
    </object>
    <object name="GDesktopAppInfo" type-name="GDesktopAppInfo" get-type="" parent="GObject">
      <implements>
        <interface name="GAppInfo"/>
      </implements>
      <method name="get_type" symbol="g_desktop_app_info_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_desktop_app_info_new">
        <parameters>
          <parameter type="const-char*" name="desktop_id"/>
        </parameters>
      </constructor>
    </object>
    <object name="GDirectoryMonitor" type-name="GDirectoryMonitor" get-type="" parent="GObject">
      <field name="priv" type="GDirectoryMonitorPrivate*"/>
      <signal name="changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDirectoryMonitor*" name="monitor"/>
          <parameter type="GFile*" name="child"/>
          <parameter type="GFile*" name="other_file"/>
          <parameter type="GFileMonitorEvent" name="event_type"/>
        </parameters>
      </signal>
      <vfunc name="cancel">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDirectoryMonitor*" name="monitor"/>
        </parameters>
      </vfunc>
      <method name="cancel" symbol="g_directory_monitor_cancel">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDirectoryMonitor*" name="monitor"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_directory_monitor_get_type">
        <return-type type="GType"/>
      </method>
      <method name="is_cancelled" symbol="g_directory_monitor_is_cancelled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GDirectoryMonitor*" name="monitor"/>
        </parameters>
      </method>
      <method name="set_rate_limit" symbol="g_directory_monitor_set_rate_limit">
        <return-type type="void"/>
        <parameters>
          <parameter type="GDirectoryMonitor*" name="monitor"/>
          <parameter type="int" name="limit_msecs"/>
        </parameters>
      </method>
    </object>
    <object name="GDummyFile" type-name="GDummyFile" get-type="" parent="GObject">
      <implements>
        <interface name="GFile"/>
      </implements>
      <method name="get_type" symbol="g_dummy_file_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_dummy_file_new">
        <parameters>
          <parameter type="const-char*" name="uri"/>
        </parameters>
      </constructor>
    </object>
    <object name="GFileEnumerator" type-name="GFileEnumerator" get-type="" parent="GObject">
      <field name="priv" type="GFileEnumeratorPrivate*"/>
      <vfunc name="next_file">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="next_files_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="int" name="num_files"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="next_files_finish">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="close" symbol="g_file_enumerator_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="close_async" symbol="g_file_enumerator_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="close_finish" symbol="g_file_enumerator_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_enumerator_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_pending" symbol="g_file_enumerator_has_pending">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
        </parameters>
      </method>
      <method name="is_closed" symbol="g_file_enumerator_is_closed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
        </parameters>
      </method>
      <method name="next_file" symbol="g_file_enumerator_next_file">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="next_files_async" symbol="g_file_enumerator_next_files_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="int" name="num_files"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="next_files_finish" symbol="g_file_enumerator_next_files_finish">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="GAsyncResult*" name="res"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_pending" symbol="g_file_enumerator_set_pending">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileEnumerator*" name="enumerator"/>
          <parameter type="gboolean" name="pending"/>
        </parameters>
      </method>
    </object>
    <object name="GFileIcon" type-name="GFileIcon" get-type="" parent="GObject">
      <implements>
        <interface name="GIcon"/>
        <interface name="GLoadableIcon"/>
      </implements>
      <method name="get_file" symbol="g_file_icon_get_file">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GFileIcon*" name="icon"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_icon_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_file_icon_new">
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </constructor>
    </object>
    <object name="GFileInfo" type-name="GFileInfo" get-type="" parent="GObject">
      <method name="clear_status" symbol="g_file_info_clear_status">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="copy_into" symbol="g_file_info_copy_into">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="src"/>
          <parameter type="GFileInfo*" name="dest"/>
        </parameters>
      </method>
      <method name="dup" symbol="g_file_info_dup">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_attribute" symbol="g_file_info_get_attribute">
        <return-type type="GFileAttributeValue*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_boolean" symbol="g_file_info_get_attribute_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_byte_string" symbol="g_file_info_get_attribute_byte_string">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_int32" symbol="g_file_info_get_attribute_int32">
        <return-type type="gint32"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_int64" symbol="g_file_info_get_attribute_int64">
        <return-type type="gint64"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_object" symbol="g_file_info_get_attribute_object">
        <return-type type="GObject*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_string" symbol="g_file_info_get_attribute_string">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_type" symbol="g_file_info_get_attribute_type">
        <return-type type="GFileAttributeType"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_uint32" symbol="g_file_info_get_attribute_uint32">
        <return-type type="guint32"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_attribute_uint64" symbol="g_file_info_get_attribute_uint64">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="get_content_type" symbol="g_file_info_get_content_type">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_display_name" symbol="g_file_info_get_display_name">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_edit_name" symbol="g_file_info_get_edit_name">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_etag" symbol="g_file_info_get_etag">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_file_type" symbol="g_file_info_get_file_type">
        <return-type type="GFileType"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_icon" symbol="g_file_info_get_icon">
        <return-type type="GIcon*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_is_hidden" symbol="g_file_info_get_is_hidden">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_is_symlink" symbol="g_file_info_get_is_symlink">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_modification_time" symbol="g_file_info_get_modification_time">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GTimeVal*" name="result"/>
        </parameters>
      </method>
      <method name="get_name" symbol="g_file_info_get_name">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_size" symbol="g_file_info_get_size">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_sort_order" symbol="g_file_info_get_sort_order">
        <return-type type="gint32"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_symlink_target" symbol="g_file_info_get_symlink_target">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_info_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_attribute" symbol="g_file_info_has_attribute">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="list_attributes" symbol="g_file_info_list_attributes">
        <return-type type="char**"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="name_space"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_file_info_new"/>
      <method name="remove_attribute" symbol="g_file_info_remove_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
        </parameters>
      </method>
      <method name="set_attribute" symbol="g_file_info_set_attribute">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-GFileAttributeValue*" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_boolean" symbol="g_file_info_set_attribute_boolean">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="gboolean" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_byte_string" symbol="g_file_info_set_attribute_byte_string">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-char*" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_int32" symbol="g_file_info_set_attribute_int32">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="gint32" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_int64" symbol="g_file_info_set_attribute_int64">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="gint64" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_mask" symbol="g_file_info_set_attribute_mask">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GFileAttributeMatcher*" name="mask"/>
        </parameters>
      </method>
      <method name="set_attribute_object" symbol="g_file_info_set_attribute_object">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="GObject*" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_string" symbol="g_file_info_set_attribute_string">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="const-char*" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_uint32" symbol="g_file_info_set_attribute_uint32">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="guint32" name="value"/>
        </parameters>
      </method>
      <method name="set_attribute_uint64" symbol="g_file_info_set_attribute_uint64">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="attribute"/>
          <parameter type="guint64" name="value"/>
        </parameters>
      </method>
      <method name="set_content_type" symbol="g_file_info_set_content_type">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="content_type"/>
        </parameters>
      </method>
      <method name="set_display_name" symbol="g_file_info_set_display_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="display_name"/>
        </parameters>
      </method>
      <method name="set_edit_name" symbol="g_file_info_set_edit_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="edit_name"/>
        </parameters>
      </method>
      <method name="set_file_type" symbol="g_file_info_set_file_type">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GFileType" name="type"/>
        </parameters>
      </method>
      <method name="set_icon" symbol="g_file_info_set_icon">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GIcon*" name="icon"/>
        </parameters>
      </method>
      <method name="set_is_hidden" symbol="g_file_info_set_is_hidden">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="gboolean" name="is_hidden"/>
        </parameters>
      </method>
      <method name="set_is_symlink" symbol="g_file_info_set_is_symlink">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="gboolean" name="is_symlink"/>
        </parameters>
      </method>
      <method name="set_modification_time" symbol="g_file_info_set_modification_time">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="GTimeVal*" name="mtime"/>
        </parameters>
      </method>
      <method name="set_name" symbol="g_file_info_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="name"/>
        </parameters>
      </method>
      <method name="set_size" symbol="g_file_info_set_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="goffset" name="size"/>
        </parameters>
      </method>
      <method name="set_sort_order" symbol="g_file_info_set_sort_order">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="gint32" name="sort_order"/>
        </parameters>
      </method>
      <method name="set_symlink_target" symbol="g_file_info_set_symlink_target">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
          <parameter type="const-char*" name="symlink_target"/>
        </parameters>
      </method>
      <method name="unset_attribute_mask" symbol="g_file_info_unset_attribute_mask">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileInfo*" name="info"/>
        </parameters>
      </method>
    </object>
    <object name="GFileInputStream" type-name="GFileInputStream" get-type="" parent="GInputStream">
      <field name="priv" type="GFileInputStreamPrivate*"/>
      <vfunc name="tell">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
        </parameters>
      </vfunc>
      <vfunc name="can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
        </parameters>
      </vfunc>
      <vfunc name="seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GSeekType" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_file_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
          <parameter type="char*" name="attributes"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <implements>
        <interface name="GSeekable"/>
      </implements>
      <method name="can_seek" symbol="g_file_input_stream_can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_file_info" symbol="g_file_input_stream_get_file_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
          <parameter type="char*" name="attributes"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_input_stream_get_type">
        <return-type type="GType"/>
      </method>
      <method name="seek" symbol="g_file_input_stream_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GSeekType" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="tell" symbol="g_file_input_stream_tell">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GFileInputStream*" name="stream"/>
        </parameters>
      </method>
    </object>
    <object name="GFileMonitor" type-name="GFileMonitor" get-type="" parent="GObject">
      <field name="priv" type="GFileMonitorPrivate*"/>
      <signal name="changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileMonitor*" name="monitor"/>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFile*" name="other_file"/>
          <parameter type="GFileMonitorEvent" name="event_type"/>
        </parameters>
      </signal>
      <vfunc name="cancel">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileMonitor*" name="monitor"/>
        </parameters>
      </vfunc>
      <method name="cancel" symbol="g_file_monitor_cancel">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileMonitor*" name="monitor"/>
        </parameters>
      </method>
      <method name="directory" symbol="g_file_monitor_directory">
        <return-type type="GDirectoryMonitor*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFileMonitorFlags" name="flags"/>
        </parameters>
      </method>
      <method name="file" symbol="g_file_monitor_file">
        <return-type type="GFileMonitor*"/>
        <parameters>
          <parameter type="GFile*" name="file"/>
          <parameter type="GFileMonitorFlags" name="flags"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_monitor_get_type">
        <return-type type="GType"/>
      </method>
      <method name="is_cancelled" symbol="g_file_monitor_is_cancelled">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileMonitor*" name="monitor"/>
        </parameters>
      </method>
      <method name="set_rate_limit" symbol="g_file_monitor_set_rate_limit">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileMonitor*" name="monitor"/>
          <parameter type="int" name="limit_msecs"/>
        </parameters>
      </method>
    </object>
    <object name="GFileOutputStream" type-name="GFileOutputStream" get-type="" parent="GOutputStream">
      <field name="priv" type="GFileOutputStreamPrivate*"/>
      <vfunc name="tell">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
        </parameters>
      </vfunc>
      <vfunc name="can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
        </parameters>
      </vfunc>
      <vfunc name="seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GSeekType" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="can_truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
        </parameters>
      </vfunc>
      <vfunc name="truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="goffset" name="size"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_file_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="char*" name="attributes"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="get_etag">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <implements>
        <interface name="GSeekable"/>
      </implements>
      <method name="can_seek" symbol="g_file_output_stream_can_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="can_truncate" symbol="g_file_output_stream_can_truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_etag" symbol="g_file_output_stream_get_etag">
        <return-type type="char*"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_file_info" symbol="g_file_output_stream_get_file_info">
        <return-type type="GFileInfo*"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="char*" name="attributes"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_file_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <method name="seek" symbol="g_file_output_stream_seek">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="goffset" name="offset"/>
          <parameter type="GSeekType" name="type"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="tell" symbol="g_file_output_stream_tell">
        <return-type type="goffset"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="truncate" symbol="g_file_output_stream_truncate">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileOutputStream*" name="stream"/>
          <parameter type="goffset" name="size"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </object>
    <object name="GFilterInputStream" type-name="GFilterInputStream" get-type="" parent="GInputStream">
      <field name="base_stream" type="GInputStream*"/>
      <property name="base-stream" readable="1" writable="1" construct-only="1" type="GInputStream"/>
      <method name="get_base_stream" symbol="g_filter_input_stream_get_base_stream">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter type="GFilterInputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_filter_input_stream_get_type">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="GFilterOutputStream" type-name="GFilterOutputStream" get-type="" parent="GOutputStream">
      <field name="base_stream" type="GOutputStream*"/>
      <property name="base-stream" readable="1" writable="1" construct-only="1" type="GOutputStream"/>
      <method name="get_base_stream" symbol="g_filter_output_stream_get_base_stream">
        <return-type type="GOutputStream*"/>
        <parameters>
          <parameter type="GFilterOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_filter_output_stream_get_type">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="GInputStream" type-name="GInputStream" get-type="" parent="GObject">
      <field name="priv" type="GInputStreamPrivate*"/>
      <vfunc name="read">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="skip">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="gsize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="read_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="read_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="skip_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="gsize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="skip_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="close" symbol="g_input_stream_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="close_async" symbol="g_input_stream_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="close_finish" symbol="g_input_stream_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_input_stream_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_pending" symbol="g_input_stream_has_pending">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="is_closed" symbol="g_input_stream_is_closed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="read" symbol="g_input_stream_read">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="read_all" symbol="g_input_stream_read_all">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="gsize*" name="bytes_read"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="read_async" symbol="g_input_stream_read_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="read_finish" symbol="g_input_stream_read_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="set_pending" symbol="g_input_stream_set_pending">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="gboolean" name="pending"/>
        </parameters>
      </method>
      <method name="skip" symbol="g_input_stream_skip">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="gsize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="skip_async" symbol="g_input_stream_skip_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="gsize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="skip_finish" symbol="g_input_stream_skip_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GInputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </object>
    <object name="GLocalDirectoryMonitor" type-name="GLocalDirectoryMonitor" get-type="" parent="GDirectoryMonitor">
      <method name="get_type" symbol="g_local_directory_monitor_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_local_directory_monitor_new">
        <parameters>
          <parameter type="const-char*" name="dirname"/>
          <parameter type="GFileMonitorFlags" name="flags"/>
        </parameters>
      </constructor>
    </object>
    <object name="GLocalFile" type-name="GLocalFile" get-type="" parent="GObject">
      <implements>
        <interface name="GFile"/>
      </implements>
      <method name="get_type" symbol="g_local_file_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_local_file_new">
        <parameters>
          <parameter type="const-char*" name="filename"/>
        </parameters>
      </constructor>
    </object>
    <object name="GLocalFileEnumerator" type-name="GLocalFileEnumerator" get-type="" parent="GFileEnumerator">
      <method name="get_type" symbol="g_local_file_enumerator_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_local_file_enumerator_new">
        <parameters>
          <parameter type="const-char*" name="filename"/>
          <parameter type="const-char*" name="attributes"/>
          <parameter type="GFileGetInfoFlags" name="flags"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </constructor>
    </object>
    <object name="GLocalFileInputStream" type-name="GLocalFileInputStream" get-type="" parent="GFileInputStream">
      <field name="priv" type="GLocalFileInputStreamPrivate*"/>
      <method name="get_type" symbol="g_local_file_input_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_local_file_input_stream_new">
        <parameters>
          <parameter type="int" name="fd"/>
        </parameters>
      </constructor>
    </object>
    <object name="GLocalFileMonitor" type-name="GLocalFileMonitor" get-type="" parent="GFileMonitor">
      <method name="get_type" symbol="g_local_file_monitor_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_local_file_monitor_new">
        <parameters>
          <parameter type="const-char*" name="dirname"/>
          <parameter type="GFileMonitorFlags" name="flags"/>
        </parameters>
      </constructor>
    </object>
    <object name="GLocalFileOutputStream" type-name="GLocalFileOutputStream" get-type="" parent="GFileOutputStream">
      <field name="priv" type="GLocalFileOutputStreamPrivate*"/>
      <method name="append" symbol="g_local_file_output_stream_append">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="const-char*" name="filename"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="create" symbol="g_local_file_output_stream_create">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="const-char*" name="filename"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_local_file_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <method name="replace" symbol="g_local_file_output_stream_replace">
        <return-type type="GFileOutputStream*"/>
        <parameters>
          <parameter type="const-char*" name="filename"/>
          <parameter type="const-char*" name="etag"/>
          <parameter type="gboolean" name="make_backup"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </object>
    <object name="GLocalVfs" type-name="GLocalVfs" get-type="" parent="GVfs">
      <method name="get_type" symbol="g_local_vfs_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_local_vfs_new"/>
    </object>
    <object name="GMemoryInputStream" type-name="GMemoryInputStream" get-type="" parent="GInputStream">
      <field name="priv" type="GMemoryInputStreamPrivate*"/>
      <implements>
        <interface name="GSeekable"/>
      </implements>
      <method name="from_data" symbol="g_memory_input_stream_from_data">
        <return-type type="GInputStream*"/>
        <parameters>
          <parameter type="const-void*" name="data"/>
          <parameter type="gssize" name="len"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_memory_input_stream_get_type">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="GMemoryOutputStream" type-name="GMemoryOutputStream" get-type="" parent="GOutputStream">
      <field name="priv" type="GMemoryOutputStreamPrivate*"/>
      <property name="data" readable="1" writable="1" construct="1" type="gpointer"/>
      <property name="free-array" readable="1" writable="1" type="gboolean"/>
      <property name="size-limit" readable="1" writable="1" type="guint"/>
      <implements>
        <interface name="GSeekable"/>
      </implements>
      <method name="get_data" symbol="g_memory_output_stream_get_data">
        <return-type type="GByteArray*"/>
        <parameters>
          <parameter type="GMemoryOutputStream*" name="ostream"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_memory_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_memory_output_stream_new">
        <parameters>
          <parameter type="GByteArray*" name="data"/>
        </parameters>
      </constructor>
      <method name="set_max_size" symbol="g_memory_output_stream_set_max_size">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMemoryOutputStream*" name="ostream"/>
          <parameter type="guint" name="max_size"/>
        </parameters>
      </method>
    </object>
    <object name="GMountOperation" type-name="GMountOperation" get-type="" parent="GObject">
      <field name="priv" type="GMountOperationPrivate*"/>
      <signal name="ask_password" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="const-char*" name="message"/>
          <parameter type="const-char*" name="default_user"/>
          <parameter type="const-char*" name="default_domain"/>
          <parameter type="GPasswordFlags" name="flags"/>
        </parameters>
      </signal>
      <signal name="ask_question" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="const-char*" name="message"/>
          <parameter type="const-char*[]" name="choices"/>
        </parameters>
      </signal>
      <signal name="reply" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="gboolean" name="abort"/>
        </parameters>
      </signal>
      <method name="get_anonymous" symbol="g_mount_operation_get_anonymous">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
        </parameters>
      </method>
      <method name="get_choice" symbol="g_mount_operation_get_choice">
        <return-type type="int"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
        </parameters>
      </method>
      <method name="get_domain" symbol="g_mount_operation_get_domain">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
        </parameters>
      </method>
      <method name="get_password" symbol="g_mount_operation_get_password">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
        </parameters>
      </method>
      <method name="get_password_save" symbol="g_mount_operation_get_password_save">
        <return-type type="GPasswordSave"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_mount_operation_get_type">
        <return-type type="GType"/>
      </method>
      <method name="get_username" symbol="g_mount_operation_get_username">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_mount_operation_new"/>
      <method name="reply" symbol="g_mount_operation_reply">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="gboolean" name="abort"/>
        </parameters>
      </method>
      <method name="set_anonymous" symbol="g_mount_operation_set_anonymous">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="gboolean" name="anonymous"/>
        </parameters>
      </method>
      <method name="set_choice" symbol="g_mount_operation_set_choice">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="int" name="choice"/>
        </parameters>
      </method>
      <method name="set_domain" symbol="g_mount_operation_set_domain">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="const-char*" name="domain"/>
        </parameters>
      </method>
      <method name="set_password" symbol="g_mount_operation_set_password">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="const-char*" name="password"/>
        </parameters>
      </method>
      <method name="set_password_save" symbol="g_mount_operation_set_password_save">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="GPasswordSave" name="save"/>
        </parameters>
      </method>
      <method name="set_username" symbol="g_mount_operation_set_username">
        <return-type type="void"/>
        <parameters>
          <parameter type="GMountOperation*" name="op"/>
          <parameter type="const-char*" name="username"/>
        </parameters>
      </method>
    </object>
    <object name="GOutputStream" type-name="GOutputStream" get-type="" parent="GObject">
      <field name="priv" type="GOutputStreamPrivate*"/>
      <vfunc name="write">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="const-void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="flush">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="write_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="const-void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="write_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="flush_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="flush_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <vfunc name="close_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </vfunc>
      <vfunc name="close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </vfunc>
      <method name="close" symbol="g_output_stream_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="close_async" symbol="g_output_stream_close_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="close_finish" symbol="g_output_stream_close_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="flush" symbol="g_output_stream_flush">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="flush_async" symbol="g_output_stream_flush_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="flush_finish" symbol="g_output_stream_flush_finish">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_pending" symbol="g_output_stream_has_pending">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="is_closed" symbol="g_output_stream_is_closed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
        </parameters>
      </method>
      <method name="set_pending" symbol="g_output_stream_set_pending">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="gboolean" name="pending"/>
        </parameters>
      </method>
      <method name="write" symbol="g_output_stream_write">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="const-void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="write_all" symbol="g_output_stream_write_all">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="const-void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="gsize*" name="bytes_written"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
      <method name="write_async" symbol="g_output_stream_write_async">
        <return-type type="void"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="const-void*" name="buffer"/>
          <parameter type="gsize" name="count"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="write_finish" symbol="g_output_stream_write_finish">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GOutputStream*" name="stream"/>
          <parameter type="GAsyncResult*" name="result"/>
          <parameter type="GError**" name="error"/>
        </parameters>
      </method>
    </object>
    <object name="GPollFileMonitor" type-name="GPollFileMonitor" get-type="" parent="GFileMonitor">
      <method name="get_type" symbol="g_poll_file_monitor_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_poll_file_monitor_new">
        <parameters>
          <parameter type="GFile*" name="file"/>
        </parameters>
      </constructor>
    </object>
    <object name="GSimpleAsyncResult" type-name="GSimpleAsyncResult" get-type="" parent="GObject">
      <implements>
        <interface name="GAsyncResult"/>
      </implements>
      <method name="complete" symbol="g_simple_async_result_complete">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
        </parameters>
      </method>
      <method name="complete_in_idle" symbol="g_simple_async_result_complete_in_idle">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
        </parameters>
      </method>
      <method name="get_op_res_gboolean" symbol="g_simple_async_result_get_op_res_gboolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
        </parameters>
      </method>
      <method name="get_op_res_gpointer" symbol="g_simple_async_result_get_op_res_gpointer">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
        </parameters>
      </method>
      <method name="get_op_res_gssize" symbol="g_simple_async_result_get_op_res_gssize">
        <return-type type="gssize"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
        </parameters>
      </method>
      <method name="get_source_tag" symbol="g_simple_async_result_get_source_tag">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_simple_async_result_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_simple_async_result_new">
        <parameters>
          <parameter type="GObject*" name="source_object"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
          <parameter type="gpointer" name="source_tag"/>
        </parameters>
      </constructor>
      <constructor name="new_error" symbol="g_simple_async_result_new_error">
        <parameters>
          <parameter type="GObject*" name="source_object"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
          <parameter type="GQuark" name="domain"/>
          <parameter type="gint" name="code"/>
          <parameter type="const-char*" name="format"/>
        </parameters>
      </constructor>
      <constructor name="new_from_error" symbol="g_simple_async_result_new_from_error">
        <parameters>
          <parameter type="GObject*" name="source_object"/>
          <parameter type="GAsyncReadyCallback" name="callback"/>
          <parameter type="gpointer" name="user_data"/>
          <parameter type="GError*" name="error"/>
        </parameters>
      </constructor>
      <method name="propagate_error" symbol="g_simple_async_result_propagate_error">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="GError**" name="dest"/>
        </parameters>
      </method>
      <method name="run_in_thread" symbol="g_simple_async_result_run_in_thread">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="GSimpleAsyncThreadFunc" name="func"/>
          <parameter type="int" name="io_priority"/>
          <parameter type="GCancellable*" name="cancellable"/>
        </parameters>
      </method>
      <method name="set_error" symbol="g_simple_async_result_set_error">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="GQuark" name="domain"/>
          <parameter type="gint" name="code"/>
          <parameter type="const-char*" name="format"/>
        </parameters>
      </method>
      <method name="set_error_va" symbol="g_simple_async_result_set_error_va">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="GQuark" name="domain"/>
          <parameter type="gint" name="code"/>
          <parameter type="const-char*" name="format"/>
          <parameter type="va_list" name="args"/>
        </parameters>
      </method>
      <method name="set_from_error" symbol="g_simple_async_result_set_from_error">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="GError*" name="error"/>
        </parameters>
      </method>
      <method name="set_handle_cancellation" symbol="g_simple_async_result_set_handle_cancellation">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="gboolean" name="handle_cancellation"/>
        </parameters>
      </method>
      <method name="set_op_res_gboolean" symbol="g_simple_async_result_set_op_res_gboolean">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="gboolean" name="op_res"/>
        </parameters>
      </method>
      <method name="set_op_res_gpointer" symbol="g_simple_async_result_set_op_res_gpointer">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="gpointer" name="op_res"/>
          <parameter type="GDestroyNotify" name="destroy_op_res"/>
        </parameters>
      </method>
      <method name="set_op_res_gssize" symbol="g_simple_async_result_set_op_res_gssize">
        <return-type type="void"/>
        <parameters>
          <parameter type="GSimpleAsyncResult*" name="simple"/>
          <parameter type="gssize" name="op_res"/>
        </parameters>
      </method>
    </object>
    <object name="GSocketInputStream" type-name="GSocketInputStream" get-type="" parent="GInputStream">
      <field name="priv" type="GSocketInputStreamPrivate*"/>
      <method name="get_type" symbol="g_socket_input_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_socket_input_stream_new">
        <parameters>
          <parameter type="int" name="fd"/>
          <parameter type="gboolean" name="close_fd_at_close"/>
        </parameters>
      </constructor>
    </object>
    <object name="GSocketOutputStream" type-name="GSocketOutputStream" get-type="" parent="GOutputStream">
      <field name="priv" type="GSocketOutputStreamPrivate*"/>
      <method name="get_type" symbol="g_socket_output_stream_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_socket_output_stream_new">
        <parameters>
          <parameter type="int" name="fd"/>
          <parameter type="gboolean" name="close_fd_at_close"/>
        </parameters>
      </constructor>
    </object>
    <object name="GThemedIcon" type-name="GThemedIcon" get-type="" parent="GObject">
      <implements>
        <interface name="GIcon"/>
      </implements>
      <method name="get_names" symbol="g_themed_icon_get_names">
        <return-type type="char**"/>
        <parameters>
          <parameter type="GThemedIcon*" name="icon"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_themed_icon_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="g_themed_icon_new">
        <parameters>
          <parameter type="const-char*" name="iconname"/>
        </parameters>
      </constructor>
      <constructor name="new_from_names" symbol="g_themed_icon_new_from_names">
        <parameters>
          <parameter type="char**" name="iconnames"/>
          <parameter type="int" name="len"/>
        </parameters>
      </constructor>
    </object>
    <object name="GUnionDrive" type-name="GUnionDrive" get-type="" parent="GObject">
      <implements>
        <interface name="GDrive"/>
      </implements>
      <method name="child_is_for_monitor" symbol="g_union_drive_child_is_for_monitor">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GUnionDrive*" name="union_drive"/>
          <parameter type="GVolumeMonitor*" name="child_monitor"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_union_drive_get_type">
        <return-type type="GType"/>
      </method>
      <method name="is_for_child_drive" symbol="g_union_drive_is_for_child_drive">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GUnionDrive*" name="union_drive"/>
          <parameter type="GDrive*" name="child_drive"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_union_drive_new">
        <parameters>
          <parameter type="GVolumeMonitor*" name="union_monitor"/>
          <parameter type="GDrive*" name="child_drive"/>
          <parameter type="GVolumeMonitor*" name="child_monitor"/>
        </parameters>
      </constructor>
    </object>
    <object name="GUnionVolume" type-name="GUnionVolume" get-type="" parent="GObject">
      <implements>
        <interface name="GVolume"/>
      </implements>
      <method name="add_volume" symbol="g_union_volume_add_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnionVolume*" name="union_volume"/>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GVolumeMonitor*" name="monitor"/>
        </parameters>
      </method>
      <method name="get_child_for_monitor" symbol="g_union_volume_get_child_for_monitor">
        <return-type type="GVolume*"/>
        <parameters>
          <parameter type="GUnionVolume*" name="union_volume"/>
          <parameter type="GVolumeMonitor*" name="child_monitor"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_union_volume_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_child_volume" symbol="g_union_volume_has_child_volume">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GUnionVolume*" name="union_volume"/>
          <parameter type="GVolume*" name="child_volume"/>
        </parameters>
      </method>
      <method name="is_last_child" symbol="g_union_volume_is_last_child">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GUnionVolume*" name="union_volume"/>
          <parameter type="GVolume*" name="child_volume"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_union_volume_new">
        <parameters>
          <parameter type="GVolumeMonitor*" name="union_monitor"/>
          <parameter type="GVolume*" name="volume"/>
          <parameter type="GVolumeMonitor*" name="monitor"/>
        </parameters>
      </constructor>
      <method name="remove_volume" symbol="g_union_volume_remove_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnionVolume*" name="union_volume"/>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </method>
    </object>
    <object name="GUnionVolumeMonitor" type-name="GUnionVolumeMonitor" get-type="" parent="GVolumeMonitor">
      <method name="convert_drive" symbol="g_union_volume_monitor_convert_drive">
        <return-type type="GDrive*"/>
        <parameters>
          <parameter type="GUnionVolumeMonitor*" name="monitor"/>
          <parameter type="GDrive*" name="child_drive"/>
        </parameters>
      </method>
      <method name="convert_volumes" symbol="g_union_volume_monitor_convert_volumes">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GUnionVolumeMonitor*" name="monitor"/>
          <parameter type="GList*" name="child_volumes"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_union_volume_monitor_get_type">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="GUnixDrive" type-name="GUnixDrive" get-type="" parent="GObject">
      <implements>
        <interface name="GDrive"/>
      </implements>
      <method name="disconnected" symbol="g_unix_drive_disconnected">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnixDrive*" name="drive"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_unix_drive_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_mountpoint" symbol="g_unix_drive_has_mountpoint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GUnixDrive*" name="drive"/>
          <parameter type="const-char*" name="mountpoint"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_unix_drive_new">
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GUnixMountPoint*" name="mountpoint"/>
        </parameters>
      </constructor>
      <method name="set_volume" symbol="g_unix_drive_set_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnixDrive*" name="drive"/>
          <parameter type="GUnixVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="unset_volume" symbol="g_unix_drive_unset_volume">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnixDrive*" name="drive"/>
          <parameter type="GUnixVolume*" name="volume"/>
        </parameters>
      </method>
    </object>
    <object name="GUnixVolume" type-name="GUnixVolume" get-type="" parent="GObject">
      <implements>
        <interface name="GVolume"/>
      </implements>
      <method name="get_type" symbol="g_unix_volume_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_mountpoint" symbol="g_unix_volume_has_mountpoint">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GUnixVolume*" name="volume"/>
          <parameter type="const-char*" name="mountpoint"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_unix_volume_new">
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GUnixMount*" name="mount"/>
        </parameters>
      </constructor>
      <method name="unmounted" symbol="g_unix_volume_unmounted">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnixVolume*" name="volume"/>
        </parameters>
      </method>
      <method name="unset_drive" symbol="g_unix_volume_unset_drive">
        <return-type type="void"/>
        <parameters>
          <parameter type="GUnixVolume*" name="volume"/>
          <parameter type="GUnixDrive*" name="drive"/>
        </parameters>
      </method>
    </object>
    <object name="GUnixVolumeMonitor" type-name="GUnixVolumeMonitor" get-type="" parent="GVolumeMonitor">
      <method name="get_type" symbol="g_unix_volume_monitor_get_type">
        <return-type type="GType"/>
      </method>
      <method name="lookup_drive_for_mountpoint" symbol="g_unix_volume_monitor_lookup_drive_for_mountpoint">
        <return-type type="GUnixDrive*"/>
        <parameters>
          <parameter type="GUnixVolumeMonitor*" name="monitor"/>
          <parameter type="const-char*" name="mountpoint"/>
        </parameters>
      </method>
      <constructor name="new" symbol="g_unix_volume_monitor_new"/>
    </object>
    <object name="GVfs" type-name="GVfs" get-type="" parent="GObject">
      <vfunc name="get_priority">
        <return-type type="int"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
        </parameters>
      </vfunc>
      <vfunc name="get_file_for_path">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
          <parameter type="const-char*" name="path"/>
        </parameters>
      </vfunc>
      <vfunc name="get_file_for_uri">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
          <parameter type="const-char*" name="uri"/>
        </parameters>
      </vfunc>
      <vfunc name="parse_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
          <parameter type="const-char*" name="parse_name"/>
        </parameters>
      </vfunc>
      <method name="get_default" symbol="g_vfs_get_default">
        <return-type type="GVfs*"/>
      </method>
      <method name="get_file_for_path" symbol="g_vfs_get_file_for_path">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
          <parameter type="const-char*" name="path"/>
        </parameters>
      </method>
      <method name="get_file_for_uri" symbol="g_vfs_get_file_for_uri">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
          <parameter type="const-char*" name="uri"/>
        </parameters>
      </method>
      <method name="get_local" symbol="g_vfs_get_local">
        <return-type type="GVfs*"/>
      </method>
      <method name="get_name" symbol="g_vfs_get_name">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
        </parameters>
      </method>
      <method name="get_priority" symbol="g_vfs_get_priority">
        <return-type type="int"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_vfs_get_type">
        <return-type type="GType"/>
      </method>
      <method name="parse_name" symbol="g_vfs_parse_name">
        <return-type type="GFile*"/>
        <parameters>
          <parameter type="GVfs*" name="vfs"/>
          <parameter type="const-char*" name="parse_name"/>
        </parameters>
      </method>
    </object>
    <object name="GVolumeMonitor" type-name="GVolumeMonitor" get-type="" parent="GObject">
      <field name="priv" type="gpointer"/>
      <signal name="volume_mounted" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </signal>
      <signal name="volume_pre_unmount" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </signal>
      <signal name="volume_unmounted" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GVolume*" name="volume"/>
        </parameters>
      </signal>
      <signal name="drive_connected" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </signal>
      <signal name="drive_disconnected" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
          <parameter type="GDrive*" name="drive"/>
        </parameters>
      </signal>
      <vfunc name="get_mounted_volumes">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
        </parameters>
      </vfunc>
      <vfunc name="get_connected_drives">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
        </parameters>
      </vfunc>
      <method name="get" symbol="g_volume_monitor_get">
        <return-type type="GVolumeMonitor*"/>
      </method>
      <method name="get_connected_drives" symbol="g_volume_monitor_get_connected_drives">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
        </parameters>
      </method>
      <method name="get_mounted_volumes" symbol="g_volume_monitor_get_mounted_volumes">
        <return-type type="GList*"/>
        <parameters>
          <parameter type="GVolumeMonitor*" name="volume_monitor"/>
        </parameters>
      </method>
      <method name="get_type" symbol="g_volume_monitor_get_type">
        <return-type type="GType"/>
      </method>
    </object>
    <object name="GWin32AppInfo" type-name="GWin32AppInfo" get-type="" parent="GObject">
      <implements>
        <interface name="GAppInfo"/>
      </implements>
      <method name="get_type" symbol="g_win32_app_info_get_type">
        <return-type type="GType"/>
      </method>
    </object>
    <struct name="GAsyncResultData" type-name="GAsyncResultData" get-type="">
      <field name="async_object" type="gpointer" readable="1" writable="1"/>
      <field name="error" type="GError*" readable="1" writable="1"/>
      <field name="user_data" type="gpointer" readable="1" writable="1"/>
    </struct>
    <struct name="GFileAttributeInfo" type-name="GFileAttributeInfo" get-type="">
      <field name="name" type="char*" readable="1" writable="1"/>
      <field name="type" type="GFileAttributeType" readable="1" writable="1"/>
      <field name="flags" type="GFileAttributeFlags" readable="1" writable="1"/>
    </struct>
    <struct name="GFileAttributeInfoList" type-name="GFileAttributeInfoList" get-type="" opaque="true">
      <field name="infos" type="GFileAttributeInfo*" readable="1" writable="1" access="public" writeable="true"/>
      <field name="n_infos" type="int" readable="1" writable="1" access="public" writeable="true"/>
      <method name="add" symbol="g_file_attribute_info_list_add">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeInfoList*" name="list"/>
          <parameter type="const-char*" name="name"/>
          <parameter type="GFileAttributeType" name="type"/>
          <parameter type="GFileAttributeFlags" name="flags"/>
        </parameters>
      </method>
      <method name="dup" symbol="g_file_attribute_info_list_dup">
        <return-type type="GFileAttributeInfoList*"/>
        <parameters>
          <parameter type="GFileAttributeInfoList*" name="list"/>
        </parameters>
      </method>
      <method name="lookup" symbol="g_file_attribute_info_list_lookup">
        <return-type type="const-GFileAttributeInfo*"/>
        <parameters>
          <parameter type="GFileAttributeInfoList*" name="list"/>
          <parameter type="const-char*" name="name"/>
        </parameters>
      </method>
      <method name="new" symbol="g_file_attribute_info_list_new">
        <return-type type="GFileAttributeInfoList*"/>
      </method>
      <method name="ref" symbol="g_file_attribute_info_list_ref">
        <return-type type="GFileAttributeInfoList*"/>
        <parameters>
          <parameter type="GFileAttributeInfoList*" name="list"/>
        </parameters>
      </method>
      <method name="unref" symbol="g_file_attribute_info_list_unref">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeInfoList*" name="list"/>
        </parameters>
      </method>
    </struct>
    <struct name="GFileAttributeMatcher" type-name="GFileAttributeMatcher" get-type="" opaque="true">
      <method name="enumerate_namespace" symbol="g_file_attribute_matcher_enumerate_namespace">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileAttributeMatcher*" name="matcher"/>
          <parameter type="const-char*" name="namespace"/>
        </parameters>
      </method>
      <method name="enumerate_next" symbol="g_file_attribute_matcher_enumerate_next">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="GFileAttributeMatcher*" name="matcher"/>
        </parameters>
      </method>
      <method name="matches" symbol="g_file_attribute_matcher_matches">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileAttributeMatcher*" name="matcher"/>
          <parameter type="const-char*" name="full_name"/>
        </parameters>
      </method>
      <method name="matches_only" symbol="g_file_attribute_matcher_matches_only">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="GFileAttributeMatcher*" name="matcher"/>
          <parameter type="const-char*" name="full_name"/>
        </parameters>
      </method>
      <method name="new" symbol="g_file_attribute_matcher_new">
        <return-type type="GFileAttributeMatcher*"/>
        <parameters>
          <parameter type="const-char*" name="attributes"/>
        </parameters>
      </method>
      <method name="ref" symbol="g_file_attribute_matcher_ref">
        <return-type type="GFileAttributeMatcher*"/>
        <parameters>
          <parameter type="GFileAttributeMatcher*" name="matcher"/>
        </parameters>
      </method>
      <method name="unref" symbol="g_file_attribute_matcher_unref">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeMatcher*" name="matcher"/>
        </parameters>
      </method>
    </struct>
    <struct name="GFileAttributeValue" type-name="GFileAttributeValue" get-type="" opaque="true">
      <field name="type" type="GFileAttributeType" readable="1" writable="1" access="public" writeable="true"/>
      <field name="status" type="GFileAttributeStatus" readable="1" writable="1" access="public" writeable="true"/>
      <field name="boolean" type="gboolean" readable="1" writable="1" access="public" writeable="true"/>
      <field name="int32" type="gint32" readable="1" writable="1" access="public" writeable="true"/>
      <field name="uint32" type="guint32" readable="1" writable="1" access="public" writeable="true"/>
      <field name="int64" type="gint64" readable="1" writable="1" access="public" writeable="true"/>
      <field name="uint64" type="guint64" readable="1" writable="1" access="public" writeable="true"/>
      <field name="string" type="char*" readable="1" writable="1" access="public" writeable="true"/>
      <field name="quark" type="GQuark" readable="1" writable="1" access="public" writeable="true"/>
      <field name="obj" type="GObject*" readable="1" writable="1" access="public" writeable="true"/>
      <field name="u" type="}" readable="1" writable="1" access="public" writeable="true"/>
      <method name="as_string" symbol="g_file_attribute_value_as_string">
        <return-type type="char*"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="clear" symbol="g_file_attribute_value_clear">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="dup" symbol="g_file_attribute_value_dup">
        <return-type type="GFileAttributeValue*"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="free" symbol="g_file_attribute_value_free">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_boolean" symbol="g_file_attribute_value_get_boolean">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_byte_string" symbol="g_file_attribute_value_get_byte_string">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_int32" symbol="g_file_attribute_value_get_int32">
        <return-type type="gint32"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_int64" symbol="g_file_attribute_value_get_int64">
        <return-type type="gint64"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_object" symbol="g_file_attribute_value_get_object">
        <return-type type="GObject*"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_string" symbol="g_file_attribute_value_get_string">
        <return-type type="const-char*"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_uint32" symbol="g_file_attribute_value_get_uint32">
        <return-type type="guint32"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="get_uint64" symbol="g_file_attribute_value_get_uint64">
        <return-type type="guint64"/>
        <parameters>
          <parameter type="const-GFileAttributeValue*" name="attr"/>
        </parameters>
      </method>
      <method name="new" symbol="g_file_attribute_value_new">
        <return-type type="GFileAttributeValue*"/>
      </method>
      <method name="set" symbol="g_file_attribute_value_set">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="const-GFileAttributeValue*" name="new_value"/>
        </parameters>
      </method>
      <method name="set_boolean" symbol="g_file_attribute_value_set_boolean">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="gboolean" name="value"/>
        </parameters>
      </method>
      <method name="set_byte_string" symbol="g_file_attribute_value_set_byte_string">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="const-char*" name="value"/>
        </parameters>
      </method>
      <method name="set_int32" symbol="g_file_attribute_value_set_int32">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="gint32" name="value"/>
        </parameters>
      </method>
      <method name="set_int64" symbol="g_file_attribute_value_set_int64">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="gint64" name="value"/>
        </parameters>
      </method>
      <method name="set_object" symbol="g_file_attribute_value_set_object">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="GObject*" name="obj"/>
        </parameters>
      </method>
      <method name="set_string" symbol="g_file_attribute_value_set_string">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="const-char*" name="value"/>
        </parameters>
      </method>
      <method name="set_uint32" symbol="g_file_attribute_value_set_uint32">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="guint32" name="value"/>
        </parameters>
      </method>
      <method name="set_uint64" symbol="g_file_attribute_value_set_uint64">
        <return-type type="void"/>
        <parameters>
          <parameter type="GFileAttributeValue*" name="attr"/>
          <parameter type="guint64" name="value"/>
        </parameters>
      </method>
    </struct>
    <struct name="GIOJob" type-name="GIOJob" get-type="" opaque="true">
      <method name="send_to_mainloop" symbol="g_io_job_send_to_mainloop">
        <return-type type="void"/>
        <parameters>
          <parameter type="GIOJob*" name="job"/>
          <parameter type="GIODataFunc" name="func"/>
          <parameter type="gpointer" name="user_data"/>
          <parameter type="GDestroyNotify" name="notify"/>
          <parameter type="gboolean" name="block"/>
        </parameters>
      </method>
    </struct>
    <struct name="GLocalParentFileInfo" type-name="GLocalParentFileInfo" get-type="">
      <field name="writable" type="gboolean" readable="1" writable="1"/>
      <field name="is_sticky" type="gboolean" readable="1" writable="1"/>
      <field name="owner" type="int" readable="1" writable="1"/>
    </struct>
    <struct name="GUnixMount" type-name="GUnixMount" get-type="">
      <field name="mount_path" type="char*" readable="1" writable="1"/>
      <field name="device_path" type="char*" readable="1" writable="1"/>
      <field name="filesystem_type" type="char*" readable="1" writable="1"/>
      <field name="is_read_only" type="gboolean" readable="1" writable="1"/>
    </struct>
    <struct name="GUnixMountPoint" type-name="GUnixMountPoint" get-type="">
      <field name="mount_path" type="char*" readable="1" writable="1"/>
      <field name="device_path" type="char*" readable="1" writable="1"/>
      <field name="filesystem_type" type="char*" readable="1" writable="1"/>
      <field name="dev_opt" type="char*" readable="1" writable="1"/>
      <field name="is_read_only" type="gboolean" readable="1" writable="1"/>
      <field name="is_user_mountable" type="gboolean" readable="1" writable="1"/>
      <field name="is_loopback" type="gboolean" readable="1" writable="1"/>
    </struct>
  </namespace>
</api>
