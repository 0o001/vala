<?xml version="1.0"?>
<api version="1.0">
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gnome">
    <enum get-type="gnome_client_flags_get_type" name="GnomeClientFlags" type="flags" type-name="GnomeClientFlags">
      <member name="GNOME_CLIENT_IS_CONNECTED" value=""/>
      <member name="GNOME_CLIENT_RESTARTED" value=""/>
      <member name="GNOME_CLIENT_RESTORED" value=""/>
    </enum>
    <enum get-type="gnome_client_state_get_type" name="GnomeClientState" type="enum" type-name="GnomeClientState">
      <member name="GNOME_CLIENT_IDLE" value=""/>
      <member name="GNOME_CLIENT_SAVING_PHASE_1" value=""/>
      <member name="GNOME_CLIENT_WAITING_FOR_PHASE_2" value=""/>
      <member name="GNOME_CLIENT_SAVING_PHASE_2" value=""/>
      <member name="GNOME_CLIENT_FROZEN" value=""/>
      <member name="GNOME_CLIENT_DISCONNECTED" value=""/>
      <member name="GNOME_CLIENT_REGISTERING" value=""/>
    </enum>
    <enum get-type="gnome_date_edit_flags_get_type" name="GnomeDateEditFlags" type="flags" type-name="GnomeDateEditFlags">
      <member name="GNOME_DATE_EDIT_SHOW_TIME" value=""/>
      <member name="GNOME_DATE_EDIT_24_HR" value=""/>
      <member name="GNOME_DATE_EDIT_WEEK_STARTS_ON_MONDAY" value=""/>
    </enum>
    <enum get-type="gnome_dialog_type_get_type" name="GnomeDialogType" type="enum" type-name="GnomeDialogType">
      <member name="GNOME_DIALOG_ERROR" value=""/>
      <member name="GNOME_DIALOG_NORMAL" value=""/>
    </enum>
    <enum deprecated="1" get-type="gnome_edge_position_get_type" name="GnomeEdgePosition" type="enum" type-name="GnomeEdgePosition">
      <member name="GNOME_EDGE_START" value=""/>
      <member name="GNOME_EDGE_FINISH" value=""/>
      <member name="GNOME_EDGE_OTHER" value=""/>
      <member name="GNOME_EDGE_LAST" value=""/>
    </enum>
    <enum deprecated="1" get-type="gnome_font_picker_mode_get_type" name="GnomeFontPickerMode" type="enum" type-name="GnomeFontPickerMode">
      <member name="GNOME_FONT_PICKER_MODE_PIXMAP" value=""/>
      <member name="GNOME_FONT_PICKER_MODE_FONT_INFO" value=""/>
      <member name="GNOME_FONT_PICKER_MODE_USER_WIDGET" value=""/>
      <member name="GNOME_FONT_PICKER_MODE_UNKNOWN" value=""/>
    </enum>
    <enum deprecated="1" get-type="gnome_icon_list_mode_get_type" name="GnomeIconListMode" type="enum" type-name="GnomeIconListMode">
      <member name="GNOME_ICON_LIST_ICONS" value=""/>
      <member name="GNOME_ICON_LIST_TEXT_BELOW" value=""/>
      <member name="GNOME_ICON_LIST_TEXT_RIGHT" value=""/>
    </enum>
    <enum get-type="gnome_icon_lookup_flags_get_type" name="GnomeIconLookupFlags" type="flags" type-name="GnomeIconLookupFlags">
      <member name="GNOME_ICON_LOOKUP_FLAGS_NONE" value=""/>
      <member name="GNOME_ICON_LOOKUP_FLAGS_EMBEDDING_TEXT" value=""/>
      <member name="GNOME_ICON_LOOKUP_FLAGS_SHOW_SMALL_IMAGES_AS_THEMSELVES" value=""/>
      <member name="GNOME_ICON_LOOKUP_FLAGS_ALLOW_SVG_AS_THEMSELVES" value=""/>
    </enum>
    <enum get-type="gnome_icon_lookup_result_flags_get_type" name="GnomeIconLookupResultFlags" type="flags" type-name="GnomeIconLookupResultFlags">
      <member name="GNOME_ICON_LOOKUP_RESULT_FLAGS_NONE" value=""/>
      <member name="GNOME_ICON_LOOKUP_RESULT_FLAGS_THUMBNAIL" value=""/>
    </enum>
    <enum get-type="gnome_interact_style_get_type" name="GnomeInteractStyle" type="enum" type-name="GnomeInteractStyle">
      <member name="GNOME_INTERACT_NONE" value=""/>
      <member name="GNOME_INTERACT_ERRORS" value=""/>
      <member name="GNOME_INTERACT_ANY" value=""/>
    </enum>
    <enum deprecated="1" name="GnomeMDIMode" type="enum" type-name="GnomeMDIMode">
      <member name="GNOME_MDI_NOTEBOOK" value=""/>
      <member name="GNOME_MDI_TOPLEVEL" value=""/>
      <member name="GNOME_MDI_MODAL" value=""/>
      <member name="GNOME_MDI_DEFAULT_MODE" value=""/>
    </enum>
    <enum get-type="gnome_password_dialog_remember_get_type" name="GnomePasswordDialogRemember" type="enum" type-name="GnomePasswordDialogRemember">
      <member name="GNOME_PASSWORD_DIALOG_REMEMBER_NOTHING" value=""/>
      <member name="GNOME_PASSWORD_DIALOG_REMEMBER_SESSION" value=""/>
      <member name="GNOME_PASSWORD_DIALOG_REMEMBER_FOREVER" value=""/>
    </enum>
    <enum get-type="gnome_preferences_type_get_type" name="GnomePreferencesType" type="enum" type-name="GnomePreferencesType">
      <member name="GNOME_PREFERENCES_NEVER" value=""/>
      <member name="GNOME_PREFERENCES_USER" value=""/>
      <member name="GNOME_PREFERENCES_ALWAYS" value=""/>
    </enum>
    <enum get-type="gnome_restart_style_get_type" name="GnomeRestartStyle" type="enum" type-name="GnomeRestartStyle">
      <member name="GNOME_RESTART_IF_RUNNING" value=""/>
      <member name="GNOME_RESTART_ANYWAY" value=""/>
      <member name="GNOME_RESTART_IMMEDIATELY" value=""/>
      <member name="GNOME_RESTART_NEVER" value=""/>
    </enum>
    <enum get-type="gnome_save_style_get_type" name="GnomeSaveStyle" type="enum" type-name="GnomeSaveStyle">
      <member name="GNOME_SAVE_GLOBAL" value=""/>
      <member name="GNOME_SAVE_LOCAL" value=""/>
      <member name="GNOME_SAVE_BOTH" value=""/>
    </enum>
    <enum deprecated="1" name="GnomeThemeFileParseError" type="enum" type-name="GnomeThemeFileParseError">
      <member name="GNOME_THEME_FILE_PARSE_ERROR_INVALID_SYNTAX" value=""/>
      <member name="GNOME_THEME_FILE_PARSE_ERROR_INVALID_ESCAPES" value=""/>
      <member name="GNOME_THEME_FILE_PARSE_ERROR_INVALID_CHARS" value=""/>
    </enum>
    <enum get-type="gnome_thumbnail_size_get_type" name="GnomeThumbnailSize" type="enum" type-name="GnomeThumbnailSize">
      <member name="GNOME_THUMBNAIL_SIZE_NORMAL" value=""/>
      <member name="GNOME_THUMBNAIL_SIZE_LARGE" value=""/>
    </enum>
    <enum name="GnomeUIInfoConfigurableTypes" type="enum" type-name="GnomeUIInfoConfigurableTypes">
      <member name="GNOME_APP_CONFIGURABLE_ITEM_NEW" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_OPEN" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_SAVE" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_SAVE_AS" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_REVERT" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_PRINT" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_PRINT_SETUP" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_CLOSE" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_QUIT" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_CUT" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_COPY" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_PASTE" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_CLEAR" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_UNDO" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_REDO" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_FIND" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_FIND_AGAIN" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_REPLACE" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_PROPERTIES" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_PREFERENCES" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_ABOUT" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_SELECT_ALL" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_NEW_WINDOW" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_CLOSE_WINDOW" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_NEW_GAME" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_PAUSE_GAME" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_RESTART_GAME" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_UNDO_MOVE" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_REDO_MOVE" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_HINT" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_SCORES" value=""/>
      <member name="GNOME_APP_CONFIGURABLE_ITEM_END_GAME" value=""/>
    </enum>
    <enum name="GnomeUIInfoType" type="enum" type-name="GnomeUIInfoType">
      <member name="GNOME_APP_UI_ENDOFINFO" value=""/>
      <member name="GNOME_APP_UI_ITEM" value=""/>
      <member name="GNOME_APP_UI_TOGGLEITEM" value=""/>
      <member name="GNOME_APP_UI_RADIOITEMS" value=""/>
      <member name="GNOME_APP_UI_SUBTREE" value=""/>
      <member name="GNOME_APP_UI_SEPARATOR" value=""/>
      <member name="GNOME_APP_UI_HELP" value=""/>
      <member name="GNOME_APP_UI_BUILDER_DATA" value=""/>
      <member name="GNOME_APP_UI_ITEM_CONFIGURABLE" value=""/>
      <member name="GNOME_APP_UI_SUBTREE_STOCK" value=""/>
      <member name="GNOME_APP_UI_INCLUDE" value=""/>
    </enum>
    <enum name="GnomeUIPixmapType" type="enum" type-name="GnomeUIPixmapType">
      <member name="GNOME_APP_PIXMAP_NONE" value=""/>
      <member name="GNOME_APP_PIXMAP_STOCK" value=""/>
      <member name="GNOME_APP_PIXMAP_DATA" value=""/>
      <member name="GNOME_APP_PIXMAP_FILENAME" value=""/>
    </enum>
    <callback name="GnomeAppProgressCancelFunc" type-name="GnomeAppProgressCancelFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeAppProgressFunc" type-name="GnomeAppProgressFunc">
      <return-type type="gdouble"/>
      <parameters>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeGdkPixbufDoneCallback" type-name="GnomeGdkPixbufDoneCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="handle" type="GnomeGdkPixbufAsyncHandle*"/>
        <parameter name="cb_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeGdkPixbufLoadCallback" type-name="GnomeGdkPixbufLoadCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="handle" type="GnomeGdkPixbufAsyncHandle*"/>
        <parameter name="error" type="GnomeVFSResult"/>
        <parameter name="pixbuf" type="GdkPixbuf*"/>
        <parameter name="cb_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeInteractFunction" type-name="GnomeInteractFunction">
      <return-type type="void"/>
      <parameters>
        <parameter name="client" type="GnomeClient*"/>
        <parameter name="key" type="gint"/>
        <parameter name="dialog_type" type="GnomeDialogType"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeMDIChildConfigFunc" type-name="GnomeMDIChildConfigFunc">
      <return-type type="gchar*"/>
      <parameters>
        <parameter name="arg1" type="GnomeMDIChild*"/>
        <parameter name="arg2" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeMDIChildCreator" type-name="GnomeMDIChildCreator">
      <return-type type="GnomeMDIChild*"/>
      <parameters>
        <parameter name="arg1" type="const-gchar*"/>
      </parameters>
    </callback>
    <callback name="GnomeMDIChildLabelFunc" type-name="GnomeMDIChildLabelFunc">
      <return-type type="GtkWidget*"/>
      <parameters>
        <parameter name="arg1" type="GnomeMDIChild*"/>
        <parameter name="arg2" type="GtkWidget*"/>
        <parameter name="arg3" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeMDIChildMenuCreator" type-name="GnomeMDIChildMenuCreator">
      <return-type type="GList*"/>
      <parameters>
        <parameter name="arg1" type="GnomeMDIChild*"/>
        <parameter name="arg2" type="GtkWidget*"/>
        <parameter name="arg3" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeMDIChildViewCreator" type-name="GnomeMDIChildViewCreator">
      <return-type type="GtkWidget*"/>
      <parameters>
        <parameter name="arg1" type="GnomeMDIChild*"/>
        <parameter name="arg2" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomePasswordDialogQualityFunc" type-name="GnomePasswordDialogQualityFunc">
      <return-type type="gdouble"/>
      <parameters>
        <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        <parameter name="password" type="const-char*"/>
        <parameter name="user_data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeReplyCallback" type-name="GnomeReplyCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="reply" type="gint"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeStringCallback" type-name="GnomeStringCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="string" type="gchar*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeThemeFileLineFunc" type-name="GnomeThemeFileLineFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="df" type="GnomeThemeFile*"/>
        <parameter name="key" type="const-char*"/>
        <parameter name="locale" type="const-char*"/>
        <parameter name="value" type="const-char*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeThemeFileSectionFunc" type-name="GnomeThemeFileSectionFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="df" type="GnomeThemeFile*"/>
        <parameter name="name" type="const-char*"/>
        <parameter name="data" type="gpointer"/>
      </parameters>
    </callback>
    <callback name="GnomeUISignalConnectFunc" type-name="GnomeUISignalConnectFunc">
      <return-type type="void"/>
      <parameters>
        <parameter name="uiinfo" type="GnomeUIInfo*"/>
        <parameter name="signal_name" type="const-char*"/>
        <parameter name="uibdata" type="GnomeUIBuilderData*"/>
      </parameters>
    </callback>
    <object deprecated="1" get-type="" name="GnomeAbout" parent="GtkDialog" type-name="GnomeAbout">
      <field name="_priv" type="GnomeAboutPrivate*"/>
      <property name="name" readable="1" type="gchar*" writable="1"/>
      <property name="version" readable="1" type="gchar*" writable="1"/>
      <property name="copyright" readable="1" type="gchar*" writable="1"/>
      <property name="comments" readable="1" type="gchar*" writable="1"/>
      <property name="authors" type="value_array" writable="1"/>
      <property name="documenters" type="value_array" writable="1"/>
      <property name="translator_credits" readable="1" type="gchar*" writable="1"/>
      <property name="logo" type="GdkPixbuf" writable="1"/>
      <method deprecated="1" name="construct" symbol="gnome_about_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="about" type="GnomeAbout*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="version" type="const-gchar*"/>
          <parameter name="copyright" type="const-gchar*"/>
          <parameter name="comments" type="const-gchar*"/>
          <parameter name="authors" type="const-gchar**"/>
          <parameter name="documenters" type="const-gchar**"/>
          <parameter name="translator_credits" type="const-gchar*"/>
          <parameter name="logo_pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_about_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_about_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="version" type="const-gchar*"/>
          <parameter name="copyright" type="const-gchar*"/>
          <parameter name="comments" type="const-gchar*"/>
          <parameter name="authors" type="const-gchar**"/>
          <parameter name="documenters" type="const-gchar**"/>
          <parameter name="translator_credits" type="const-gchar*"/>
          <parameter name="logo_pixbuf" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
    </object>
    <object get-type="" name="GnomeApp" parent="GtkWindow" type-name="GnomeApp">
      <field name="name" type="gchar*"/>
      <field name="prefix" type="gchar*"/>
      <field name="dock" type="GtkWidget*"/>
      <field name="statusbar" type="GtkWidget*"/>
      <field name="vbox" type="GtkWidget*"/>
      <field name="menubar" type="GtkWidget*"/>
      <field name="contents" type="GtkWidget*"/>
      <field name="layout" type="BonoboDockLayout*"/>
      <field name="accel_group" type="GtkAccelGroup*"/>
      <field name="enable_layout_config" type="guint"/>
      <field name="_priv" type="GnomeAppPrivate*"/>
      <property construct="1" name="app_id" readable="1" type="gchar*" writable="1"/>
      <method name="add_dock_item" symbol="gnome_app_add_dock_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="item" type="BonoboDockItem*"/>
          <parameter name="placement" type="BonoboDockPlacement"/>
          <parameter name="band_num" type="gint"/>
          <parameter name="band_position" type="gint"/>
          <parameter name="offset" type="gint"/>
        </parameters>
      </method>
      <method name="add_docked" symbol="gnome_app_add_docked">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="behavior" type="BonoboDockItemBehavior"/>
          <parameter name="placement" type="BonoboDockPlacement"/>
          <parameter name="band_num" type="gint"/>
          <parameter name="band_position" type="gint"/>
          <parameter name="offset" type="gint"/>
        </parameters>
      </method>
      <method name="add_toolbar" symbol="gnome_app_add_toolbar">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="toolbar" type="GtkToolbar*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="behavior" type="BonoboDockItemBehavior"/>
          <parameter name="placement" type="BonoboDockPlacement"/>
          <parameter name="band_num" type="gint"/>
          <parameter name="band_position" type="gint"/>
          <parameter name="offset" type="gint"/>
        </parameters>
      </method>
      <method name="construct" symbol="gnome_app_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="appname" type="const-gchar*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="create_menus" symbol="gnome_app_create_menus">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method name="create_menus_custom" symbol="gnome_app_create_menus_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="uibdata" type="GnomeUIBuilderData*"/>
        </parameters>
      </method>
      <method name="create_menus_interp" symbol="gnome_app_create_menus_interp">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="relay_func" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy_func" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method name="create_menus_with_data" symbol="gnome_app_create_menus_with_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="create_toolbar" symbol="gnome_app_create_toolbar">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method name="create_toolbar_custom" symbol="gnome_app_create_toolbar_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="uibdata" type="GnomeUIBuilderData*"/>
        </parameters>
      </method>
      <method name="create_toolbar_interp" symbol="gnome_app_create_toolbar_interp">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="relay_func" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy_func" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method name="create_toolbar_with_data" symbol="gnome_app_create_toolbar_with_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="enable_layout_config" symbol="gnome_app_enable_layout_config">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="enable" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="error" symbol="gnome_app_error">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="error" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="fill_menu" symbol="gnome_app_fill_menu">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_shell" type="GtkMenuShell*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
          <parameter name="uline_accels" type="gboolean"/>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="fill_menu_custom" symbol="gnome_app_fill_menu_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_shell" type="GtkMenuShell*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="uibdata" type="GnomeUIBuilderData*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
          <parameter name="uline_accels" type="gboolean"/>
          <parameter name="pos" type="gint"/>
        </parameters>
      </method>
      <method name="fill_menu_with_data" symbol="gnome_app_fill_menu_with_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="menu_shell" type="GtkMenuShell*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
          <parameter name="uline_accels" type="gboolean"/>
          <parameter name="pos" type="gint"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="fill_toolbar" symbol="gnome_app_fill_toolbar">
        <return-type type="void"/>
        <parameters>
          <parameter name="toolbar" type="GtkToolbar*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="fill_toolbar_custom" symbol="gnome_app_fill_toolbar_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="toolbar" type="GtkToolbar*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="uibdata" type="GnomeUIBuilderData*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
        </parameters>
      </method>
      <method name="fill_toolbar_with_data" symbol="gnome_app_fill_toolbar_with_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="toolbar" type="GtkToolbar*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="accel_group" type="GtkAccelGroup*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="find_menu_pos" symbol="gnome_app_find_menu_pos">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="parent" type="GtkWidget*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="pos" type="gint*"/>
        </parameters>
      </method>
      <method deprecated="1" name="flash" symbol="gnome_app_flash">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="flash" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="get_dock" symbol="gnome_app_get_dock">
        <return-type type="BonoboDock*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
        </parameters>
      </method>
      <method name="get_dock_item_by_name" symbol="gnome_app_get_dock_item_by_name">
        <return-type type="BonoboDockItem*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_app_get_type">
        <return-type type="GType"/>
      </method>
      <method name="helper_gettext" symbol="gnome_app_helper_gettext">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="string" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="insert_menus" symbol="gnome_app_insert_menus">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="menuinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method name="insert_menus_custom" symbol="gnome_app_insert_menus_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="uibdata" type="GnomeUIBuilderData*"/>
        </parameters>
      </method>
      <method name="insert_menus_interp" symbol="gnome_app_insert_menus_interp">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="menuinfo" type="GnomeUIInfo*"/>
          <parameter name="relay_func" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy_func" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method name="insert_menus_with_data" symbol="gnome_app_insert_menus_with_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="menuinfo" type="GnomeUIInfo*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="install_appbar_menu_hints" symbol="gnome_app_install_appbar_menu_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method name="install_menu_hints" symbol="gnome_app_install_menu_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method name="install_statusbar_menu_hints" symbol="gnome_app_install_statusbar_menu_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="bar" type="GtkStatusbar*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="message" symbol="gnome_app_message">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="message" type="const-gchar*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="gnome_app_new">
        <parameters>
          <parameter name="appname" type="const-gchar*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="ok_cancel" symbol="gnome_app_ok_cancel">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="ok_cancel_modal" symbol="gnome_app_ok_cancel_modal">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="progress_done" symbol="gnome_app_progress_done">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="GnomeAppProgressKey"/>
        </parameters>
      </method>
      <method deprecated="1" name="progress_manual" symbol="gnome_app_progress_manual">
        <return-type type="GnomeAppProgressKey"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="cancel_cb" type="GnomeAppProgressCancelFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="progress_timeout" symbol="gnome_app_progress_timeout">
        <return-type type="GnomeAppProgressKey"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="description" type="const-gchar*"/>
          <parameter name="interval" type="guint32"/>
          <parameter name="percentage_cb" type="GnomeAppProgressFunc"/>
          <parameter name="cancel_cb" type="GnomeAppProgressCancelFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="question" symbol="gnome_app_question">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="question_modal" symbol="gnome_app_question_modal">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="remove_menu_range" symbol="gnome_app_remove_menu_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="start" type="gint"/>
          <parameter name="items" type="gint"/>
        </parameters>
      </method>
      <method name="remove_menus" symbol="gnome_app_remove_menus">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="path" type="const-gchar*"/>
          <parameter name="items" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="request_password" symbol="gnome_app_request_password">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="request_string" symbol="gnome_app_request_string">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="set_contents" symbol="gnome_app_set_contents">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="contents" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="set_menus" symbol="gnome_app_set_menus">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="menubar" type="GtkMenuBar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_progress" symbol="gnome_app_set_progress">
        <return-type type="void"/>
        <parameters>
          <parameter name="key" type="GnomeAppProgressKey"/>
          <parameter name="percent" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_statusbar" symbol="gnome_app_set_statusbar">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="statusbar" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="set_statusbar_custom" symbol="gnome_app_set_statusbar_custom">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="container" type="GtkWidget*"/>
          <parameter name="statusbar" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="set_toolbar" symbol="gnome_app_set_toolbar">
        <return-type type="void"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="toolbar" type="GtkToolbar*"/>
        </parameters>
      </method>
      <method name="setup_toolbar" symbol="gnome_app_setup_toolbar">
        <return-type type="void"/>
        <parameters>
          <parameter name="toolbar" type="GtkToolbar*"/>
          <parameter name="dock_item" type="BonoboDockItem*"/>
        </parameters>
      </method>
      <method name="ui_configure_configurable" symbol="gnome_app_ui_configure_configurable">
        <return-type type="void"/>
        <parameters>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="warning" symbol="gnome_app_warning">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
          <parameter name="warning" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeAppBar" parent="GtkHBox" type-name="GnomeAppBar">
      <field name="_priv" type="GnomeAppBarPrivate*"/>
      <signal name="user_response" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="ab" type="GnomeAppBar*"/>
        </parameters>
      </signal>
      <signal name="clear_prompt" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="ab" type="GnomeAppBar*"/>
        </parameters>
      </signal>
      <property construct="1" name="has_progress" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="has_status" readable="1" type="gboolean" writable="1"/>
      <property construct="1" name="interactivity" readable="1" type="GnomePreferencesType" writable="1"/>
      <method name="clear_prompt" symbol="gnome_appbar_clear_prompt">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="clear_stack" symbol="gnome_appbar_clear_stack">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="get_progress" symbol="gnome_appbar_get_progress">
        <return-type type="GtkProgressBar*"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="get_response" symbol="gnome_appbar_get_response">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="get_status" symbol="gnome_appbar_get_status">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_appbar_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="gnome_appbar_new">
        <parameters>
          <parameter name="has_progress" type="gboolean"/>
          <parameter name="has_status" type="gboolean"/>
          <parameter name="interactivity" type="GnomePreferencesType"/>
        </parameters>
      </constructor>
      <method name="pop" symbol="gnome_appbar_pop">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="push" symbol="gnome_appbar_push">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
          <parameter name="status" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="refresh" symbol="gnome_appbar_refresh">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
        </parameters>
      </method>
      <method name="set_default" symbol="gnome_appbar_set_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
          <parameter name="default_status" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_progress_percentage" symbol="gnome_appbar_set_progress_percentage">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
          <parameter name="percentage" type="gfloat"/>
        </parameters>
      </method>
      <method name="set_prompt" symbol="gnome_appbar_set_prompt">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="modal" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_status" symbol="gnome_appbar_set_status">
        <return-type type="void"/>
        <parameters>
          <parameter name="appbar" type="GnomeAppBar*"/>
          <parameter name="status" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeClient" parent="GtkObject" type-name="GnomeClient">
      <field name="smc_conn" type="gpointer"/>
      <field name="client_id" type="gchar*"/>
      <field name="previous_id" type="gchar*"/>
      <field name="config_prefix" type="gchar*"/>
      <field name="global_config_prefix" type="gchar*"/>
      <field name="static_args" type="GList*"/>
      <field name="clone_command" type="gchar**"/>
      <field name="current_directory" type="gchar*"/>
      <field name="discard_command" type="gchar**"/>
      <field name="environment" type="GHashTable*"/>
      <field name="process_id" type="pid_t"/>
      <field name="program" type="gchar*"/>
      <field name="resign_command" type="gchar**"/>
      <field name="restart_command" type="gchar**"/>
      <field name="restart_style" type="GnomeRestartStyle"/>
      <field name="shutdown_command" type="gchar**"/>
      <field name="user_id" type="gchar*"/>
      <field name="interaction_keys" type="GSList*"/>
      <field name="input_id" type="gint"/>
      <field name="save_style" type="guint"/>
      <field name="interact_style" type="guint"/>
      <field name="state" type="guint"/>
      <field name="shutdown" type="guint"/>
      <field name="fast" type="guint"/>
      <field name="save_phase_2_requested" type="guint"/>
      <field name="save_successfull" type="guint"/>
      <field name="save_yourself_emitted" type="guint"/>
      <field name="reserved" type="gpointer"/>
      <signal name="save_yourself" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="phase" type="gint"/>
          <parameter name="save_style" type="GnomeSaveStyle"/>
          <parameter name="shutdown" type="gboolean"/>
          <parameter name="interact_style" type="GnomeInteractStyle"/>
          <parameter name="fast" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="die" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </signal>
      <signal name="save_complete" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </signal>
      <signal name="shutdown_cancelled" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </signal>
      <signal name="connect" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="restarted" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="disconnect" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </signal>
      <method name="add_static_arg" symbol="gnome_client_add_static_arg">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="connect" symbol="gnome_client_connect">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method deprecated="1" name="disable_master_connection" symbol="gnome_client_disable_master_connection">
        <return-type type="void"/>
      </method>
      <method name="disconnect" symbol="gnome_client_disconnect">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="flush" symbol="gnome_client_flush">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_config_prefix" symbol="gnome_client_get_config_prefix">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_desktop_id" symbol="gnome_client_get_desktop_id">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_flags" symbol="gnome_client_get_flags">
        <return-type type="GnomeClientFlags"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_global_config_prefix" symbol="gnome_client_get_global_config_prefix">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_id" symbol="gnome_client_get_id">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_previous_id" symbol="gnome_client_get_previous_id">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_client_get_type">
        <return-type type="GType"/>
      </method>
      <method name="module_info_get" symbol="gnome_client_module_info_get">
        <return-type type="const-GnomeModuleInfo*"/>
      </method>
      <constructor name="new" symbol="gnome_client_new"/>
      <constructor name="new_without_connection" symbol="gnome_client_new_without_connection"/>
      <method name="request_interaction" symbol="gnome_client_request_interaction">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="dialog_type" type="GnomeDialogType"/>
          <parameter name="function" type="GnomeInteractFunction"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method name="request_interaction_interp" symbol="gnome_client_request_interaction_interp">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="dialog_type" type="GnomeDialogType"/>
          <parameter name="function" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method name="request_phase_2" symbol="gnome_client_request_phase_2">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
        </parameters>
      </method>
      <method name="request_save" symbol="gnome_client_request_save">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="save_style" type="GnomeSaveStyle"/>
          <parameter name="shutdown" type="gboolean"/>
          <parameter name="interact_style" type="GnomeInteractStyle"/>
          <parameter name="fast" type="gboolean"/>
          <parameter name="global" type="gboolean"/>
        </parameters>
      </method>
      <method name="save_any_dialog" symbol="gnome_client_save_any_dialog">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="dialog" type="GtkDialog*"/>
        </parameters>
      </method>
      <method name="save_error_dialog" symbol="gnome_client_save_error_dialog">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="dialog" type="GtkDialog*"/>
        </parameters>
      </method>
      <method name="set_clone_command" symbol="gnome_client_set_clone_command">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="argc" type="gint"/>
          <parameter name="argv" type="gchar*[]"/>
        </parameters>
      </method>
      <method name="set_current_directory" symbol="gnome_client_set_current_directory">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="dir" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_discard_command" symbol="gnome_client_set_discard_command">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="argc" type="gint"/>
          <parameter name="argv" type="gchar*[]"/>
        </parameters>
      </method>
      <method name="set_environment" symbol="gnome_client_set_environment">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="name" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_global_config_prefix" symbol="gnome_client_set_global_config_prefix">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="prefix" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_id" symbol="gnome_client_set_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_priority" symbol="gnome_client_set_priority">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="priority" type="guint"/>
        </parameters>
      </method>
      <method name="set_process_id" symbol="gnome_client_set_process_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="pid" type="pid_t"/>
        </parameters>
      </method>
      <method name="set_program" symbol="gnome_client_set_program">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="program" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_resign_command" symbol="gnome_client_set_resign_command">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="argc" type="gint"/>
          <parameter name="argv" type="gchar*[]"/>
        </parameters>
      </method>
      <method name="set_restart_command" symbol="gnome_client_set_restart_command">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="argc" type="gint"/>
          <parameter name="argv" type="gchar*[]"/>
        </parameters>
      </method>
      <method name="set_restart_style" symbol="gnome_client_set_restart_style">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="style" type="GnomeRestartStyle"/>
        </parameters>
      </method>
      <method name="set_shutdown_command" symbol="gnome_client_set_shutdown_command">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="argc" type="gint"/>
          <parameter name="argv" type="gchar*[]"/>
        </parameters>
      </method>
      <method name="set_user_id" symbol="gnome_client_set_user_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="client" type="GnomeClient*"/>
          <parameter name="id" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeColorPicker" parent="GtkButton" type-name="GnomeColorPicker">
      <field name="_priv" type="GnomeColorPickerPrivate*"/>
      <signal name="color_set" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="guint"/>
          <parameter name="g" type="guint"/>
          <parameter name="b" type="guint"/>
          <parameter name="a" type="guint"/>
        </parameters>
      </signal>
      <property name="dither" readable="1" type="gboolean" writable="1"/>
      <property name="use_alpha" readable="1" type="gboolean" writable="1"/>
      <property name="title" readable="1" type="gchar*" writable="1"/>
      <property name="red" readable="1" type="guint" writable="1"/>
      <property name="green" readable="1" type="guint" writable="1"/>
      <property name="blue" readable="1" type="guint" writable="1"/>
      <property name="alpha" readable="1" type="guint" writable="1"/>
      <method deprecated="1" name="get_d" symbol="gnome_color_picker_get_d">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="gdouble*"/>
          <parameter name="g" type="gdouble*"/>
          <parameter name="b" type="gdouble*"/>
          <parameter name="a" type="gdouble*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_dither" symbol="gnome_color_picker_get_dither">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_i16" symbol="gnome_color_picker_get_i16">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="gushort*"/>
          <parameter name="g" type="gushort*"/>
          <parameter name="b" type="gushort*"/>
          <parameter name="a" type="gushort*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_i8" symbol="gnome_color_picker_get_i8">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="guint8*"/>
          <parameter name="g" type="guint8*"/>
          <parameter name="b" type="guint8*"/>
          <parameter name="a" type="guint8*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_title" symbol="gnome_color_picker_get_title">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_color_picker_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="get_use_alpha" symbol="gnome_color_picker_get_use_alpha">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_color_picker_new"/>
      <method deprecated="1" name="set_d" symbol="gnome_color_picker_set_d">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="gdouble"/>
          <parameter name="g" type="gdouble"/>
          <parameter name="b" type="gdouble"/>
          <parameter name="a" type="gdouble"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_dither" symbol="gnome_color_picker_set_dither">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="dither" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_i16" symbol="gnome_color_picker_set_i16">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="gushort"/>
          <parameter name="g" type="gushort"/>
          <parameter name="b" type="gushort"/>
          <parameter name="a" type="gushort"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_i8" symbol="gnome_color_picker_set_i8">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="r" type="guint8"/>
          <parameter name="g" type="guint8"/>
          <parameter name="b" type="guint8"/>
          <parameter name="a" type="guint8"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title" symbol="gnome_color_picker_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_use_alpha" symbol="gnome_color_picker_set_use_alpha">
        <return-type type="void"/>
        <parameters>
          <parameter name="cp" type="GnomeColorPicker*"/>
          <parameter name="use_alpha" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeDateEdit" parent="GtkHBox" type-name="GnomeDateEdit">
      <field name="_priv" type="GnomeDateEditPrivate*"/>
      <property name="time" readable="1" type="ulong" writable="1"/>
      <property name="dateedit_flags" readable="1" type="GnomeDateEditFlags" writable="1"/>
      <property name="lower_hour" readable="1" type="gint" writable="1"/>
      <property name="upper_hour" readable="1" type="gint" writable="1"/>
      <property name="initial_time" readable="1" type="ulong" writable="1"/>
      <signal name="time_changed" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
        </parameters>
      </signal>
      <signal name="date_changed" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
        </parameters>
      </signal>
      <method name="construct" symbol="gnome_date_edit_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
          <parameter name="the_time" type="time_t"/>
          <parameter name="flags" type="GnomeDateEditFlags"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_date" symbol="gnome_date_edit_get_date">
        <return-type type="time_t"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
        </parameters>
      </method>
      <method name="get_flags" symbol="gnome_date_edit_get_flags">
        <return-type type="int"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
        </parameters>
      </method>
      <method name="get_initial_time" symbol="gnome_date_edit_get_initial_time">
        <return-type type="time_t"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
        </parameters>
      </method>
      <method name="get_time" symbol="gnome_date_edit_get_time">
        <return-type type="time_t"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_date_edit_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="gnome_date_edit_new">
        <parameters>
          <parameter name="the_time" type="time_t"/>
          <parameter name="show_time" type="gboolean"/>
          <parameter name="use_24_format" type="gboolean"/>
        </parameters>
      </constructor>
      <constructor name="new_flags" symbol="gnome_date_edit_new_flags">
        <parameters>
          <parameter name="the_time" type="time_t"/>
          <parameter name="flags" type="GnomeDateEditFlags"/>
        </parameters>
      </constructor>
      <method name="set_flags" symbol="gnome_date_edit_set_flags">
        <return-type type="void"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
          <parameter name="flags" type="GnomeDateEditFlags"/>
        </parameters>
      </method>
      <method name="set_popup_range" symbol="gnome_date_edit_set_popup_range">
        <return-type type="void"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
          <parameter name="low_hour" type="int"/>
          <parameter name="up_hour" type="int"/>
        </parameters>
      </method>
      <method name="set_time" symbol="gnome_date_edit_set_time">
        <return-type type="void"/>
        <parameters>
          <parameter name="gde" type="GnomeDateEdit*"/>
          <parameter name="the_time" type="time_t"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeDialog" parent="GtkWindow" type-name="GnomeDialog">
      <field name="vbox" readable="1" type="GtkWidget*" writable="1"/>
      <field name="buttons" type="GList*"/>
      <field name="action_area" type="GtkWidget*"/>
      <field name="accelerators" type="GtkAccelGroup*"/>
      <field name="click_closes" type="unsigned int"/>
      <field name="just_hide" type="unsigned int"/>
      <signal name="close" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
        </parameters>
      </signal>
      <signal name="clicked" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button_number" type="gint"/>
        </parameters>
      </signal>
      <method deprecated="1" name="append_button" symbol="gnome_dialog_append_button">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="append_button_with_pixmap" symbol="gnome_dialog_append_button_with_pixmap">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button_name" type="const-gchar*"/>
          <parameter name="pixmap_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="append_buttons" symbol="gnome_dialog_append_buttons">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="first" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="append_buttons_with_pixmaps" symbol="gnome_dialog_append_buttons_with_pixmaps">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="names" type="const-gchar**"/>
          <parameter name="pixmaps" type="const-gchar**"/>
        </parameters>
      </method>
      <method deprecated="1" name="append_buttonsv" symbol="gnome_dialog_append_buttonsv">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="buttons" type="const-gchar**"/>
        </parameters>
      </method>
      <method deprecated="1" name="button_connect" symbol="gnome_dialog_button_connect">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button" type="gint"/>
          <parameter name="callback" type="GCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="button_connect_object" symbol="gnome_dialog_button_connect_object">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button" type="gint"/>
          <parameter name="callback" type="GCallback"/>
          <parameter name="obj" type="GtkObject*"/>
        </parameters>
      </method>
      <method deprecated="1" name="close" symbol="gnome_dialog_close">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
        </parameters>
      </method>
      <method deprecated="1" name="close_hides" symbol="gnome_dialog_close_hides">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="just_hide" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="construct" symbol="gnome_dialog_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="ap" type="va_list"/>
        </parameters>
      </method>
      <method deprecated="1" name="constructv" symbol="gnome_dialog_constructv">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="buttons" type="const-gchar**"/>
        </parameters>
      </method>
      <method deprecated="1" name="editable_enters" symbol="gnome_dialog_editable_enters">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="editable" type="GtkEditable*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_dialog_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="grab_focus" symbol="gnome_dialog_grab_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button" type="gint"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_dialog_new">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="newv" symbol="gnome_dialog_newv">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="buttons" type="const-gchar**"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="run" symbol="gnome_dialog_run">
        <return-type type="gint"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
        </parameters>
      </method>
      <method deprecated="1" name="run_and_close" symbol="gnome_dialog_run_and_close">
        <return-type type="gint"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_accelerator" symbol="gnome_dialog_set_accelerator">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button" type="gint"/>
          <parameter name="accelerator_key" type="const-guchar"/>
          <parameter name="accelerator_mods" type="guint8"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_close" symbol="gnome_dialog_set_close">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="click_closes" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_default" symbol="gnome_dialog_set_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_parent" symbol="gnome_dialog_set_parent">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_sensitive" symbol="gnome_dialog_set_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="dialog" type="GnomeDialog*"/>
          <parameter name="button" type="gint"/>
          <parameter name="setting" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeDruid" parent="GtkContainer" type-name="GnomeDruid">
      <field name="help" type="GtkWidget*"/>
      <field name="back" type="GtkWidget*"/>
      <field name="next" type="GtkWidget*"/>
      <field name="cancel" type="GtkWidget*"/>
      <field name="finish" type="GtkWidget*"/>
      <field name="_priv" type="GnomeDruidPrivate*"/>
      <signal name="cancel" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
        </parameters>
      </signal>
      <signal name="help" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
        </parameters>
      </signal>
      <property name="show_finish" readable="1" type="gboolean" writable="1"/>
      <property name="show_help" readable="1" type="gboolean" writable="1"/>
      <method deprecated="1" name="append_page" symbol="gnome_druid_append_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="construct_with_window" symbol="gnome_druid_construct_with_window">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="title" type="const-char*"/>
          <parameter name="parent" type="GtkWindow*"/>
          <parameter name="close_on_cancel" type="gboolean"/>
          <parameter name="window" type="GtkWidget**"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_druid_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="insert_page" symbol="gnome_druid_insert_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="back_page" type="GnomeDruidPage*"/>
          <parameter name="page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_druid_new"/>
      <constructor deprecated="1" name="new_with_window" symbol="gnome_druid_new_with_window">
        <parameters>
          <parameter name="title" type="const-char*"/>
          <parameter name="parent" type="GtkWindow*"/>
          <parameter name="close_on_cancel" type="gboolean"/>
          <parameter name="window" type="GtkWidget**"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="prepend_page" symbol="gnome_druid_prepend_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_buttons_sensitive" symbol="gnome_druid_set_buttons_sensitive">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="back_sensitive" type="gboolean"/>
          <parameter name="next_sensitive" type="gboolean"/>
          <parameter name="cancel_sensitive" type="gboolean"/>
          <parameter name="help_sensitive" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_page" symbol="gnome_druid_set_page">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_show_finish" symbol="gnome_druid_set_show_finish">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="show_finish" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_show_help" symbol="gnome_druid_set_show_help">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid" type="GnomeDruid*"/>
          <parameter name="show_help" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeDruidPage" parent="GtkBin" type-name="GnomeDruidPage">
      <field name="_priv" type="GnomeDruidPagePrivate*"/>
      <signal name="next" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
          <parameter name="druid" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="prepare" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
          <parameter name="druid" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="back" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
          <parameter name="druid" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="finish" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
          <parameter name="druid" type="GtkWidget*"/>
        </parameters>
      </signal>
      <signal name="cancel" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
          <parameter name="druid" type="GtkWidget*"/>
        </parameters>
      </signal>
      <vfunc name="configure_canvas">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
        </parameters>
      </vfunc>
      <vfunc name="set_sidebar_shown">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
          <parameter name="sidebar_shown" type="gboolean"/>
        </parameters>
      </vfunc>
      <method deprecated="1" name="back" symbol="gnome_druid_page_back">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="cancel" symbol="gnome_druid_page_cancel">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="finish" symbol="gnome_druid_page_finish">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_druid_page_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_druid_page_new"/>
      <method deprecated="1" name="next" symbol="gnome_druid_page_next">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
      <method deprecated="1" name="prepare" symbol="gnome_druid_page_prepare">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page" type="GnomeDruidPage*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeDruidPageEdge" parent="GnomeDruidPage" type-name="GnomeDruidPageEdge">
      <field name="title" readable="1" type="gchar*" writable="1"/>
      <field name="text" readable="1" type="gchar*" writable="1"/>
      <field name="logo_image" readable="1" type="GdkPixbuf*" writable="1"/>
      <field name="watermark_image" readable="1" type="GdkPixbuf*" writable="1"/>
      <field name="top_watermark_image" readable="1" type="GdkPixbuf*" writable="1"/>
      <field name="background_color" readable="1" type="GdkColor" writable="1"/>
      <field name="textbox_color" readable="1" type="GdkColor" writable="1"/>
      <field name="logo_background_color" readable="1" type="GdkColor" writable="1"/>
      <field name="title_color" readable="1" type="GdkColor" writable="1"/>
      <field name="text_color" readable="1" type="GdkColor" writable="1"/>
      <field name="position" readable="1" type="guint" writable="1"/>
      <field name="_priv" type="GnomeDruidPageEdgePrivate*"/>
      <method deprecated="1" name="construct" symbol="gnome_druid_page_edge_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="position" type="GnomeEdgePosition"/>
          <parameter name="antialiased" type="gboolean"/>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="logo" type="GdkPixbuf*"/>
          <parameter name="watermark" type="GdkPixbuf*"/>
          <parameter name="top_watermark" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_druid_page_edge_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_druid_page_edge_new">
        <parameters>
          <parameter name="position" type="GnomeEdgePosition"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="new_aa" symbol="gnome_druid_page_edge_new_aa">
        <parameters>
          <parameter name="position" type="GnomeEdgePosition"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="new_with_vals" symbol="gnome_druid_page_edge_new_with_vals">
        <parameters>
          <parameter name="position" type="GnomeEdgePosition"/>
          <parameter name="antialiased" type="gboolean"/>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
          <parameter name="logo" type="GdkPixbuf*"/>
          <parameter name="watermark" type="GdkPixbuf*"/>
          <parameter name="top_watermark" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="set_bg_color" symbol="gnome_druid_page_edge_set_bg_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo" symbol="gnome_druid_page_edge_set_logo">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="logo_image" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo_bg_color" symbol="gnome_druid_page_edge_set_logo_bg_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_text" symbol="gnome_druid_page_edge_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_text_color" symbol="gnome_druid_page_edge_set_text_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_textbox_color" symbol="gnome_druid_page_edge_set_textbox_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title" symbol="gnome_druid_page_edge_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title_color" symbol="gnome_druid_page_edge_set_title_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_top_watermark" symbol="gnome_druid_page_edge_set_top_watermark">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="top_watermark_image" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_watermark" symbol="gnome_druid_page_edge_set_watermark">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_edge" type="GnomeDruidPageEdge*"/>
          <parameter name="watermark" type="GdkPixbuf*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeDruidPageStandard" parent="GnomeDruidPage" type-name="GnomeDruidPageStandard">
      <field name="vbox" readable="1" type="GtkWidget*" writable="1"/>
      <field name="title" readable="1" type="gchar*" writable="1"/>
      <field name="logo" readable="1" type="GdkPixbuf*" writable="1"/>
      <field name="top_watermark" readable="1" type="GdkPixbuf*" writable="1"/>
      <field name="title_foreground" readable="1" type="GdkColor" writable="1"/>
      <field name="background" readable="1" type="GdkColor" writable="1"/>
      <field name="logo_background" readable="1" type="GdkColor" writable="1"/>
      <field name="contents_background" readable="1" type="GdkColor" writable="1"/>
      <field name="_priv" type="GnomeDruidPageStandardPrivate*"/>
      <property name="title" readable="1" type="gchar*" writable="1"/>
      <property name="logo" readable="1" type="GdkPixbuf" writable="1"/>
      <property name="top_watermark" readable="1" type="GdkPixbuf" writable="1"/>
      <property name="title_foreground" type="gchar*" writable="1"/>
      <property name="title_foreground_gdk" readable="1" type="GdkColor" writable="1"/>
      <property name="title_foreground_set" readable="1" type="gboolean" writable="1"/>
      <property name="background" type="gchar*" writable="1"/>
      <property name="background_gdk" readable="1" type="GdkColor" writable="1"/>
      <property name="background_set" readable="1" type="gboolean" writable="1"/>
      <property name="contents_background" type="gchar*" writable="1"/>
      <property name="contents_background_gdk" readable="1" type="GdkColor" writable="1"/>
      <property name="contents_background_set" readable="1" type="gboolean" writable="1"/>
      <property name="logo_background" type="gchar*" writable="1"/>
      <property name="logo_background_gdk" readable="1" type="GdkColor" writable="1"/>
      <property name="logo_background_set" readable="1" type="gboolean" writable="1"/>
      <method deprecated="1" name="append_item" symbol="gnome_druid_page_standard_append_item">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="item" type="GtkWidget*"/>
          <parameter name="additional_info" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_druid_page_standard_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_druid_page_standard_new"/>
      <constructor deprecated="1" name="new_with_vals" symbol="gnome_druid_page_standard_new_with_vals">
        <parameters>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="logo" type="GdkPixbuf*"/>
          <parameter name="top_watermark" type="GdkPixbuf*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="set_background" symbol="gnome_druid_page_standard_set_background">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_contents_background" symbol="gnome_druid_page_standard_set_contents_background">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo" symbol="gnome_druid_page_standard_set_logo">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="logo_image" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo_background" symbol="gnome_druid_page_standard_set_logo_background">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title" symbol="gnome_druid_page_standard_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title_foreground" symbol="gnome_druid_page_standard_set_title_foreground">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="color" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_top_watermark" symbol="gnome_druid_page_standard_set_top_watermark">
        <return-type type="void"/>
        <parameters>
          <parameter name="druid_page_standard" type="GnomeDruidPageStandard*"/>
          <parameter name="top_watermark_image" type="GdkPixbuf*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeEntry" parent="GtkCombo" type-name="GnomeEntry">
      <field name="_priv" type="GnomeEntryPrivate*"/>
      <signal name="activate" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="entry" type="GnomeEntry*"/>
        </parameters>
      </signal>
      <property name="history_id" readable="1" type="gchar*" writable="1"/>
      <property name="gtk_entry" readable="1" type="GtkEntry"/>
      <implements>
        <interface name="GtkEditable"/>
      </implements>
      <method deprecated="1" name="append_history" symbol="gnome_entry_append_history">
        <return-type type="void"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
          <parameter name="save" type="gboolean"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="clear_history" symbol="gnome_entry_clear_history">
        <return-type type="void"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_history_id" symbol="gnome_entry_get_history_id">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_max_saved" symbol="gnome_entry_get_max_saved">
        <return-type type="guint"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_entry_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="gtk_entry" symbol="gnome_entry_gtk_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_entry_new">
        <parameters>
          <parameter name="history_id" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="prepend_history" symbol="gnome_entry_prepend_history">
        <return-type type="void"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
          <parameter name="save" type="gboolean"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_history_id" symbol="gnome_entry_set_history_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
          <parameter name="history_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_max_saved" symbol="gnome_entry_set_max_saved">
        <return-type type="void"/>
        <parameters>
          <parameter name="gentry" type="GnomeEntry*"/>
          <parameter name="max_saved" type="guint"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeFileEntry" parent="GtkVBox" type-name="GnomeFileEntry">
      <field name="fsw" type="GtkWidget*"/>
      <field name="default_path" type="char*"/>
      <field name="_priv" type="GnomeFileEntryPrivate*"/>
      <signal name="browse_clicked" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
        </parameters>
      </signal>
      <signal name="activate" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
        </parameters>
      </signal>
      <property name="history_id" readable="1" type="gchar*" writable="1"/>
      <property name="browse_dialog_title" readable="1" type="gchar*" writable="1"/>
      <property name="directory_entry" readable="1" type="gboolean" writable="1"/>
      <property name="modal" readable="1" type="gboolean" writable="1"/>
      <property name="filename" readable="1" type="gchar*" writable="1"/>
      <property name="default_path" readable="1" type="gchar*" writable="1"/>
      <property name="gnome_entry" readable="1" type="GnomeEntry"/>
      <property name="gtk_entry" readable="1" type="GtkEntry"/>
      <property name="use_filechooser" readable="1" type="gboolean" writable="1"/>
      <property name="filechooser_action" readable="1" type="GtkFileChooserAction" writable="1"/>
      <implements>
        <interface name="GtkEditable"/>
      </implements>
      <method deprecated="1" name="construct" symbol="gnome_file_entry_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="history_id" type="const-char*"/>
          <parameter name="browse_dialog_title" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_directory_entry" symbol="gnome_file_entry_get_directory_entry">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_full_path" symbol="gnome_file_entry_get_full_path">
        <return-type type="char*"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="file_must_exist" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_modal" symbol="gnome_file_entry_get_modal">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_file_entry_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="gnome_entry" symbol="gnome_file_entry_gnome_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="gtk_entry" symbol="gnome_file_entry_gtk_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_file_entry_new">
        <parameters>
          <parameter name="history_id" type="const-char*"/>
          <parameter name="browse_dialog_title" type="const-char*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="set_default_path" symbol="gnome_file_entry_set_default_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_directory" symbol="gnome_file_entry_set_directory">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="directory_entry" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_directory_entry" symbol="gnome_file_entry_set_directory_entry">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="directory_entry" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_filename" symbol="gnome_file_entry_set_filename">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="filename" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_modal" symbol="gnome_file_entry_set_modal">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="is_modal" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title" symbol="gnome_file_entry_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="fentry" type="GnomeFileEntry*"/>
          <parameter name="browse_dialog_title" type="const-char*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeFontPicker" parent="GtkButton" type-name="GnomeFontPicker">
      <field name="_priv" type="GnomeFontPickerPrivate*"/>
      <property name="title" readable="1" type="gchar*" writable="1"/>
      <property name="mode" readable="1" type="GnomeFontPickerMode" writable="1"/>
      <property name="font_name" readable="1" type="gchar*" writable="1"/>
      <property name="font" readable="1" type="gpointer"/>
      <property name="preview_text" readable="1" type="gchar*" writable="1"/>
      <property name="use-font-in-label" readable="1" type="gboolean" writable="1"/>
      <property name="label-font-size" readable="1" type="gint" writable="1"/>
      <property name="show-size" readable="1" type="gboolean" writable="1"/>
      <signal name="font_set" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="font_name" type="const-gchar*"/>
        </parameters>
      </signal>
      <method deprecated="1" name="fi_set_show_size" symbol="gnome_font_picker_fi_set_show_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="show_size" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="fi_set_use_font_in_label" symbol="gnome_font_picker_fi_set_use_font_in_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="use_font_in_label" type="gboolean"/>
          <parameter name="size" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_font" symbol="gnome_font_picker_get_font">
        <return-type type="GdkFont*"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_font_name" symbol="gnome_font_picker_get_font_name">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_mode" symbol="gnome_font_picker_get_mode">
        <return-type type="GnomeFontPickerMode"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_preview_text" symbol="gnome_font_picker_get_preview_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_title" symbol="gnome_font_picker_get_title">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_font_picker_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_font_picker_new"/>
      <method deprecated="1" name="set_font_name" symbol="gnome_font_picker_set_font_name">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="fontname" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_mode" symbol="gnome_font_picker_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="mode" type="GnomeFontPickerMode"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_preview_text" symbol="gnome_font_picker_set_preview_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_title" symbol="gnome_font_picker_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="uw_get_widget" symbol="gnome_font_picker_uw_get_widget">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
        </parameters>
      </method>
      <method deprecated="1" name="uw_set_widget" symbol="gnome_font_picker_uw_set_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="gfp" type="GnomeFontPicker*"/>
          <parameter name="widget" type="GtkWidget*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeHRef" parent="GtkButton" type-name="GnomeHRef">
      <field name="_priv" type="GnomeHRefPrivate*"/>
      <property name="url" readable="1" type="gchar*" writable="1"/>
      <property name="text" readable="1" type="gchar*" writable="1"/>
      <method deprecated="1" name="get_label" symbol="gnome_href_get_label">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="href" type="GnomeHRef*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_text" symbol="gnome_href_get_text">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="href" type="GnomeHRef*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_href_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="get_url" symbol="gnome_href_get_url">
        <return-type type="const-gchar*"/>
        <parameters>
          <parameter name="href" type="GnomeHRef*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_href_new">
        <parameters>
          <parameter name="url" type="const-gchar*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="set_label" symbol="gnome_href_set_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="href" type="GnomeHRef*"/>
          <parameter name="label" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_text" symbol="gnome_href_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter name="href" type="GnomeHRef*"/>
          <parameter name="text" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_url" symbol="gnome_href_set_url">
        <return-type type="void"/>
        <parameters>
          <parameter name="href" type="GnomeHRef*"/>
          <parameter name="url" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeIconEntry" parent="GtkVBox" type-name="GnomeIconEntry">
      <field name="_priv" type="GnomeIconEntryPrivate*"/>
      <signal name="changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </signal>
      <signal name="browse" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </signal>
      <property name="history_id" readable="1" type="gchar*" writable="1"/>
      <property name="browse_dialog_title" readable="1" type="gchar*" writable="1"/>
      <property name="pixmap_subdir" readable="1" type="gchar*" writable="1"/>
      <property name="filename" readable="1" type="gchar*" writable="1"/>
      <property name="pick_dialog" readable="1" type="GtkDialog"/>
      <method name="construct" symbol="gnome_icon_entry_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="history_id" type="const-gchar*"/>
          <parameter name="browse_dialog_title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="get_filename" symbol="gnome_icon_entry_get_filename">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_icon_entry_get_type">
        <return-type type="GType"/>
      </method>
      <method name="gnome_entry" symbol="gnome_icon_entry_gnome_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </method>
      <method name="gnome_file_entry" symbol="gnome_icon_entry_gnome_file_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </method>
      <method name="gtk_entry" symbol="gnome_icon_entry_gtk_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="gnome_icon_entry_new">
        <parameters>
          <parameter name="history_id" type="const-gchar*"/>
          <parameter name="browse_dialog_title" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method name="pick_dialog" symbol="gnome_icon_entry_pick_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
        </parameters>
      </method>
      <method name="set_browse_dialog_title" symbol="gnome_icon_entry_set_browse_dialog_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="browse_dialog_title" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_filename" symbol="gnome_icon_entry_set_filename">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_history_id" symbol="gnome_icon_entry_set_history_id">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="history_id" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_icon" symbol="gnome_icon_entry_set_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_max_saved" symbol="gnome_icon_entry_set_max_saved">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="max_saved" type="guint"/>
        </parameters>
      </method>
      <method name="set_pixmap_subdir" symbol="gnome_icon_entry_set_pixmap_subdir">
        <return-type type="void"/>
        <parameters>
          <parameter name="ientry" type="GnomeIconEntry*"/>
          <parameter name="subdir" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeIconList" parent="GnomeCanvas" type-name="GnomeIconList">
      <field name="adj" type="GtkAdjustment*"/>
      <field name="hadj" type="GtkAdjustment*"/>
      <field name="_priv" type="GnomeIconListPrivate*"/>
      <signal name="select_icon" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="num" type="gint"/>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="unselect_icon" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="num" type="gint"/>
          <parameter name="event" type="GdkEvent*"/>
        </parameters>
      </signal>
      <signal name="focus_icon" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="num" type="gint"/>
        </parameters>
      </signal>
      <signal name="text_changed" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="num" type="gint"/>
          <parameter name="new_text" type="const-char*"/>
        </parameters>
      </signal>
      <signal name="move_cursor" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="dir" type="GtkDirectionType"/>
          <parameter name="clear_selection" type="gboolean"/>
        </parameters>
      </signal>
      <signal name="toggle_cursor_selection" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </signal>
      <vfunc name="unused">
        <return-type type="void"/>
        <parameters>
          <parameter name="unused" type="GnomeIconList*"/>
        </parameters>
      </vfunc>
      <method deprecated="1" name="append" symbol="gnome_icon_list_append">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="icon_filename" type="const-char*"/>
          <parameter name="text" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="append_pixbuf" symbol="gnome_icon_list_append_pixbuf">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="im" type="GdkPixbuf*"/>
          <parameter name="icon_filename" type="const-char*"/>
          <parameter name="text" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="clear" symbol="gnome_icon_list_clear">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="construct" symbol="gnome_icon_list_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="icon_width" type="guint"/>
          <parameter name="adj" type="GtkAdjustment*"/>
          <parameter name="flags" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="find_icon_from_data" symbol="gnome_icon_list_find_icon_from_data">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="find_icon_from_filename" symbol="gnome_icon_list_find_icon_from_filename">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="filename" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="focus_icon" symbol="gnome_icon_list_focus_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="idx" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="freeze" symbol="gnome_icon_list_freeze">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_icon_at" symbol="gnome_icon_list_get_icon_at">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="x" type="int"/>
          <parameter name="y" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_icon_data" symbol="gnome_icon_list_get_icon_data">
        <return-type type="gpointer"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_icon_filename" symbol="gnome_icon_list_get_icon_filename">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="idx" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_icon_pixbuf_item" symbol="gnome_icon_list_get_icon_pixbuf_item">
        <return-type type="GnomeCanvasPixbuf*"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="idx" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_icon_text_item" symbol="gnome_icon_list_get_icon_text_item">
        <return-type type="GnomeIconTextItem*"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="idx" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_items_per_line" symbol="gnome_icon_list_get_items_per_line">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_num_icons" symbol="gnome_icon_list_get_num_icons">
        <return-type type="guint"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_selection" symbol="gnome_icon_list_get_selection">
        <return-type type="GList*"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_selection_mode" symbol="gnome_icon_list_get_selection_mode">
        <return-type type="GtkSelectionMode"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_icon_list_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="icon_is_visible" symbol="gnome_icon_list_icon_is_visible">
        <return-type type="GtkVisibility"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="insert" symbol="gnome_icon_list_insert">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
          <parameter name="icon_filename" type="const-char*"/>
          <parameter name="text" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="insert_pixbuf" symbol="gnome_icon_list_insert_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
          <parameter name="im" type="GdkPixbuf*"/>
          <parameter name="icon_filename" type="const-char*"/>
          <parameter name="text" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="moveto" symbol="gnome_icon_list_moveto">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
          <parameter name="yalign" type="double"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_icon_list_new">
        <parameters>
          <parameter name="icon_width" type="guint"/>
          <parameter name="adj" type="GtkAdjustment*"/>
          <parameter name="flags" type="int"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="remove" symbol="gnome_icon_list_remove">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="select_all" symbol="gnome_icon_list_select_all">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="select_icon" symbol="gnome_icon_list_select_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_col_spacing" symbol="gnome_icon_list_set_col_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pixels" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_hadjustment" symbol="gnome_icon_list_set_hadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="hadj" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_icon_border" symbol="gnome_icon_list_set_icon_border">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pixels" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_icon_data" symbol="gnome_icon_list_set_icon_data">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="idx" type="int"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_icon_data_full" symbol="gnome_icon_list_set_icon_data_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="destroy" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_icon_width" symbol="gnome_icon_list_set_icon_width">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="w" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_row_spacing" symbol="gnome_icon_list_set_row_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pixels" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_selection_mode" symbol="gnome_icon_list_set_selection_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="mode" type="GtkSelectionMode"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_separators" symbol="gnome_icon_list_set_separators">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="sep" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_text_spacing" symbol="gnome_icon_list_set_text_spacing">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pixels" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_vadjustment" symbol="gnome_icon_list_set_vadjustment">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="vadj" type="GtkAdjustment*"/>
        </parameters>
      </method>
      <method deprecated="1" name="thaw" symbol="gnome_icon_list_thaw">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="unselect_all" symbol="gnome_icon_list_unselect_all">
        <return-type type="int"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
        </parameters>
      </method>
      <method deprecated="1" name="unselect_icon" symbol="gnome_icon_list_unselect_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="gil" type="GnomeIconList*"/>
          <parameter name="pos" type="int"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeIconSelection" parent="GtkVBox" type-name="GnomeIconSelection">
      <field name="_priv" type="GnomeIconSelectionPrivate*"/>
      <method name="add_defaults" symbol="gnome_icon_selection_add_defaults">
        <return-type type="void"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
        </parameters>
      </method>
      <method name="add_directory" symbol="gnome_icon_selection_add_directory">
        <return-type type="void"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
          <parameter name="dir" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="clear" symbol="gnome_icon_selection_clear">
        <return-type type="void"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
          <parameter name="not_shown" type="gboolean"/>
        </parameters>
      </method>
      <method name="get_box" symbol="gnome_icon_selection_get_box">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
        </parameters>
      </method>
      <method name="get_gil" symbol="gnome_icon_selection_get_gil">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
        </parameters>
      </method>
      <method name="get_icon" symbol="gnome_icon_selection_get_icon">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
          <parameter name="full_path" type="gboolean"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_icon_selection_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="gnome_icon_selection_new"/>
      <method name="select_icon" symbol="gnome_icon_selection_select_icon">
        <return-type type="void"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="show_icons" symbol="gnome_icon_selection_show_icons">
        <return-type type="void"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
        </parameters>
      </method>
      <method name="stop_loading" symbol="gnome_icon_selection_stop_loading">
        <return-type type="void"/>
        <parameters>
          <parameter name="gis" type="GnomeIconSelection*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeIconTextItem" parent="GnomeCanvasItem" type-name="GnomeIconTextItem">
      <field name="x" type="int"/>
      <field name="y" type="int"/>
      <field name="width" type="int"/>
      <field name="fontname" type="char*"/>
      <field name="text" type="char*"/>
      <field name="editing" type="unsigned int"/>
      <field name="selected" type="unsigned int"/>
      <field name="focused" type="unsigned int"/>
      <field name="is_editable" type="unsigned int"/>
      <field name="is_text_allocated" type="unsigned int"/>
      <field name="_priv" type="GnomeIconTextItemPrivate*"/>
      <signal name="text_changed" when="LAST">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <signal name="height_changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <signal name="width_changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <signal name="editing_started" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <signal name="editing_stopped" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <signal name="selection_started" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <signal name="selection_stopped" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </signal>
      <vfunc name="create_entry">
        <return-type type="GtkEntry*"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </vfunc>
      <method deprecated="1" name="configure" symbol="gnome_icon_text_item_configure">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
          <parameter name="x" type="int"/>
          <parameter name="y" type="int"/>
          <parameter name="width" type="int"/>
          <parameter name="fontname" type="const-char*"/>
          <parameter name="text" type="const-char*"/>
          <parameter name="is_editable" type="gboolean"/>
          <parameter name="is_static" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="focus" symbol="gnome_icon_text_item_focus">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
          <parameter name="focused" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_editable" symbol="gnome_icon_text_item_get_editable">
        <return-type type="GtkEditable*"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_text" symbol="gnome_icon_text_item_get_text">
        <return-type type="const-char*"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_icon_text_item_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="select" symbol="gnome_icon_text_item_select">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
          <parameter name="sel" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="setxy" symbol="gnome_icon_text_item_setxy">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
          <parameter name="x" type="int"/>
          <parameter name="y" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="start_editing" symbol="gnome_icon_text_item_start_editing">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
        </parameters>
      </method>
      <method deprecated="1" name="stop_editing" symbol="gnome_icon_text_item_stop_editing">
        <return-type type="void"/>
        <parameters>
          <parameter name="iti" type="GnomeIconTextItem*"/>
          <parameter name="accept" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeIconTheme" type-name="GnomeIconTheme">
      <signal name="changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_theme" type="GnomeIconTheme*"/>
        </parameters>
      </signal>
      <method deprecated="1" name="append_search_path" symbol="gnome_icon_theme_append_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_allow_svg" symbol="gnome_icon_theme_get_allow_svg">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_example_icon_name" symbol="gnome_icon_theme_get_example_icon_name">
        <return-type type="char*"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_search_path" symbol="gnome_icon_theme_get_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="path" type="char**[]"/>
          <parameter name="n_elements" type="int*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_icon_theme_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="has_icon" symbol="gnome_icon_theme_has_icon">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="icon_name" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="list_icons" symbol="gnome_icon_theme_list_icons">
        <return-type type="GList*"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="context" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="lookup_icon" symbol="gnome_icon_theme_lookup_icon">
        <return-type type="char*"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="icon_name" type="const-char*"/>
          <parameter name="size" type="int"/>
          <parameter name="icon_data" type="const-GnomeIconData**"/>
          <parameter name="base_size" type="int*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_icon_theme_new"/>
      <method deprecated="1" name="prepend_search_path" symbol="gnome_icon_theme_prepend_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="path" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="rescan_if_needed" symbol="gnome_icon_theme_rescan_if_needed">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_allow_svg" symbol="gnome_icon_theme_set_allow_svg">
        <return-type type="void"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="allow_svg" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_custom_theme" symbol="gnome_icon_theme_set_custom_theme">
        <return-type type="void"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="theme_name" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_search_path" symbol="gnome_icon_theme_set_search_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="theme" type="GnomeIconTheme*"/>
          <parameter name="path" type="const-char*[]"/>
          <parameter name="n_elements" type="int"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeMDI" parent="GtkObject" type-name="GnomeMDI">
      <field name="mode" type="GnomeMDIMode"/>
      <field name="tab_pos" type="GtkPositionType"/>
      <field name="signal_id" type="guint"/>
      <field name="in_drag" type="guint"/>
      <field name="appname" type="gchar*"/>
      <field name="title" type="gchar*"/>
      <field name="menu_template" type="GnomeUIInfo*"/>
      <field name="toolbar_template" type="GnomeUIInfo*"/>
      <field name="active_child" type="GnomeMDIChild*"/>
      <field name="active_view" type="GtkWidget*"/>
      <field name="active_window" type="GnomeApp*"/>
      <field name="windows" type="GList*"/>
      <field name="children" type="GList*"/>
      <field name="registered" type="GSList*"/>
      <field name="child_menu_path" type="gchar*"/>
      <field name="child_list_path" type="gchar*"/>
      <field name="reserved" type="gpointer"/>
      <method deprecated="1" name="add_child" symbol="gnome_mdi_add_child">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="child" type="GnomeMDIChild*"/>
        </parameters>
      </method>
      <method deprecated="1" name="add_toplevel_view" symbol="gnome_mdi_add_toplevel_view">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="child" type="GnomeMDIChild*"/>
        </parameters>
      </method>
      <method deprecated="1" name="add_view" symbol="gnome_mdi_add_view">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="child" type="GnomeMDIChild*"/>
        </parameters>
      </method>
      <method deprecated="1" name="find_child" symbol="gnome_mdi_find_child">
        <return-type type="GnomeMDIChild*"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_active_child" symbol="gnome_mdi_get_active_child">
        <return-type type="GnomeMDIChild*"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_active_view" symbol="gnome_mdi_get_active_view">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_active_window" symbol="gnome_mdi_get_active_window">
        <return-type type="GnomeApp*"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_app_from_view" symbol="gnome_mdi_get_app_from_view">
        <return-type type="GnomeApp*"/>
        <parameters>
          <parameter name="view" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_child_from_view" symbol="gnome_mdi_get_child_from_view">
        <return-type type="GnomeMDIChild*"/>
        <parameters>
          <parameter name="view" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_child_menu_info" symbol="gnome_mdi_get_child_menu_info">
        <return-type type="GnomeUIInfo*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_menubar_info" symbol="gnome_mdi_get_menubar_info">
        <return-type type="GnomeUIInfo*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_toolbar_info" symbol="gnome_mdi_get_toolbar_info">
        <return-type type="GnomeUIInfo*"/>
        <parameters>
          <parameter name="app" type="GnomeApp*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_mdi_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="get_view_from_window" symbol="gnome_mdi_get_view_from_window">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="app" type="GnomeApp*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_mdi_new">
        <parameters>
          <parameter name="appname" type="const-gchar*"/>
          <parameter name="title" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="open_toplevel" symbol="gnome_mdi_open_toplevel">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
        </parameters>
      </method>
      <method deprecated="1" name="register" symbol="gnome_mdi_register">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="object" type="GtkObject*"/>
        </parameters>
      </method>
      <method deprecated="1" name="remove_all" symbol="gnome_mdi_remove_all">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="force" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="remove_child" symbol="gnome_mdi_remove_child">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="child" type="GnomeMDIChild*"/>
          <parameter name="force" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="remove_view" symbol="gnome_mdi_remove_view">
        <return-type type="gint"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="view" type="GtkWidget*"/>
          <parameter name="force" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="restore_state" symbol="gnome_mdi_restore_state">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="section" type="const-gchar*"/>
          <parameter name="create_child_func" type="GnomeMDIChildCreator"/>
        </parameters>
      </method>
      <method deprecated="1" name="save_state" symbol="gnome_mdi_save_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="section" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_active_view" symbol="gnome_mdi_set_active_view">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="view" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_child_list_path" symbol="gnome_mdi_set_child_list_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_child_menu_path" symbol="gnome_mdi_set_child_menu_path">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="path" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_menubar_template" symbol="gnome_mdi_set_menubar_template">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="menu_tmpl" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_mode" symbol="gnome_mdi_set_mode">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="mode" type="GnomeMDIMode"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_toolbar_template" symbol="gnome_mdi_set_toolbar_template">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="tbar_tmpl" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="unregister" symbol="gnome_mdi_unregister">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="object" type="GtkObject*"/>
        </parameters>
      </method>
      <method deprecated="1" name="update_child" symbol="gnome_mdi_update_child">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi" type="GnomeMDI*"/>
          <parameter name="child" type="GnomeMDIChild*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeMDIChild" parent="GtkObject" type-name="GnomeMDIChild">
      <field name="parent" type="GtkObject*"/>
      <field name="name" type="gchar*"/>
      <field name="views" type="GList*"/>
      <field name="menu_template" type="GnomeUIInfo*"/>
      <field name="reserved" type="gpointer"/>
      <method deprecated="1" name="add_view" symbol="gnome_mdi_child_add_view">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="mdi_child" type="GnomeMDIChild*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_mdi_child_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="remove_view" symbol="gnome_mdi_child_remove_view">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi_child" type="GnomeMDIChild*"/>
          <parameter name="view" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_menu_template" symbol="gnome_mdi_child_set_menu_template">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi_child" type="GnomeMDIChild*"/>
          <parameter name="menu_tmpl" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_name" symbol="gnome_mdi_child_set_name">
        <return-type type="void"/>
        <parameters>
          <parameter name="mdi_child" type="GnomeMDIChild*"/>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeMDIGenericChild" parent="GnomeMDIChild" type-name="GnomeMDIGenericChild">
      <field name="create_view" type="GnomeMDIChildViewCreator"/>
      <field name="create_menus" type="GnomeMDIChildMenuCreator"/>
      <field name="get_config_string" type="GnomeMDIChildConfigFunc"/>
      <field name="set_label" type="GnomeMDIChildLabelFunc"/>
      <field name="create_view_cbm" type="GtkCallbackMarshal"/>
      <field name="create_menus_cbm" type="GtkCallbackMarshal"/>
      <field name="get_config_string_cbm" type="GtkCallbackMarshal"/>
      <field name="set_label_cbm" type="GtkCallbackMarshal"/>
      <field name="create_view_dn" type="GtkDestroyNotify"/>
      <field name="create_menus_dn" type="GtkDestroyNotify"/>
      <field name="get_config_string_dn" type="GtkDestroyNotify"/>
      <field name="set_label_dn" type="GtkDestroyNotify"/>
      <field name="create_view_data" type="gpointer"/>
      <field name="create_menus_data" type="gpointer"/>
      <field name="get_config_string_data" type="gpointer"/>
      <field name="set_label_data" type="gpointer"/>
      <field name="reserved" type="gpointer"/>
      <method deprecated="1" name="get_type" symbol="gnome_mdi_generic_child_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_mdi_generic_child_new">
        <parameters>
          <parameter name="name" type="const-gchar*"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="set_config_func" symbol="gnome_mdi_generic_child_set_config_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildConfigFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_config_func_full" symbol="gnome_mdi_generic_child_set_config_func_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildConfigFunc"/>
          <parameter name="marshal" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="notify" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_label_func" symbol="gnome_mdi_generic_child_set_label_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildLabelFunc"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_label_func_full" symbol="gnome_mdi_generic_child_set_label_func_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildLabelFunc"/>
          <parameter name="marshal" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="notify" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_menu_creator" symbol="gnome_mdi_generic_child_set_menu_creator">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildMenuCreator"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_menu_creator_full" symbol="gnome_mdi_generic_child_set_menu_creator_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildMenuCreator"/>
          <parameter name="marshal" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="notify" type="GtkDestroyNotify"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_view_creator" symbol="gnome_mdi_generic_child_set_view_creator">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildViewCreator"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_view_creator_full" symbol="gnome_mdi_generic_child_set_view_creator_full">
        <return-type type="void"/>
        <parameters>
          <parameter name="child" type="GnomeMDIGenericChild*"/>
          <parameter name="func" type="GnomeMDIChildViewCreator"/>
          <parameter name="marshal" type="GtkCallbackMarshal"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="notify" type="GtkDestroyNotify"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeMessageBox" parent="GnomeDialog" type-name="GnomeMessageBox">
      <field name="_priv" type="GnomeMessageBoxPrivate*"/>
      <method deprecated="1" name="construct" symbol="gnome_message_box_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="messagebox" type="GnomeMessageBox*"/>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="message_box_type" type="const-gchar*"/>
          <parameter name="buttons" type="const-gchar**"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_message_box_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_message_box_new">
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="message_box_type" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="newv" symbol="gnome_message_box_newv">
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="message_box_type" type="const-gchar*"/>
          <parameter name="buttons" type="const-gchar**"/>
        </parameters>
      </constructor>
    </object>
    <object get-type="" name="GnomePasswordDialog" parent="GtkDialog" type-name="GnomePasswordDialog">
      <field name="details" type="GnomePasswordDialogDetails*"/>
      <property name="show-username" readable="1" type="gboolean" writable="1"/>
      <property name="show-domain" readable="1" type="gboolean" writable="1"/>
      <property name="show-password" readable="1" type="gboolean" writable="1"/>
      <property name="show-new-password" readable="1" type="gboolean" writable="1"/>
      <property name="show-new-password-quality" readable="1" type="gboolean" writable="1"/>
      <property name="show-userpass-buttons" readable="1" type="gboolean" writable="1"/>
      <property name="show-remember" readable="1" type="gboolean" writable="1"/>
      <property name="readonly-username" readable="1" type="gboolean" writable="1"/>
      <property name="readonly-domain" readable="1" type="gboolean" writable="1"/>
      <property name="anonymous" readable="1" type="gboolean" writable="1"/>
      <property name="remember-mode" readable="1" type="GnomePasswordDialogRemember" writable="1"/>
      <property name="message" readable="1" type="gchar*" writable="1"/>
      <property name="message-markup" readable="1" type="gchar*" writable="1"/>
      <property name="username" readable="1" type="gchar*" writable="1"/>
      <property name="domain" readable="1" type="gchar*" writable="1"/>
      <property name="password" readable="1" type="gchar*" writable="1"/>
      <property name="new-password" readable="1" type="gchar*" writable="1"/>
      <method name="anon_selected" symbol="gnome_password_dialog_anon_selected">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <method name="get_domain" symbol="gnome_password_dialog_get_domain">
        <return-type type="char*"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <method name="get_new_password" symbol="gnome_password_dialog_get_new_password">
        <return-type type="char*"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <method name="get_password" symbol="gnome_password_dialog_get_password">
        <return-type type="char*"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <method name="get_remember" symbol="gnome_password_dialog_get_remember">
        <return-type type="GnomePasswordDialogRemember"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_password_dialog_get_type">
        <return-type type="GtkType"/>
      </method>
      <method name="get_username" symbol="gnome_password_dialog_get_username">
        <return-type type="char*"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <constructor name="new" symbol="gnome_password_dialog_new">
        <parameters>
          <parameter name="dialog_title" type="const-char*"/>
          <parameter name="message" type="const-char*"/>
          <parameter name="username" type="const-char*"/>
          <parameter name="password" type="const-char*"/>
          <parameter name="readonly_username" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="run_and_block" symbol="gnome_password_dialog_run_and_block">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
        </parameters>
      </method>
      <method name="set_domain" symbol="gnome_password_dialog_set_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="domain" type="const-char*"/>
        </parameters>
      </method>
      <method name="set_new_password" symbol="gnome_password_dialog_set_new_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </method>
      <method name="set_password" symbol="gnome_password_dialog_set_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="password" type="const-char*"/>
        </parameters>
      </method>
      <method name="set_password_quality_func" symbol="gnome_password_dialog_set_password_quality_func">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="func" type="GnomePasswordDialogQualityFunc"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="dnotify" type="GDestroyNotify"/>
        </parameters>
      </method>
      <method name="set_readonly_domain" symbol="gnome_password_dialog_set_readonly_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="readonly" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_readonly_username" symbol="gnome_password_dialog_set_readonly_username">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="readonly" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_remember" symbol="gnome_password_dialog_set_remember">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="remember" type="GnomePasswordDialogRemember"/>
        </parameters>
      </method>
      <method name="set_show_domain" symbol="gnome_password_dialog_set_show_domain">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_show_new_password" symbol="gnome_password_dialog_set_show_new_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_show_new_password_quality" symbol="gnome_password_dialog_set_show_new_password_quality">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_show_password" symbol="gnome_password_dialog_set_show_password">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_show_remember" symbol="gnome_password_dialog_set_show_remember">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show_remember" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_show_username" symbol="gnome_password_dialog_set_show_username">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_show_userpass_buttons" symbol="gnome_password_dialog_set_show_userpass_buttons">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="show_userpass_buttons" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_username" symbol="gnome_password_dialog_set_username">
        <return-type type="void"/>
        <parameters>
          <parameter name="password_dialog" type="GnomePasswordDialog*"/>
          <parameter name="username" type="const-char*"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomePixmap" parent="GtkImage" type-name="GnomePixmap">
      <field name="_priv" type="GnomePixmapPrivate*"/>
      <method deprecated="1" name="get_type" symbol="gnome_pixmap_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="load_file" symbol="gnome_pixmap_load_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="gpixmap" type="GnomePixmap*"/>
          <parameter name="filename" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="load_file_at_size" symbol="gnome_pixmap_load_file_at_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="gpixmap" type="GnomePixmap*"/>
          <parameter name="filename" type="const-char*"/>
          <parameter name="width" type="int"/>
          <parameter name="height" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="load_xpm_d" symbol="gnome_pixmap_load_xpm_d">
        <return-type type="void"/>
        <parameters>
          <parameter name="gpixmap" type="GnomePixmap*"/>
          <parameter name="xpm_data" type="const-char**"/>
        </parameters>
      </method>
      <method deprecated="1" name="load_xpm_d_at_size" symbol="gnome_pixmap_load_xpm_d_at_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="gpixmap" type="GnomePixmap*"/>
          <parameter name="xpm_data" type="const-char**"/>
          <parameter name="width" type="int"/>
          <parameter name="height" type="int"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new_from_file" symbol="gnome_pixmap_new_from_file">
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="new_from_file_at_size" symbol="gnome_pixmap_new_from_file_at_size">
        <parameters>
          <parameter name="filename" type="const-gchar*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="new_from_gnome_pixmap" symbol="gnome_pixmap_new_from_gnome_pixmap">
        <parameters>
          <parameter name="gpixmap" type="GnomePixmap*"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="new_from_xpm_d" symbol="gnome_pixmap_new_from_xpm_d">
        <parameters>
          <parameter name="xpm_data" type="const-gchar**"/>
        </parameters>
      </constructor>
      <constructor deprecated="1" name="new_from_xpm_d_at_size" symbol="gnome_pixmap_new_from_xpm_d_at_size">
        <parameters>
          <parameter name="xpm_data" type="const-gchar**"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
        </parameters>
      </constructor>
    </object>
    <object deprecated="1" get-type="" name="GnomePixmapEntry" parent="GnomeFileEntry" type-name="GnomePixmapEntry">
      <field name="_priv" type="GnomePixmapEntryPrivate*"/>
      <property name="do_preview" readable="1" type="gboolean" writable="1"/>
      <method deprecated="1" name="construct" symbol="gnome_pixmap_entry_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
          <parameter name="history_id" type="const-gchar*"/>
          <parameter name="browse_dialog_title" type="const-gchar*"/>
          <parameter name="do_preview" type="gboolean"/>
        </parameters>
      </method>
      <method name="get_filename" symbol="gnome_pixmap_entry_get_filename">
        <return-type type="gchar*"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_pixmap_entry_get_type">
        <return-type type="GType"/>
      </method>
      <method deprecated="1" name="gnome_entry" symbol="gnome_pixmap_entry_gnome_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="gnome_file_entry" symbol="gnome_pixmap_entry_gnome_file_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="gtk_entry" symbol="gnome_pixmap_entry_gtk_entry">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
        </parameters>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_pixmap_entry_new">
        <parameters>
          <parameter name="history_id" type="const-gchar*"/>
          <parameter name="browse_dialog_title" type="const-gchar*"/>
          <parameter name="do_preview" type="gboolean"/>
        </parameters>
      </constructor>
      <method name="preview_widget" symbol="gnome_pixmap_entry_preview_widget">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
        </parameters>
      </method>
      <method name="scrolled_window" symbol="gnome_pixmap_entry_scrolled_window">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_pixmap_subdir" symbol="gnome_pixmap_entry_set_pixmap_subdir">
        <return-type type="void"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
          <parameter name="subdir" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_preview" symbol="gnome_pixmap_entry_set_preview">
        <return-type type="void"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
          <parameter name="do_preview" type="gboolean"/>
        </parameters>
      </method>
      <method name="set_preview_size" symbol="gnome_pixmap_entry_set_preview_size">
        <return-type type="void"/>
        <parameters>
          <parameter name="pentry" type="GnomePixmapEntry*"/>
          <parameter name="preview_w" type="gint"/>
          <parameter name="preview_h" type="gint"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomePropertyBox" parent="GnomeDialog" type-name="GnomePropertyBox">
      <field name="notebook" type="GtkWidget*"/>
      <field name="ok_button" type="GtkWidget*"/>
      <field name="apply_button" type="GtkWidget*"/>
      <field name="cancel_button" type="GtkWidget*"/>
      <field name="help_button" type="GtkWidget*"/>
      <field name="reserved" type="gpointer"/>
      <signal name="apply" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="propertybox" type="GnomePropertyBox*"/>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </signal>
      <signal name="help" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter name="propertybox" type="GnomePropertyBox*"/>
          <parameter name="page_num" type="gint"/>
        </parameters>
      </signal>
      <method deprecated="1" name="append_page" symbol="gnome_property_box_append_page">
        <return-type type="gint"/>
        <parameters>
          <parameter name="property_box" type="GnomePropertyBox*"/>
          <parameter name="child" type="GtkWidget*"/>
          <parameter name="tab_label" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="changed" symbol="gnome_property_box_changed">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_box" type="GnomePropertyBox*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_property_box_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_property_box_new"/>
      <method deprecated="1" name="set_modified" symbol="gnome_property_box_set_modified">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_box" type="GnomePropertyBox*"/>
          <parameter name="state" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_state" symbol="gnome_property_box_set_state">
        <return-type type="void"/>
        <parameters>
          <parameter name="property_box" type="GnomePropertyBox*"/>
          <parameter name="state" type="gboolean"/>
        </parameters>
      </method>
    </object>
    <object deprecated="1" get-type="" name="GnomeScores" parent="GtkDialog" type-name="GnomeScores">
      <field name="_priv" type="GnomeScoresPrivate*"/>
      <method deprecated="1" name="construct" symbol="gnome_scores_construct">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="n_scores" type="guint"/>
          <parameter name="names" type="gchar**"/>
          <parameter name="scores" type="gfloat*"/>
          <parameter name="times" type="time_t*"/>
          <parameter name="clear" type="gboolean"/>
        </parameters>
      </method>
      <method deprecated="1" name="display" symbol="gnome_scores_display">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="title" type="const-gchar*"/>
          <parameter name="app_name" type="const-gchar*"/>
          <parameter name="Name" type="/*"/>
          <parameter name="in" type="as"/>
          <parameter name="pos" type="int"/>
          <parameter name="returned" type="as"/>
        </parameters>
      </method>
      <method deprecated="1" name="display_with_pixmap" symbol="gnome_scores_display_with_pixmap">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="pixmap_logo" type="const-gchar*"/>
          <parameter name="app_name" type="const-gchar*"/>
          <parameter name="level" type="const-gchar*"/>
          <parameter name="pos" type="int"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_type" symbol="gnome_scores_get_type">
        <return-type type="GType"/>
      </method>
      <constructor deprecated="1" name="new" symbol="gnome_scores_new">
        <parameters>
          <parameter name="n_scores" type="guint"/>
          <parameter name="names" type="gchar**"/>
          <parameter name="scores" type="gfloat*"/>
          <parameter name="times" type="time_t*"/>
          <parameter name="clear" type="gboolean"/>
        </parameters>
      </constructor>
      <method deprecated="1" name="set_color" symbol="gnome_scores_set_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="n" type="guint"/>
          <parameter name="col" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_colors" symbol="gnome_scores_set_colors">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="col" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_current_player" symbol="gnome_scores_set_current_player">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="i" type="gint"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_def_color" symbol="gnome_scores_set_def_color">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="col" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo_label" symbol="gnome_scores_set_logo_label">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="txt" type="const-gchar*"/>
          <parameter name="font" type="const-gchar*"/>
          <parameter name="col" type="GdkColor*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo_label_title" symbol="gnome_scores_set_logo_label_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="txt" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo_pixmap" symbol="gnome_scores_set_logo_pixmap">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="pix_name" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="set_logo_widget" symbol="gnome_scores_set_logo_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="gs" type="GnomeScores*"/>
          <parameter name="w" type="GtkWidget*"/>
        </parameters>
      </method>
    </object>
    <object get-type="" name="GnomeThumbnailFactory" parent="GObject" type-name="GnomeThumbnailFactory">
      <field name="priv" type="GnomeThumbnailFactoryPrivate*"/>
      <method name="can_thumbnail" symbol="gnome_thumbnail_factory_can_thumbnail">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="factory" type="GnomeThumbnailFactory*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="mime_type" type="const-char*"/>
          <parameter name="mtime" type="time_t"/>
        </parameters>
      </method>
      <method name="create_failed_thumbnail" symbol="gnome_thumbnail_factory_create_failed_thumbnail">
        <return-type type="void"/>
        <parameters>
          <parameter name="factory" type="GnomeThumbnailFactory*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="mtime" type="time_t"/>
        </parameters>
      </method>
      <method name="generate_thumbnail" symbol="gnome_thumbnail_factory_generate_thumbnail">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="factory" type="GnomeThumbnailFactory*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="mime_type" type="const-char*"/>
        </parameters>
      </method>
      <method name="get_type" symbol="gnome_thumbnail_factory_get_type">
        <return-type type="GType"/>
      </method>
      <method name="has_valid_failed_thumbnail" symbol="gnome_thumbnail_factory_has_valid_failed_thumbnail">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="factory" type="GnomeThumbnailFactory*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="mtime" type="time_t"/>
        </parameters>
      </method>
      <method name="lookup" symbol="gnome_thumbnail_factory_lookup">
        <return-type type="char*"/>
        <parameters>
          <parameter name="factory" type="GnomeThumbnailFactory*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="mtime" type="time_t"/>
        </parameters>
      </method>
      <constructor name="new" symbol="gnome_thumbnail_factory_new">
        <parameters>
          <parameter name="size" type="GnomeThumbnailSize"/>
        </parameters>
      </constructor>
      <method name="save_thumbnail" symbol="gnome_thumbnail_factory_save_thumbnail">
        <return-type type="void"/>
        <parameters>
          <parameter name="factory" type="GnomeThumbnailFactory*"/>
          <parameter name="thumbnail" type="GdkPixbuf*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="original_mtime" type="time_t"/>
        </parameters>
      </method>
    </object>
    <struct get-type="" name="GnomeAppBarMsg" opaque="true" type-name="GnomeAppBarMsg"/>
    <struct get-type="" name="GnomeGdkPixbufAsyncHandle" opaque="true" type-name="GnomeGdkPixbufAsyncHandle"/>
    <struct deprecated="1" get-type="" name="GnomeIconData" type-name="GnomeIconData">
      <field name="has_embedded_rect" readable="1" type="gboolean" writable="1"/>
      <field name="x0" readable="1" type="int" writable="1"/>
      <field name="y0" readable="1" type="int" writable="1"/>
      <field name="x1" readable="1" type="int" writable="1"/>
      <field name="y1" readable="1" type="int" writable="1"/>
      <field name="attach_points" readable="1" type="GnomeIconDataPoint*" writable="1"/>
      <field name="n_attach_points" readable="1" type="int" writable="1"/>
      <field name="display_name" readable="1" type="char*" writable="1"/>
      <method deprecated="1" name="dup" symbol="gnome_icon_data_dup">
        <return-type type="GnomeIconData*"/>
        <parameters>
          <parameter name="icon_data" type="const-GnomeIconData*"/>
        </parameters>
      </method>
      <method deprecated="1" name="free" symbol="gnome_icon_data_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="icon_data" type="GnomeIconData*"/>
        </parameters>
      </method>
    </struct>
    <struct get-type="" name="GnomeIconDataPoint" type-name="GnomeIconDataPoint">
      <field name="x" readable="1" type="int" writable="1"/>
      <field name="y" readable="1" type="int" writable="1"/>
    </struct>
    <struct get-type="" name="GnomeMessageBoxButton" opaque="true" type-name="GnomeMessageBoxButton"/>
    <struct get-type="" name="GnomePasswordDialogDetails" opaque="true" type-name="GnomePasswordDialogDetails"/>
    <struct get-type="" name="GnomeThemeFile" opaque="true" type-name="GnomeThemeFile">
      <method deprecated="1" name="foreach_key" symbol="gnome_theme_file_foreach_key">
        <return-type type="void"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
          <parameter name="section" type="const-char*"/>
          <parameter name="include_localized" type="gboolean"/>
          <parameter name="func" type="GnomeThemeFileLineFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="foreach_section" symbol="gnome_theme_file_foreach_section">
        <return-type type="void"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
          <parameter name="func" type="GnomeThemeFileSectionFunc"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="free" symbol="gnome_theme_file_free">
        <return-type type="void"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_integer" symbol="gnome_theme_file_get_integer">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
          <parameter name="section" type="const-char*"/>
          <parameter name="keyname" type="const-char*"/>
          <parameter name="val" type="int*"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_locale_string" symbol="gnome_theme_file_get_locale_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
          <parameter name="section" type="const-char*"/>
          <parameter name="keyname" type="const-char*"/>
          <parameter name="val" type="char**"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_raw" symbol="gnome_theme_file_get_raw">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
          <parameter name="section" type="const-char*"/>
          <parameter name="keyname" type="const-char*"/>
          <parameter name="locale" type="const-char*"/>
          <parameter name="val" type="char**"/>
        </parameters>
      </method>
      <method deprecated="1" name="get_string" symbol="gnome_theme_file_get_string">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
          <parameter name="section" type="const-char*"/>
          <parameter name="keyname" type="const-char*"/>
          <parameter name="val" type="char**"/>
        </parameters>
      </method>
      <method deprecated="1" name="new_from_string" symbol="gnome_theme_file_new_from_string">
        <return-type type="GnomeThemeFile*"/>
        <parameters>
          <parameter name="data" type="char*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method deprecated="1" name="parse_error_quark" symbol="gnome_theme_file_parse_error_quark">
        <return-type type="GQuark"/>
      </method>
      <method deprecated="1" name="to_string" symbol="gnome_theme_file_to_string">
        <return-type type="char*"/>
        <parameters>
          <parameter name="df" type="GnomeThemeFile*"/>
        </parameters>
      </method>
    </struct>
    <struct get-type="" name="GnomeUIBuilderData" type-name="GnomeUIBuilderData">
      <field name="connect_func" readable="1" type="GnomeUISignalConnectFunc" writable="1"/>
      <field name="data" readable="1" type="gpointer" writable="1"/>
      <field name="is_interp" readable="1" type="gboolean" writable="1"/>
      <field name="relay_func" readable="1" type="GtkCallbackMarshal" writable="1"/>
      <field name="destroy_func" readable="1" type="GtkDestroyNotify" writable="1"/>
    </struct>
    <struct get-type="" name="GnomeUIInfo" type-name="GnomeUIInfo">
      <field name="type" readable="1" type="GnomeUIInfoType" writable="1"/>
      <field name="label" readable="1" type="const-gchar*" writable="1"/>
      <field name="hint" readable="1" type="const-gchar*" writable="1"/>
      <field name="moreinfo" readable="1" type="gpointer" writable="1"/>
      <field name="user_data" readable="1" type="gpointer" writable="1"/>
      <field name="unused_data" readable="1" type="gpointer" writable="1"/>
      <field name="pixmap_type" readable="1" type="GnomeUIPixmapType" writable="1"/>
      <field name="pixmap_info" readable="1" type="gconstpointer" writable="1"/>
      <field name="accelerator_key" readable="1" type="guint" writable="1"/>
      <field name="ac_mods" readable="1" type="GdkModifierType" writable="1"/>
      <field name="widget" readable="1" type="GtkWidget*" writable="1"/>
    </struct>
    <function name="accelerators_sync" symbol="gnome_accelerators_sync">
      <return-type type="void"/>
    </function>
    <struct name="GnomeAuthentication">
      <method name="manager_dialog_is_visible" symbol="gnome_authentication_manager_dialog_is_visible">
        <return-type type="gboolean"/>
      </method>
      <method name="manager_init" symbol="gnome_authentication_manager_init">
        <return-type type="void"/>
      </method>
    </struct>
    <struct name="GnomeError">
      <method deprecated="1" name="dialog" symbol="gnome_error_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="error" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog_parented" symbol="gnome_error_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="error" type="const-gchar*"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeGdk">
      <method name="pixbuf_new_from_uri" symbol="gnome_gdk_pixbuf_new_from_uri">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
        </parameters>
      </method>
      <method name="pixbuf_new_from_uri_async" symbol="gnome_gdk_pixbuf_new_from_uri_async">
        <return-type type="GnomeGdkPixbufAsyncHandle*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
          <parameter name="load_callback" type="GnomeGdkPixbufLoadCallback"/>
          <parameter name="done_callback" type="GnomeGdkPixbufDoneCallback"/>
          <parameter name="callback_data" type="gpointer"/>
        </parameters>
      </method>
      <method name="pixbuf_new_from_uri_at_scale" symbol="gnome_gdk_pixbuf_new_from_uri_at_scale">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
          <parameter name="width" type="gint"/>
          <parameter name="height" type="gint"/>
          <parameter name="preserve_aspect_ratio" type="gboolean"/>
        </parameters>
      </method>
      <method name="pixbuf_new_from_uri_cancel" symbol="gnome_gdk_pixbuf_new_from_uri_cancel">
        <return-type type="void"/>
        <parameters>
          <parameter name="handle" type="GnomeGdkPixbufAsyncHandle*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeGtk">
      <method name="module_info_get" symbol="gnome_gtk_module_info_get">
        <return-type type="const-GnomeModuleInfo*"/>
      </method>
      <method deprecated="1" name="widget_add_popup_items" symbol="gnome_gtk_widget_add_popup_items">
        <return-type type="void"/>
        <parameters>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeHelp">
      <method name="display_desktop_on_screen" symbol="gnome_help_display_desktop_on_screen">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="program" type="GnomeProgram*"/>
          <parameter name="doc_id" type="const-char*"/>
          <parameter name="file_name" type="const-char*"/>
          <parameter name="link_id" type="const-char*"/>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="display_on_screen" symbol="gnome_help_display_on_screen">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="file_name" type="const-char*"/>
          <parameter name="link_id" type="const-char*"/>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="display_uri_on_screen" symbol="gnome_help_display_uri_on_screen">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="help_uri" type="const-char*"/>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="display_with_doc_id_on_screen" symbol="gnome_help_display_with_doc_id_on_screen">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="program" type="GnomeProgram*"/>
          <parameter name="doc_id" type="const-char*"/>
          <parameter name="file_name" type="const-char*"/>
          <parameter name="link_id" type="const-char*"/>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
    </struct>
    <function name="ice_init" symbol="gnome_ice_init">
      <return-type type="void"/>
    </function>
    <struct name="GnomeIcon">
      <method name="lookup" symbol="gnome_icon_lookup">
        <return-type type="char*"/>
        <parameters>
          <parameter name="icon_theme" type="GtkIconTheme*"/>
          <parameter name="thumbnail_factory" type="GnomeThumbnailFactory*"/>
          <parameter name="file_uri" type="const-char*"/>
          <parameter name="custom_icon" type="const-char*"/>
          <parameter name="file_info" type="GnomeVFSFileInfo*"/>
          <parameter name="mime_type" type="const-char*"/>
          <parameter name="flags" type="GnomeIconLookupFlags"/>
          <parameter name="result" type="GnomeIconLookupResultFlags*"/>
        </parameters>
      </method>
      <method name="lookup_sync" symbol="gnome_icon_lookup_sync">
        <return-type type="char*"/>
        <parameters>
          <parameter name="icon_theme" type="GtkIconTheme*"/>
          <parameter name="thumbnail_factory" type="GnomeThumbnailFactory*"/>
          <parameter name="file_uri" type="const-char*"/>
          <parameter name="custom_icon" type="const-char*"/>
          <parameter name="flags" type="GnomeIconLookupFlags"/>
          <parameter name="result" type="GnomeIconLookupResultFlags*"/>
        </parameters>
      </method>
    </struct>
    <function deprecated="1" name="init_with_popt_table" symbol="gnome_init_with_popt_table">
      <return-type type="int"/>
      <parameters>
        <parameter name="app_id" type="const-char*"/>
        <parameter name="app_version" type="const-char*"/>
        <parameter name="argc" type="int"/>
        <parameter name="argv" type="char**"/>
        <parameter name="options" type="poptOption*"/>
        <parameter name="flags" type="int"/>
        <parameter name="return_ctx" type="poptContext*"/>
      </parameters>
    </function>
    <function name="interaction_key_return" symbol="gnome_interaction_key_return">
      <return-type type="void"/>
      <parameters>
        <parameter name="key" type="gint"/>
        <parameter name="cancel_shutdown" type="gboolean"/>
      </parameters>
    </function>
    <function name="master_client" symbol="gnome_master_client">
      <return-type type="GnomeClient*"/>
    </function>
    <struct name="GnomeOk">
      <method deprecated="1" name="cancel_dialog" symbol="gnome_ok_cancel_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="cancel_dialog_modal" symbol="gnome_ok_cancel_dialog_modal">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="cancel_dialog_modal_parented" symbol="gnome_ok_cancel_dialog_modal_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="cancel_dialog_parented" symbol="gnome_ok_cancel_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog" symbol="gnome_ok_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="message" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog_parented" symbol="gnome_ok_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="message" type="const-gchar*"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomePopup">
      <method deprecated="1" name="menu_append" symbol="gnome_popup_menu_append">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup" type="GtkWidget*"/>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="menu_attach" symbol="gnome_popup_menu_attach">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup" type="GtkWidget*"/>
          <parameter name="widget" type="GtkWidget*"/>
          <parameter name="user_data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="menu_do_popup" symbol="gnome_popup_menu_do_popup">
        <return-type type="void"/>
        <parameters>
          <parameter name="popup" type="GtkWidget*"/>
          <parameter name="pos_func" type="GtkMenuPositionFunc"/>
          <parameter name="pos_data" type="gpointer"/>
          <parameter name="event" type="GdkEventButton*"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="for_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="menu_do_popup_modal" symbol="gnome_popup_menu_do_popup_modal">
        <return-type type="int"/>
        <parameters>
          <parameter name="popup" type="GtkWidget*"/>
          <parameter name="pos_func" type="GtkMenuPositionFunc"/>
          <parameter name="pos_data" type="gpointer"/>
          <parameter name="event" type="GdkEventButton*"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="for_widget" type="GtkWidget*"/>
        </parameters>
      </method>
      <method deprecated="1" name="menu_get_accel_group" symbol="gnome_popup_menu_get_accel_group">
        <return-type type="GtkAccelGroup*"/>
        <parameters>
          <parameter name="menu" type="GtkMenu*"/>
        </parameters>
      </method>
      <method deprecated="1" name="menu_new" symbol="gnome_popup_menu_new">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
        </parameters>
      </method>
      <method deprecated="1" name="menu_new_with_accelgroup" symbol="gnome_popup_menu_new_with_accelgroup">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="uiinfo" type="GnomeUIInfo*"/>
          <parameter name="accelgroup" type="GtkAccelGroup*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeQuestion">
      <method deprecated="1" name="dialog" symbol="gnome_question_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog_modal" symbol="gnome_question_dialog_modal">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog_modal_parented" symbol="gnome_question_dialog_modal_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog_parented" symbol="gnome_question_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="question" type="const-gchar*"/>
          <parameter name="callback" type="GnomeReplyCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeRequest">
      <method deprecated="1" name="dialog" symbol="gnome_request_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="password" type="gboolean"/>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="default_text" type="const-gchar*"/>
          <parameter name="max_length" type="const-guint16"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="password_dialog" symbol="gnome_request_password_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="password_dialog_parented" symbol="gnome_request_password_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="string_dialog" symbol="gnome_request_string_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
        </parameters>
      </method>
      <method deprecated="1" name="string_dialog_parented" symbol="gnome_request_string_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="prompt" type="const-gchar*"/>
          <parameter name="callback" type="GnomeStringCallback"/>
          <parameter name="data" type="gpointer"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeThumbnail">
      <method name="has_uri" symbol="gnome_thumbnail_has_uri">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="uri" type="const-char*"/>
        </parameters>
      </method>
      <method name="is_valid" symbol="gnome_thumbnail_is_valid">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="uri" type="const-char*"/>
          <parameter name="mtime" type="time_t"/>
        </parameters>
      </method>
      <method name="md5" symbol="gnome_thumbnail_md5">
        <return-type type="char*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
        </parameters>
      </method>
      <method name="path_for_uri" symbol="gnome_thumbnail_path_for_uri">
        <return-type type="char*"/>
        <parameters>
          <parameter name="uri" type="const-char*"/>
          <parameter name="size" type="GnomeThumbnailSize"/>
        </parameters>
      </method>
      <method name="scale_down_pixbuf" symbol="gnome_thumbnail_scale_down_pixbuf">
        <return-type type="GdkPixbuf*"/>
        <parameters>
          <parameter name="pixbuf" type="GdkPixbuf*"/>
          <parameter name="dest_width" type="int"/>
          <parameter name="dest_height" type="int"/>
        </parameters>
      </method>
    </struct>
    <function name="type_init" symbol="gnome_type_init">
      <return-type type="void"/>
    </function>
    <function name="url_show_on_screen" symbol="gnome_url_show_on_screen">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="url" type="const-char*"/>
        <parameter name="screen" type="GdkScreen*"/>
        <parameter name="error" type="GError**"/>
      </parameters>
    </function>
    <struct name="GnomeWarning">
      <method deprecated="1" name="dialog" symbol="gnome_warning_dialog">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="warning" type="const-gchar*"/>
        </parameters>
      </method>
      <method deprecated="1" name="dialog_parented" symbol="gnome_warning_dialog_parented">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter name="warning" type="const-gchar*"/>
          <parameter name="parent" type="GtkWindow*"/>
        </parameters>
      </method>
    </struct>
    <struct name="GnomeWindow">
      <method deprecated="1" name="icon_init" symbol="gnome_window_icon_init">
        <return-type type="void"/>
      </method>
      <method deprecated="1" name="icon_set_default_from_file" symbol="gnome_window_icon_set_default_from_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="filename" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="icon_set_default_from_file_list" symbol="gnome_window_icon_set_default_from_file_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="filenames" type="const-char**"/>
        </parameters>
      </method>
      <method deprecated="1" name="icon_set_from_default" symbol="gnome_window_icon_set_from_default">
        <return-type type="void"/>
        <parameters>
          <parameter name="w" type="GtkWindow*"/>
        </parameters>
      </method>
      <method deprecated="1" name="icon_set_from_file" symbol="gnome_window_icon_set_from_file">
        <return-type type="void"/>
        <parameters>
          <parameter name="w" type="GtkWindow*"/>
          <parameter name="filename" type="const-char*"/>
        </parameters>
      </method>
      <method deprecated="1" name="icon_set_from_file_list" symbol="gnome_window_icon_set_from_file_list">
        <return-type type="void"/>
        <parameters>
          <parameter name="w" type="GtkWindow*"/>
          <parameter name="filenames" type="const-char**"/>
        </parameters>
      </method>
      <method deprecated="1" name="toplevel_set_title" symbol="gnome_window_toplevel_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter name="window" type="GtkWindow*"/>
          <parameter name="doc_name" type="const-gchar*"/>
          <parameter name="app_name" type="const-gchar*"/>
          <parameter name="extension" type="const-gchar*"/>
        </parameters>
      </method>
    </struct>
    <constant name="GNOME_STOCK_ABOUT" type="utf8" type-name="GNOME_STOCK_ABOUT" value="gnome-stock-about"/>
    <constant name="GNOME_STOCK_ATTACH" type="utf8" type-name="GNOME_STOCK_ATTACH" value="gnome-stock-attach"/>
    <constant name="GNOME_STOCK_AUTHENTICATION" type="utf8" type-name="GNOME_STOCK_AUTHENTICATION" value="gnome-stock-authentication"/>
    <constant name="GNOME_STOCK_BLANK" type="utf8" type-name="GNOME_STOCK_BLANK" value="gnome-stock-blank"/>
    <constant name="GNOME_STOCK_BOOK_BLUE" type="utf8" type-name="GNOME_STOCK_BOOK_BLUE" value="gnome-stock-book-blue"/>
    <constant name="GNOME_STOCK_BOOK_GREEN" type="utf8" type-name="GNOME_STOCK_BOOK_GREEN" value="gnome-stock-book-green"/>
    <constant name="GNOME_STOCK_BOOK_OPEN" type="utf8" type-name="GNOME_STOCK_BOOK_OPEN" value="gnome-stock-book-open"/>
    <constant name="GNOME_STOCK_BOOK_RED" type="utf8" type-name="GNOME_STOCK_BOOK_RED" value="gnome-stock-book-red"/>
    <constant name="GNOME_STOCK_BOOK_YELLOW" type="utf8" type-name="GNOME_STOCK_BOOK_YELLOW" value="gnome-stock-book-yellow"/>
    <constant name="GNOME_STOCK_LINE_IN" type="utf8" type-name="GNOME_STOCK_LINE_IN" value="gnome-stock-line-in"/>
    <constant name="GNOME_STOCK_MAIL" type="utf8" type-name="GNOME_STOCK_MAIL" value="gnome-stock-mail"/>
    <constant name="GNOME_STOCK_MAIL_FWD" type="utf8" type-name="GNOME_STOCK_MAIL_FWD" value="gnome-stock-mail-fwd"/>
    <constant name="GNOME_STOCK_MAIL_NEW" type="utf8" type-name="GNOME_STOCK_MAIL_NEW" value="gnome-stock-mail-new"/>
    <constant name="GNOME_STOCK_MAIL_RCV" type="utf8" type-name="GNOME_STOCK_MAIL_RCV" value="gnome-stock-mail-rcv"/>
    <constant name="GNOME_STOCK_MAIL_RPL" type="utf8" type-name="GNOME_STOCK_MAIL_RPL" value="gnome-stock-mail-rpl"/>
    <constant name="GNOME_STOCK_MAIL_SND" type="utf8" type-name="GNOME_STOCK_MAIL_SND" value="gnome-stock-mail-snd"/>
    <constant name="GNOME_STOCK_MIC" type="utf8" type-name="GNOME_STOCK_MIC" value="gnome-stock-mic"/>
    <constant name="GNOME_STOCK_MIDI" type="utf8" type-name="GNOME_STOCK_MIDI" value="gnome-stock-midi"/>
    <constant name="GNOME_STOCK_MULTIPLE_FILE" type="utf8" type-name="GNOME_STOCK_MULTIPLE_FILE" value="gnome-stock-multiple-file"/>
    <constant name="GNOME_STOCK_NOT" type="utf8" type-name="GNOME_STOCK_NOT" value="gnome-stock-not"/>
    <constant name="GNOME_STOCK_SCORES" type="utf8" type-name="GNOME_STOCK_SCORES" value="gnome-stock-scores"/>
    <constant name="GNOME_STOCK_TABLE_BORDERS" type="utf8" type-name="GNOME_STOCK_TABLE_BORDERS" value="gnome-stock-table-borders"/>
    <constant name="GNOME_STOCK_TABLE_FILL" type="utf8" type-name="GNOME_STOCK_TABLE_FILL" value="gnome-stock-table-fill"/>
    <constant name="GNOME_STOCK_TEXT_BULLETED_LIST" type="utf8" type-name="GNOME_STOCK_TEXT_BULLETED_LIST" value="gnome-stock-text-bulleted-list"/>
    <constant name="GNOME_STOCK_TEXT_INDENT" type="utf8" type-name="GNOME_STOCK_TEXT_INDENT" value="gnome-stock-text-indent"/>
    <constant name="GNOME_STOCK_TEXT_NUMBERED_LIST" type="utf8" type-name="GNOME_STOCK_TEXT_NUMBERED_LIST" value="gnome-stock-text-numbered-list"/>
    <constant name="GNOME_STOCK_TEXT_UNINDENT" type="utf8" type-name="GNOME_STOCK_TEXT_UNINDENT" value="gnome-stock-text-unindent"/>
    <constant name="GNOME_STOCK_TIMER" type="utf8" type-name="GNOME_STOCK_TIMER" value="gnome-stock-timer"/>
    <constant name="GNOME_STOCK_TIMER_STOP" type="utf8" type-name="GNOME_STOCK_TIMER_STOP" value="gnome-stock-timer-stop"/>
    <constant name="GNOME_STOCK_TRASH" type="utf8" type-name="GNOME_STOCK_TRASH" value="gnome-stock-trash"/>
    <constant name="GNOME_STOCK_TRASH_FULL" type="utf8" type-name="GNOME_STOCK_TRASH_FULL" value="gnome-stock-trash-full"/>
    <constant name="GNOME_STOCK_VOLUME" type="utf8" type-name="GNOME_STOCK_VOLUME" value="gnome-stock-volume"/>
  </namespace>
</api>
