<?xml version="1.0"?>
<api version="1.0">
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Notify">
    <enum get-type="notify_urgency_get_type" name="NotifyUrgency" type="enum" type-name="NotifyUrgency">
      <member name="NOTIFY_URGENCY_LOW" value=""/>
      <member name="NOTIFY_URGENCY_NORMAL" value=""/>
      <member name="NOTIFY_URGENCY_CRITICAL" value=""/>
    </enum>
    <callback name="NotifyActionCallback" type-name="NotifyActionCallback">
      <return-type type="void"/>
      <parameters>
        <parameter name="arg1" type="NotifyNotification*"/>
        <parameter name="arg2" type="gchar*"/>
        <parameter name="arg3" type="gpointer"/>
      </parameters>
    </callback>
    <object get-type="" name="NotifyNotification" parent="GObject" type-name="NotifyNotification">
      <field name="priv" type="NotifyNotificationPrivate*"/>
      <signal name="closed" when="FIRST">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
        </parameters>
      </signal>
      <property construct="1" name="summary" readable="1" type="gchar*" writable="1"/>
      <property construct="1" name="body" readable="1" type="gchar*" writable="1"/>
      <property construct="1" name="icon-name" readable="1" type="gchar*" writable="1"/>
      <property construct="1" name="attach-widget" readable="1" type="GtkWidget" writable="1"/>
      <property construct="1" name="status-icon" readable="1" type="GtkStatusIcon" writable="1"/>
      <method name="add_action" symbol="notify_notification_add_action">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="action" type="const-char*"/>
          <parameter name="label" type="const-char*"/>
          <parameter name="callback" type="NotifyActionCallback"/>
          <parameter name="user_data" type="gpointer"/>
          <parameter name="free_func" type="GFreeFunc"/>
        </parameters>
      </method>
      <method name="attach_to_widget" symbol="notify_notification_attach_to_widget">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="attach" type="GtkWidget*"/>
        </parameters>
      </method>
      <method name="clear_actions" symbol="notify_notification_clear_actions">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
        </parameters>
      </method>
      <method name="clear_hints" symbol="notify_notification_clear_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
        </parameters>
      </method>
      <method name="close" symbol="notify_notification_close">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="get_type" symbol="notify_notification_get_type">
        <return-type type="GType"/>
      </method>
      <constructor name="new" symbol="notify_notification_new">
        <parameters>
          <parameter name="summary" type="const-gchar*"/>
          <parameter name="body" type="const-gchar*"/>
          <parameter name="icon" type="const-gchar*"/>
          <parameter name="attach" type="GtkWidget*"/>
        </parameters>
      </constructor>
      <method name="set_category" symbol="notify_notification_set_category">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="category" type="const-char*"/>
        </parameters>
      </method>
      <method name="set_geometry_hints" symbol="notify_notification_set_geometry_hints">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="screen" type="GdkScreen*"/>
          <parameter name="x" type="gint"/>
          <parameter name="y" type="gint"/>
        </parameters>
      </method>
      <method name="set_hint_byte" symbol="notify_notification_set_hint_byte">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="guchar"/>
        </parameters>
      </method>
      <method name="set_hint_byte_array" symbol="notify_notification_set_hint_byte_array">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-guchar*"/>
          <parameter name="len" type="gsize"/>
        </parameters>
      </method>
      <method name="set_hint_double" symbol="notify_notification_set_hint_double">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gdouble"/>
        </parameters>
      </method>
      <method name="set_hint_int32" symbol="notify_notification_set_hint_int32">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="gint"/>
        </parameters>
      </method>
      <method name="set_hint_string" symbol="notify_notification_set_hint_string">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="key" type="const-gchar*"/>
          <parameter name="value" type="const-gchar*"/>
        </parameters>
      </method>
      <method name="set_icon_from_pixbuf" symbol="notify_notification_set_icon_from_pixbuf">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="icon" type="GdkPixbuf*"/>
        </parameters>
      </method>
      <method name="set_timeout" symbol="notify_notification_set_timeout">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="timeout" type="gint"/>
        </parameters>
      </method>
      <method name="set_urgency" symbol="notify_notification_set_urgency">
        <return-type type="void"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="urgency" type="NotifyUrgency"/>
        </parameters>
      </method>
      <method name="show" symbol="notify_notification_show">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="error" type="GError**"/>
        </parameters>
      </method>
      <method name="update" symbol="notify_notification_update">
        <return-type type="gboolean"/>
        <parameters>
          <parameter name="notification" type="NotifyNotification*"/>
          <parameter name="summary" type="const-gchar*"/>
          <parameter name="body" type="const-gchar*"/>
          <parameter name="icon" type="const-gchar*"/>
        </parameters>
      </method>
    </object>
    <function name="get_app_name" symbol="notify_get_app_name">
      <return-type type="const-gchar*"/>
    </function>
    <function name="get_server_caps" symbol="notify_get_server_caps">
      <return-type type="GList*"/>
    </function>
    <function name="get_server_info" symbol="notify_get_server_info">
      <return-type type="gboolean"/>
      <parameters>
        <parameter name="ret_name" type="char**"/>
        <parameter name="ret_vendor" type="char**"/>
        <parameter name="ret_version" type="char**"/>
        <parameter name="ret_spec_version" type="char**"/>
      </parameters>
    </function>
    <function name="is_initted" symbol="notify_is_initted">
      <return-type type="gboolean"/>
    </function>
  </namespace>
</api>
