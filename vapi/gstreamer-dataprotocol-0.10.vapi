/* gstreamer-dataprotocol-0.10.vapi generated by lt-vapigen, do not modify. */

[CCode (cprefix = "Gst", lower_case_cprefix = "gst_")]
namespace Gst {
	[CCode (cprefix = "GST_DP_HEADER_FLAG_", cheader_filename = "gst/gst.h")]
	public enum DPHeaderFlag {
		NONE,
		CRC_HEADER,
		CRC_PAYLOAD,
		CRC,
	}
	[CCode (cprefix = "GST_DP_PAYLOAD_", cheader_filename = "gst/gst.h")]
	public enum DPPayloadType {
		NONE,
		BUFFER,
		CAPS,
		EVENT_NONE,
	}
	[CCode (cprefix = "", cheader_filename = "gst/gst.h")]
	public enum DPVersion {
		GDP Version 0.2,
		GDP Version 1.0,
	}
	[CCode (cheader_filename = "gst/gst.h")]
	public class DPPacketizer {
		public Gst.DPVersion version;
		public Gst.DPHeaderFromBufferFunction header_from_buffer;
		public Gst.DPPacketFromCapsFunction packet_from_caps;
		public Gst.DPPacketFromEventFunction packet_from_event;
		[NoArrayLength]
		public weak pointer[] _gst_reserved;
		public DPPacketizer (Gst.DPVersion version);
	}
	public static delegate bool DPHeaderFromBufferFunction (Gst.Buffer buffer, Gst.DPHeaderFlag flags, uint length, uchar header);
	public static delegate bool DPPacketFromCapsFunction (Gst.Caps caps, Gst.DPHeaderFlag flags, uint length, uchar header, uchar payload);
	public static delegate bool DPPacketFromEventFunction (Gst.Event event, Gst.DPHeaderFlag flags, uint length, uchar header, uchar payload);
	public const int DP_HEADER_LENGTH;
	public const int DP_VERSION_MAJOR;
	public const int DP_VERSION_MINOR;
	public static weak Gst.Buffer dp_buffer_from_header (uint header_length, uchar header);
	public static weak Gst.Caps dp_caps_from_packet (uint header_length, uchar header, uchar payload);
	public static ushort dp_crc (uchar buffer, uint length);
	public static weak Gst.Event dp_event_from_packet (uint header_length, uchar header, uchar payload);
	public static bool dp_header_from_buffer (Gst.Buffer buffer, Gst.DPHeaderFlag flags, uint length, uchar header);
	public static uint dp_header_payload_length (uchar header);
	public static Gst.DPPayloadType dp_header_payload_type (uchar header);
	public static void dp_init ();
	public static bool dp_packet_from_caps (Gst.Caps caps, Gst.DPHeaderFlag flags, uint length, uchar header, uchar payload);
	public static bool dp_packet_from_event (Gst.Event event, Gst.DPHeaderFlag flags, uint length, uchar header, uchar payload);
	public static bool dp_validate_header (uint header_length, uchar header);
	public static bool dp_validate_packet (uint header_length, uchar header, uchar payload);
	public static bool dp_validate_payload (uint header_length, uchar header, uchar payload);
}
