NULL =

INCLUDES = \
	$(GLIB_CFLAGS) \
	$(NULL)

BUILT_SOURCES = ccode.vala.stamp

noinst_LTLIBRARIES = \
	libvalaccode.la
	$(NULL)

libvalaccode_la_VALASOURCES = \
	$(NULL)

libvalaccode_la_SOURCES = \
	ccode.vala.stamp \
	valaccodeassignment.c \
	valaccodeassignment.h \
	valaccodeassignment.vala \
	valaccodebinaryexpression.c \
	valaccodebinaryexpression.h \
	valaccodebinaryexpression.vala \
	valaccodeblock.c \
	valaccodeblock.h \
	valaccodeblock.vala \
	valaccodebreakstatement.c \
	valaccodebreakstatement.h \
	valaccodebreakstatement.vala \
	valaccodecasestatement.c \
	valaccodecasestatement.h \
	valaccodecasestatement.vala \
	valaccodecastexpression.c \
	valaccodecastexpression.h \
	valaccodecastexpression.vala \
	valaccodecommaexpression.c \
	valaccodecommaexpression.h \
	valaccodecommaexpression.vala \
	valaccodecomment.c \
	valaccodecomment.h \
	valaccodecomment.vala \
	valaccodeconditionalexpression.c \
	valaccodeconditionalexpression.h \
	valaccodeconditionalexpression.vala \
	valaccodeconstant.c \
	valaccodeconstant.h \
	valaccodeconstant.vala \
	valaccodecontinuestatement.c \
	valaccodecontinuestatement.h \
	valaccodecontinuestatement.vala \
	valaccodedeclaration.c \
	valaccodedeclaration.h \
	valaccodedeclaration.vala \
	valaccodedeclarator.c \
	valaccodedeclarator.h \
	valaccodedeclarator.vala \
	valaccodedostatement.c \
	valaccodedostatement.h \
	valaccodedostatement.vala \
	valaccodeemptystatement.c \
	valaccodeemptystatement.h \
	valaccodeemptystatement.vala \
	valaccodeenum.c \
	valaccodeenum.h \
	valaccodeenum.vala \
	valaccodeexpression.c \
	valaccodeexpression.h \
	valaccodeexpression.vala \
	valaccodeexpressionstatement.c \
	valaccodeexpressionstatement.h \
	valaccodeexpressionstatement.vala \
	valaccodeformalparameter.c \
	valaccodeformalparameter.h \
	valaccodeformalparameter.vala \
	valaccodeforstatement.c \
	valaccodeforstatement.h \
	valaccodeforstatement.vala \
	valaccodefragment.c \
	valaccodefragment.h \
	valaccodefragment.vala \
	valaccodefunction.c \
	valaccodefunction.h \
	valaccodefunction.vala \
	valaccodefunctioncall.c \
	valaccodefunctioncall.h \
	valaccodefunctioncall.vala \
	valaccodefunctiondeclarator.c \
	valaccodefunctiondeclarator.h \
	valaccodefunctiondeclarator.vala \
	valaccodegotostatement.c \
	valaccodegotostatement.h \
	valaccodegotostatement.vala \
	valaccodeidentifier.c \
	valaccodeidentifier.h \
	valaccodeidentifier.vala \
	valaccodeifstatement.c \
	valaccodeifstatement.h \
	valaccodeifstatement.vala \
	valaccodeincludedirective.c \
	valaccodeincludedirective.h \
	valaccodeincludedirective.vala \
	valaccodeinitializerlist.c \
	valaccodeinitializerlist.h \
	valaccodeinitializerlist.vala \
	valaccodelabel.c \
	valaccodelabel.h \
	valaccodelabel.vala \
	valaccodelinedirective.c \
	valaccodelinedirective.h \
	valaccodelinedirective.vala \
	valaccodemacroreplacement.c \
	valaccodemacroreplacement.h \
	valaccodemacroreplacement.vala \
	valaccodememberaccess.c \
	valaccodememberaccess.h \
	valaccodememberaccess.vala \
	valaccodemodifiers.c \
	valaccodemodifiers.h \
	valaccodemodifiers.vala \
	valaccodenewline.c \
	valaccodenewline.h \
	valaccodenewline.vala \
	valaccodenode.c \
	valaccodenode.h \
	valaccodenode.vala \
	valaccodeoncesection.c \
	valaccodeoncesection.h \
	valaccodeoncesection.vala \
	valaccodeparenthesizedexpression.c \
	valaccodeparenthesizedexpression.h \
	valaccodeparenthesizedexpression.vala \
	valaccodereturnstatement.c \
	valaccodereturnstatement.h \
	valaccodereturnstatement.vala \
	valaccodestatement.c \
	valaccodestatement.h \
	valaccodestatement.vala \
	valaccodestruct.c \
	valaccodestruct.h \
	valaccodestruct.vala \
	valaccodeswitchstatement.c \
	valaccodeswitchstatement.h \
	valaccodeswitchstatement.vala \
	valaccodetypedefinition.c \
	valaccodetypedefinition.h \
	valaccodetypedefinition.vala \
	valaccodeunaryexpression.c \
	valaccodeunaryexpression.h \
	valaccodeunaryexpression.vala \
	valaccodevariabledeclarator.c \
	valaccodevariabledeclarator.h \
	valaccodevariabledeclarator.vala \
	valaccodewhilestatement.c \
	valaccodewhilestatement.h \
	valaccodewhilestatement.vala \
	valaccodewriter.c \
	valaccodewriter.h \
	valaccodewriter.vala \
	valaccodeelementaccess.c \
	valaccodeelementaccess.h \
	valaccodeelementaccess.vala \
	$(NULL)

ccodeincludedir = $(includedir)/vala-1.0/ccode

ccodeinclude_HEADERS = \
	valaccodeassignment.h \
	valaccodebinaryexpression.h \
	valaccodeblock.h \
	valaccodebreakstatement.h \
	valaccodecasestatement.h \
	valaccodecastexpression.h \
	valaccodecommaexpression.h \
	valaccodecomment.h \
	valaccodeconditionalexpression.h \
	valaccodeconstant.h \
	valaccodecontinuestatement.h \
	valaccodedeclaration.h \
	valaccodedeclarator.h \
	valaccodedostatement.h \
	valaccodeemptystatement.h \
	valaccodeenum.h \
	valaccodeexpression.h \
	valaccodeexpressionstatement.h \
	valaccodeformalparameter.h \
	valaccodeforstatement.h \
	valaccodefragment.h \
	valaccodefunction.h \
	valaccodefunctioncall.h \
	valaccodefunctiondeclarator.h \
	valaccodegotostatement.h \
	valaccodeidentifier.h \
	valaccodeifstatement.h \
	valaccodeincludedirective.h \
	valaccodeinitializerlist.h \
	valaccodelabel.h \
	valaccodelinedirective.h \
	valaccodemacroreplacement.h \
	valaccodememberaccess.h \
	valaccodemodifiers.h \
	valaccodenewline.h \
	valaccodenode.h \
	valaccodeoncesection.h \
	valaccodeparenthesizedexpression.h \
	valaccodereturnstatement.h \
	valaccodestatement.h \
	valaccodestruct.h \
	valaccodeswitchstatement.h \
	valaccodetypedefinition.h \
	valaccodeunaryexpression.h \
	valaccodevariabledeclarator.h \
	valaccodewhilestatement.h \
	valaccodewriter.h \
	valaccodeelementaccess.h \
	$(NULL)

ccode.vala ccode.vala.stamp: $(filter %.vala,$(libvalaccode_la_SOURCES))
	$(VALAC) --vapidir $(srcdir)/../vapi --library ccode $^
	touch $@

libvalaccode_la_LIBADD = \
	$(GLIB_LIBS) \
	$(NULL)

EXTRA_DIST = ccode.vala ccode.vala.stamp
