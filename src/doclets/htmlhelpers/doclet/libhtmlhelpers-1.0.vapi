/* libhtmlhelpers-1.0.vapi generated by valac, do not modify. */

[CCode (cprefix = "Valadoc", lower_case_cprefix = "valadoc_")]
namespace Valadoc {
	[CCode (cprefix = "ValadocHtml", lower_case_cprefix = "valadoc_html_")]
	namespace Html {
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public abstract class BasicDoclet : Valadoc.Doclet {
			protected Valadoc.Html.HtmlRenderer _renderer;
			protected Valadoc.Langlet langlet;
			protected Valadoc.Settings settings;
			public BasicDoclet ();
			protected void fetch_subnamespace_names (Valadoc.NamespaceHandler pos, Gee.ArrayList<Valadoc.Namespace> lst);
			protected string get_img_path (Valadoc.Api.Node element);
			protected string get_img_real_path (Valadoc.Api.Node element);
			protected string? get_link (Valadoc.Api.Node element, Valadoc.Api.Node? pos);
			protected void write_child_classes (GLib.FileStream file, Valadoc.ClassHandler clh, Valadoc.Api.Node? mself);
			protected void write_child_constants (GLib.FileStream file, Valadoc.ConstantHandler ch, Valadoc.Api.Node? mself);
			protected void write_child_construction_methods (GLib.FileStream file, Valadoc.ConstructionMethodHandler cmh, Valadoc.Api.Node? mself);
			protected void write_child_delegates (GLib.FileStream file, Valadoc.DelegateHandler dh, Valadoc.Api.Node? mself);
			protected void write_child_dependencies (GLib.FileStream file, Valadoc.Package package, Valadoc.Api.Node? mself);
			protected void write_child_enums (GLib.FileStream file, Valadoc.EnumHandler eh, Valadoc.Api.Node? mself);
			public void write_child_error_values (GLib.FileStream file, Valadoc.ErrorDomain errdom);
			protected void write_child_errordomains (GLib.FileStream file, Valadoc.ErrorDomainHandler eh, Valadoc.Api.Node? mself);
			protected void write_child_fields (GLib.FileStream file, Valadoc.FieldHandler fh, Valadoc.Api.Node? mself);
			protected void write_child_interfaces (GLib.FileStream file, Valadoc.InterfaceHandler ih, Valadoc.Api.Node? mself);
			protected void write_child_methods (GLib.FileStream file, Valadoc.MethodHandler mh, Valadoc.Api.Node? mself);
			protected void write_child_namespaces (GLib.FileStream file, Valadoc.NamespaceHandler nh, Valadoc.Api.Node? mself);
			protected void write_child_properties (GLib.FileStream file, Valadoc.PropertyHandler ph, Valadoc.Api.Node? mself);
			protected void write_child_signals (GLib.FileStream file, Valadoc.SignalHandler sh, Valadoc.Api.Node? mself);
			protected void write_child_static_methods (GLib.FileStream file, Valadoc.MethodHandler mh, Valadoc.Api.Node? mself);
			protected void write_child_structs (GLib.FileStream file, Valadoc.StructHandler struh, Valadoc.Api.Node? mself);
			public void write_class_content (GLib.FileStream file, Valadoc.Class cl, Valadoc.Api.Node? mself);
			public void write_constant_content (GLib.FileStream file, Valadoc.Constant constant, Valadoc.ConstantHandler parent);
			public void write_delegate_content (GLib.FileStream file, Valadoc.Delegate del);
			public void write_enum_content (GLib.FileStream file, Valadoc.Enum en, Valadoc.Api.Node? mself);
			public void write_error_domain_content (GLib.FileStream file, Valadoc.ErrorDomain errdom, Valadoc.Api.Node? mself);
			public void write_field_content (GLib.FileStream file, Valadoc.Field field, Valadoc.FieldHandler parent);
			protected void write_file_content (GLib.FileStream file, Valadoc.Package f, Valadoc.Api.Node? mself, Valadoc.WikiPage? wikipage = null);
			protected void write_file_footer (GLib.FileStream file);
			protected void write_file_header (GLib.FileStream file, string css, string? title);
			protected void write_image_block (GLib.FileStream file, Valadoc.Api.Node element);
			public void write_interface_content (GLib.FileStream file, Valadoc.Interface iface, Valadoc.Api.Node? mself);
			public void write_method_content (GLib.FileStream file, Valadoc.Method m, Valadoc.MethodHandler parent);
			public void write_namespace_content (GLib.FileStream file, Valadoc.Namespace ns, Valadoc.Api.Node? mself);
			protected void write_namespace_note (GLib.FileStream file, Valadoc.Api.Node element);
			protected void write_navi_child_classes_without_childs (GLib.FileStream file, Valadoc.ClassHandler clh, Valadoc.Api.Node? mself);
			protected void write_navi_child_classes_without_childs_collection (GLib.FileStream file, Gee.Collection<Valadoc.Class> classes, Valadoc.Api.Node? mself);
			protected void write_navi_child_constants (GLib.FileStream file, Valadoc.ConstantHandler ch, Valadoc.Api.Node? mself);
			protected void write_navi_child_constants_collection (GLib.FileStream file, Gee.Collection<Valadoc.Constant> constants, Valadoc.Api.Node? mself);
			protected void write_navi_child_construction_methods (GLib.FileStream file, Valadoc.ConstructionMethodHandler cmh, Valadoc.Api.Node? mself);
			protected void write_navi_child_construction_methods_collection (GLib.FileStream file, Gee.Collection<Valadoc.Method> methods, Valadoc.Api.Node? mself);
			protected void write_navi_child_delegates (GLib.FileStream file, Valadoc.DelegateHandler delh, Valadoc.Api.Node? mself);
			protected void write_navi_child_delegates_collection (GLib.FileStream file, Gee.Collection<Valadoc.Delegate> delegates, Valadoc.Api.Node? mself);
			protected void write_navi_child_enums_without_childs (GLib.FileStream file, Valadoc.EnumHandler eh, Valadoc.Api.Node? mself);
			protected void write_navi_child_enums_without_childs_collection (GLib.FileStream file, Gee.Collection<Valadoc.Enum> enums, Valadoc.Api.Node? mself);
			protected void write_navi_child_error_domains_without_childs (GLib.FileStream file, Valadoc.Namespace errdomh, Valadoc.Api.Node? mself);
			protected void write_navi_child_error_domains_without_childs_collection (GLib.FileStream file, Gee.Collection<Valadoc.ErrorDomain> errordomains, Valadoc.Api.Node? mself);
			protected void write_navi_child_fields (GLib.FileStream file, Valadoc.FieldHandler fh, Valadoc.Api.Node? mself);
			protected void write_navi_child_fields_collection (GLib.FileStream file, Gee.Collection<Valadoc.Field> fields, Valadoc.Api.Node? mself);
			protected void write_navi_child_interfaces_without_childs (GLib.FileStream file, Valadoc.Namespace ifh, Valadoc.Api.Node? mself);
			protected void write_navi_child_interfaces_without_childs_collection (GLib.FileStream file, Gee.Collection<Valadoc.Interface> interfaces, Valadoc.Api.Node? mself);
			protected void write_navi_child_methods (GLib.FileStream file, Valadoc.MethodHandler mh, Valadoc.Api.Node? mself);
			protected void write_navi_child_methods_collection (GLib.FileStream file, Gee.Collection<Valadoc.Method> methods, Valadoc.Api.Node? mself);
			protected void write_navi_child_namespaces (GLib.FileStream file, Valadoc.Namespace ns, Valadoc.Api.Node? mself);
			protected void write_navi_child_namespaces_inline (GLib.FileStream file, Valadoc.Namespace ns, Valadoc.Api.Node? mself);
			protected void write_navi_child_namespaces_inline_withouth_block (GLib.FileStream file, Valadoc.Namespace ns, Valadoc.Api.Node? mself);
			protected void write_navi_child_namespaces_without_childs (GLib.FileStream file, Valadoc.NamespaceHandler nsh, Valadoc.Api.Node? mself);
			protected void write_navi_child_properties (GLib.FileStream file, Valadoc.PropertyHandler ph, Valadoc.Api.Node? mself);
			protected void write_navi_child_signals (GLib.FileStream file, Valadoc.SignalHandler sh, Valadoc.Api.Node? mself);
			protected void write_navi_child_static_methods (GLib.FileStream file, Valadoc.MethodHandler mh, Valadoc.Api.Node? mself);
			protected void write_navi_child_static_methods_collection (GLib.FileStream file, Gee.Collection<Valadoc.Method> methods, Valadoc.Api.Node? mself);
			protected void write_navi_child_structs_without_childs (GLib.FileStream file, Valadoc.StructHandler strh, Valadoc.Api.Node? mself);
			protected void write_navi_child_structs_without_childs_collection (GLib.FileStream file, Gee.Collection<Valadoc.Struct> structs, Valadoc.Api.Node? mself);
			protected void write_navi_class (GLib.FileStream file, Valadoc.Class cl, Valadoc.Api.Node? mself);
			protected void write_navi_class_inline (GLib.FileStream file, Valadoc.Class cl, Valadoc.Api.Node? mself);
			protected void write_navi_constant (GLib.FileStream file, Valadoc.Constant c);
			protected void write_navi_delegate (GLib.FileStream file, Valadoc.Delegate del);
			protected void write_navi_entry (GLib.FileStream file, Valadoc.Api.Node element, Valadoc.Api.Node? pos, string style, bool link, bool full_name = false);
			protected void write_navi_entry_html_template (GLib.FileStream file, string style, string content);
			protected void write_navi_entry_html_template_with_link (GLib.FileStream file, string style, string link, string content);
			protected void write_navi_enum (GLib.FileStream file, Valadoc.Enum en, Valadoc.Api.Node? mself);
			protected void write_navi_enum_inline (GLib.FileStream file, Valadoc.Enum en, Valadoc.Api.Node? mself);
			protected void write_navi_error_domain (GLib.FileStream file, Valadoc.ErrorDomain errdom, Valadoc.Api.Node? mself);
			protected void write_navi_error_domain_inline (GLib.FileStream file, Valadoc.ErrorDomain errdom, Valadoc.Api.Node? mself = null);
			protected void write_navi_field (GLib.FileStream file, Valadoc.Field f);
			protected void write_navi_file (GLib.FileStream file, Valadoc.Package efile, Valadoc.Api.Node? pos);
			protected void write_navi_interface (GLib.FileStream file, Valadoc.Interface iface, Valadoc.Api.Node? mself);
			protected void write_navi_interface_inline (GLib.FileStream file, Valadoc.Interface iface, Valadoc.Api.Node? mself);
			protected void write_navi_method (GLib.FileStream file, Valadoc.Method m);
			protected void write_navi_namespace (GLib.FileStream file, Valadoc.Namespace ns);
			public void write_navi_packages (GLib.FileStream file, Valadoc.Tree tree);
			public void write_navi_packages_inline (GLib.FileStream file, Valadoc.Tree tree);
			protected void write_navi_property (GLib.FileStream file, Valadoc.Property prop);
			protected void write_navi_signal (GLib.FileStream file, Valadoc.Signal sig);
			protected void write_navi_struct (GLib.FileStream file, Valadoc.Struct stru, Valadoc.Api.Node? mself);
			protected void write_navi_struct_inline (GLib.FileStream file, Valadoc.Struct stru, Valadoc.Api.Node? mself);
			protected void write_navi_top_entry (GLib.FileStream file, Valadoc.Api.Node element, Valadoc.Api.Node? mself);
			protected void write_package_note (GLib.FileStream file, Valadoc.Api.Node element);
			public void write_packages_content (GLib.FileStream file, Valadoc.Tree tree);
			public void write_property_content (GLib.FileStream file, Valadoc.Property prop);
			public void write_signal_content (GLib.FileStream file, Valadoc.Signal sig);
			public void write_struct_content (GLib.FileStream file, Valadoc.Struct stru, Valadoc.Api.Node? mself);
			protected void write_top_element_template (GLib.FileStream file, string link);
			protected void write_top_elements (GLib.FileStream file, Valadoc.Api.Node element, Valadoc.Api.Node? mself);
			protected void write_wiki_pages (Valadoc.Tree tree, string css_path_wiki, string contentp);
		}
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public class BasicLanglet : Valadoc.Langlet {
			public BasicLanglet (Valadoc.Settings settings);
			public override void write_array (Valadoc.Array arr, void* fptr, Valadoc.Api.Node pos);
			public override void write_class (Valadoc.Class cl, void* ptr);
			public override void write_constant (Valadoc.Constant constant, Valadoc.ConstantHandler parent, void* ptr);
			public override void write_delegate (Valadoc.Delegate del, void* ptr);
			public override void write_enum (Valadoc.Enum en, void* ptr);
			public override void write_enum_value (Valadoc.EnumValue enval, void* ptr);
			public override void write_error_code (Valadoc.ErrorCode errcode, void* ptr);
			public override void write_error_domain (Valadoc.ErrorDomain errdom, void* ptr);
			public override void write_field (Valadoc.Field field, Valadoc.FieldHandler parent, void* ptr);
			public override void write_file (Valadoc.Package file, void* ptr);
			public override void write_formal_parameter (Valadoc.FormalParameter param, void* ptr);
			public override void write_inheritance_list (Valadoc.Api.Node dtype, void* ptr);
			public override void write_interface (Valadoc.Interface iface, void* ptr);
			public override void write_method (void* ptr, Valadoc.Method m, Valadoc.MethodHandler parent);
			public override void write_namespace (Valadoc.Namespace ns, void* ptr);
			public override void write_parameter_list (Valadoc.ParameterListHandler thandler, void* ptr);
			public override void write_pointer (Valadoc.Pointer ptr, void* fptr, Valadoc.Api.Node pos);
			public override void write_property (Valadoc.Property prop, void* ptr);
			public override void write_property_accessor (Valadoc.PropertyAccessor propac, void* ptr);
			public override void write_signal (Valadoc.Signal sig, void* ptr);
			public override void write_struct (Valadoc.Struct stru, void* ptr);
			public override void write_template_parameters (Valadoc.TemplateParameterListHandler thandler, void* ptr);
			public override void write_type_parameter (Valadoc.TypeParameter param, void* ptr);
			public override void write_type_reference (Valadoc.TypeReference type_reference, void* ptr);
			public Valadoc.Settings settings { get; set construct; }
		}
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public class HtmlRenderer : Valadoc.Content.ContentRenderer {
			public HtmlRenderer (Valadoc.Html.BasicDoclet doclet);
			public override void render (Valadoc.Content.ContentElement element);
			public override void render_children (Valadoc.Content.ContentElement element);
			public void set_container (Valadoc.Documentation? container);
			public void set_filestream (GLib.FileStream stream);
			public override void visit_comment (Valadoc.Content.Comment element);
			public override void visit_embedded (Valadoc.Content.Embedded element);
			public override void visit_headline (Valadoc.Content.Headline element);
			public override void visit_link (Valadoc.Content.Link element);
			public override void visit_list (Valadoc.Content.List element);
			public override void visit_list_item (Valadoc.Content.ListItem element);
			public override void visit_page (Valadoc.Content.Page element);
			public override void visit_paragraph (Valadoc.Content.Paragraph element);
			public override void visit_run (Valadoc.Content.Run element);
			public override void visit_source_code (Valadoc.Content.SourceCode element);
			public override void visit_symbol_link (Valadoc.Content.SymbolLink element);
			public override void visit_table (Valadoc.Content.Table element);
			public override void visit_table_cell (Valadoc.Content.TableCell element);
			public override void visit_table_row (Valadoc.Content.TableRow element);
			public override void visit_taglet (Valadoc.Content.Taglet element);
			public override void visit_text (Valadoc.Content.Text element);
		}
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public delegate string? HtmlLink (Valadoc.Settings settings, Valadoc.Documentation element, Valadoc.Documentation? pos);
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public static Valadoc.Html.HtmlLink get_html_link_imp;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_basic_type;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_code_definition;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_abstract_class;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_abstract_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_abstract_property;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_class;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_constant;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_construction_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_delegate;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_enum;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_enumvalue;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_errorcode;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_errordomain;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_field;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_interface;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_namespace;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_property;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_signal;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_static_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_struct;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_virtual_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_link_virtual_property;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_content_literal;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_diagram;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_enum_table;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_enum_table_name;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_enum_table_text;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_errordomain_table;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_errordomain_table_name;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_errordomain_table_text;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_exception_table;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_headline_hr;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_hr;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_abstract_class;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_abstract_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_abstract_property;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_brief_description;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_class;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_constant;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_construction_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_delegate;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_enum;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_enumvalue;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_errorcode;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_errordomain;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_fields;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_interface;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_namespace;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_package;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_property;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_signal;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_static_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_struct;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_virtual_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_inline_navigation_virtual_property;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_keyword;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_cl;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_del;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_en;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_errdom;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_field;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_iface;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_m;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_ns;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_prop;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_sig;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_list_stru;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_abstract_class;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_abstract_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_abstract_prop;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_class;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_constant;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_construction_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_creation_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_del;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_enum;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_enval;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_errdomcode;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_error_domain;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_field;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_hr;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_iface;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_link;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_namespace;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_package;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_package_index;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_prop;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_sig;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_static_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_struct;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_virtual_method;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_navi_virtual_prop;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_notification_area;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_optional_parameter;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_other_type;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_parameter_table;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_parameter_table_name;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_parameter_table_text;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_see_list;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_site_header;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_source_sample;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_style_body;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_style_content;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_style_navigation;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_title;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public const string css_wiki_table;
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public static string get_html_content_link_css_class (Valadoc.Api.Item element);
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public static string get_html_inline_navigation_link_css_class (Valadoc.Api.Item element);
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public static string? get_html_link (Valadoc.Settings settings, Valadoc.Documentation element, Valadoc.Documentation? pos);
		[CCode (cheader_filename = "libhtmlhelpers-1.0.h")]
		public static string get_html_type_link (Valadoc.Settings settings, Valadoc.Documentation element, Valadoc.Documentation? pos);
	}
}
