/* methods_parameter_anonymous_delegate_optional.c generated by valac, the Vala compiler
 * generated from methods_parameter_anonymous_delegate_optional.vala, do not modify */

#include <glib.h>

#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef gint (*__delegate0_) (gint p0, gpointer user_data);
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

VALA_EXTERN gint f (__delegate0_ d,
        gpointer d_target);
static void _vala_main (void);
static gint __lambda5_ (gint a);
static gint ___lambda5____delegate0_ (gint p0,
                               gpointer self);
static gint _lambda4_ (gint a);
static gint __lambda4____delegate0_ (gint p0,
                              gpointer self);

gint
f (__delegate0_ d,
   gpointer d_target)
{
	gint result;
	result = d (7, d_target);
	return result;
}

static gint
__lambda5_ (gint a)
{
	gint result;
	result = a;
	return result;
}

static gint
___lambda5____delegate0_ (gint p0,
                          gpointer self)
{
	gint result;
	result = __lambda5_ (p0);
	return result;
}

static gint
_lambda4_ (gint a)
{
	gint result;
	result = 2 * a;
	return result;
}

static gint
__lambda4____delegate0_ (gint p0,
                         gpointer self)
{
	gint result;
	result = _lambda4_ (p0);
	return result;
}

static void
_vala_main (void)
{
	_vala_assert (f (___lambda5____delegate0_, NULL) == 7, "f (a => a) == 7");
	_vala_assert (f (__lambda4____delegate0_, NULL) == 14, "f () == 14");
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

