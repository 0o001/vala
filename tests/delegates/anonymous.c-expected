/* delegates_anonymous.c generated by valac, the Vala compiler
 * generated from delegates_anonymous.vala, do not modify */

#include <glib.h>

#if !defined(VALA_EXTERN)
#if defined(_WIN32) || defined(__CYGWIN__)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

typedef gint (*__delegate0_) (gint p0, gint p1, gpointer user_data);
#define _vala_assert(expr, msg) if G_LIKELY (expr) ; else g_assertion_message_expr (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);
#define _vala_return_if_fail(expr, msg) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return; }
#define _vala_return_val_if_fail(expr, msg, val) if G_LIKELY (expr) ; else { g_return_if_fail_warning (G_LOG_DOMAIN, G_STRFUNC, msg); return val; }
#define _vala_warn_if_fail(expr, msg) if G_LIKELY (expr) ; else g_warn_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, msg);

static void _vala_main (void);
VALA_EXTERN void f (__delegate0_ abc,
        gpointer abc_target);
static gint __lambda4_ (gint a,
                 gint b);
static gint ___lambda4____delegate0_ (gint p0,
                               gint p1,
                               gpointer self);

static gint
__lambda4_ (gint a,
            gint b)
{
	gint result;
	result = a + b;
	return result;
}

static gint
___lambda4____delegate0_ (gint p0,
                          gint p1,
                          gpointer self)
{
	gint result;
	result = __lambda4_ (p0, p1);
	return result;
}

static void
_vala_main (void)
{
	f (___lambda4____delegate0_, NULL);
}

int
main (int argc,
      char ** argv)
{
	_vala_main ();
	return 0;
}

void
f (__delegate0_ abc,
   gpointer abc_target)
{
	_vala_assert (abc (1, 2, abc_target) == 3, "abc (1, 2) == 3");
}

